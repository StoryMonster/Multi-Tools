# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class NR_RRC_PDU_Pre3GPP_Description:

    _name_  = 'NR-RRC-PDU-Pre3GPP-Description'
    _oid_   = []
    
    _obj_ = [
        'BCCH-BCH-Message',
        'BCCH-BCH-MessageType',
        'BCCH-DL-SCH-Message',
        'BCCH-DL-SCH-MessageType',
        'PCCH-Message',
        'PCCH-MessageType',
        'DL-CCCH-Message',
        'DL-CCCH-MessageType',
        'DL-DCCH-Message',
        'DL-DCCH-MessageType',
        'UL-CCCH-Message',
        'UL-CCCH-MessageType',
        'UL-DCCH-Message',
        'UL-DCCH-MessageType',
        'MIB',
        'MeasurementReport',
        'MeasurementReport-IEs',
        'DLInformationTransfer',
        'DLInformationTransfer-IEs',
        'ULInformationTransfer',
        'ULInformationTransfer-IEs',
        'Paging',
        'PagingRecordList',
        'PagingRecord',
        'PagingUE-Identity',
        'RRCReestablishment',
        'RRCReestablishment-IEs',
        'RRCReestablishmentComplete',
        'RRCReestablishmentComplete-IEs',
        'RRCReestablishmentReject',
        'RRCReestablishmentReject-IEs',
        'RRCReestablishmentRequest',
        'RRCReestablishmentRequest-IEs',
        'ReestabUE-Identity',
        'ReestablishmentCause',
        'RRCReconfiguration',
        'RRCReconfiguration-IEs',
        'RRCReconfigurationComplete',
        'RRCReconfigurationComplete-IEs',
        'RRCReject',
        'RRCReject-IEs',
        'RejectWaitTime',
        'RRCRelease',
        'RRCRelease-IEs',
        'RedirectedCarrierInfo',
        'SuspendConfig',
        'PagingCycle',
        'IdleModePriorities',
        'FreqPriorityListEUTRA',
        'FreqPriorityListNR',
        'FreqPriorityEUTRA',
        'FreqPriorityNR',
        'TrackingAreaCode',
        'RRCSetupRequest',
        'RRCSetupRequest-IEs',
        'InitialUE-Identity',
        'EstablishmentCause',
        'RRCResume',
        'RRCResume-IEs',
        'RRCResumeRequest',
        'RRCResumeRequest-IEs',
        'ResumeCause',
        'RRCResumeComplete',
        'RRCResumeComplete-IEs',
        'RRCSetup',
        'RRCSetup-IEs',
        'RRCSetupComplete',
        'RRCSetupComplete-IEs',
        'RegisteredAMF',
        'RRCSuspend',
        'RRCSuspend-IEs',
        'RAN-NotificationAreaInfo',
        'RAN-AreaConfigList',
        'RAN-AreaConfig',
        'RAN-AreaCode',
        'SecurityModeCommand',
        'SecurityModeCommand-IEs',
        'SecurityConfigSMC',
        'SecurityModeComplete',
        'SecurityModeComplete-IEs',
        'SecurityModeFailure',
        'SecurityModeFailure-IEs',
        'SIB1-March',
        'SIB1',
        'CellAccessRelatedInfo',
        'PLMN-IdentityInfoList',
        'PLMN-IdentityInfo',
        'Q-QualMin',
        'Q-RxLevMin',
        'ServingCellConfigCommonSIB',
        'UplinkConfigCommonSIB',
        'BWP-UplinkCommonSIB',
        'SI-Message',
        'SetupRelease',
        'AdditionalSpectrumEmission',
        'Alpha',
        'AMF-RegionID',
        'AMF-SetID',
        'AMF-Pointer',
        'ARFCN-ValueNR',
        'ARFCN-ValueEUTRA',
        'BWP',
        'BWP-Uplink',
        'BWP-UplinkCommon',
        'BWP-UplinkDedicated',
        'BWP-Downlink',
        'BWP-DownlinkCommon',
        'BWP-DownlinkDedicated',
        'BWP-Id',
        'BeamFailureRecoveryConfig',
        'PRACH-ResourceDedicatedBFR',
        'BFR-SSB-Resource',
        'BFR-CSIRS-Resource',
        'CellGroupConfig',
        'CellGroupId',
        'RLC-Bearer-Config',
        'LogicalChannelIdentity',
        'PhysicalCellGroupConfig',
        'SpCellConfig',
        'ReconfigurationWithSync',
        'SCellConfig',
        'CellReselectionPriority',
        'CodebookConfig',
        'ConfiguredGrantConfig',
        'CG-UCI-OnPUSCH',
        'ControlResourceSet',
        'ControlResourceSetId',
        'CrossCarrierSchedulingConfig',
        'CSI-AperiodicTriggerStateList',
        'CSI-AperiodicTriggerState',
        'CSI-AssociatedReportConfigInfo',
        'CSI-FrequencyOccupation',
        'CSI-IM-Resource',
        'CSI-IM-ResourceId',
        'CSI-IM-ResourceSet',
        'CSI-IM-ResourceSetId',
        'CSI-MeasConfig',
        'maxNrofNZP-CSI-RS-ResourceSets',
        'maxNrofNZP-CSI-RS-ResourceSets-1',
        'maxNrofCSI-SSB-ResourceSets',
        'maxNrofCSI-SSB-ResourceSets-1',
        'maxNrofCSI-IM-ResourceSets',
        'maxNrofCSI-IM-ResourceSets-1',
        'CSI-ReportConfig',
        'CSI-ReportPeriodicityAndOffset',
        'PUCCH-CSI-Resource',
        'PortIndexFor8Ranks',
        'PortIndex8',
        'PortIndex4',
        'PortIndex2',
        'maxNrofNZP-CSI-RS-ResourcesPerConfig',
        'CSI-ReportConfigId',
        'CSI-ResourceConfig',
        'CSI-ResourceConfigId',
        'CSI-ResourcePeriodicityAndOffset',
        'CSI-RS-ResourceMapping',
        'CSI-SemiPersistentOnPUSCH-TriggerStateList',
        'CSI-SemiPersistentOnPUSCH-TriggerState',
        'maxNrOfSemiPersistentPUSCH-Triggers',
        'CSI-SSB-ResourceSetId',
        'CSI-SSB-ResourceSet',
        'DedicatedInfoNAS',
        'DMRS-DownlinkConfig',
        'DMRS-UplinkConfig',
        'DownlinkPreemption',
        'INT-ConfigurationPerServingCell',
        'DRB-Identity',
        'EUTRA-MBSFN-SubframeConfigList',
        'EUTRA-MBSFN-SubframeConfig',
        'FilterCoefficient',
        'FreqBandIndicatorNR',
        'FrequencyInfoDL',
        'FrequencyInfoUL',
        'GSCN-ValueNR',
        'Hysteresis',
        'I-RNTI-Value',
        'LogicalChannelConfig',
        'MAC-CellGroupConfig',
        'DRX-Config',
        'PHR-Config',
        'TAG-Config',
        'TAG-ToAddMod',
        'TAG-Id',
        'TimeAlignmentTimer',
        'BSR-Config',
        'MeasConfig',
        'MeasObjectToRemoveList',
        'MeasIdToRemoveList',
        'ReportConfigToRemoveList',
        'MeasGapConfig',
        'GapConfig',
        'MeasId',
        'MeasIdToAddModList',
        'MeasIdToAddMod',
        'MeasObjectId',
        'MeasObjectNR',
        'ReferenceSignalConfig',
        'SSB-ConfigMobility',
        'CSI-RS-ResourceConfigMobility',
        'CSI-RS-CellMobility',
        'CSI-RS-Resource-Mobility',
        'CSI-RS-Index',
        'Q-OffsetRangeList',
        'SSB-ToMeasure',
        'ThresholdNR',
        'CellsToAddModList',
        'CellsToAddMod',
        'BlackCellsToAddModList',
        'BlackCellsToAddMod',
        'WhiteCellsToAddModList',
        'WhiteCellsToAddMod',
        'MeasObjectToAddModList',
        'MeasObjectToAddMod',
        'MeasResults',
        'MeasResultServFreqList',
        'MeasResultServFreq',
        'MeasResultListNR',
        'MeasResultNR',
        'MeasQuantityResults',
        'ResultsPerSSB-IndexList',
        'ResultsPerSSB-Index',
        'ResultsPerCSI-RS-IndexList',
        'ResultsPerCSI-RS-Index',
        'MeasResultSCG-Failure',
        'MeasResultServFreqList2NR',
        'MeasResultServFreq2NR',
        'MeasResultList2NR',
        'MeasResult2NR',
        'MeasResultCellListSFTD',
        'MeasResultCellSFTD',
        'MultiFrequencyBandListNR',
        'NextHopChainingCount',
        'NG-5G-S-TMSI',
        'NZP-CSI-RS-ResourceSet',
        'NZP-CSI-RS-ResourceSetId',
        'NZP-CSI-RS-Resource',
        'NZP-CSI-RS-ResourceId',
        'P-Max',
        'PCI-List',
        'PCI-Range',
        'PCI-RangeIndex',
        'PCI-RangeIndexList',
        'PDCCH-Config',
        'PDCCH-ConfigCommon',
        'PDCP-Config',
        'UL-DataSplitThreshold',
        'PDSCH-Config',
        'PDSCH-ConfigCommon',
        'PDSCH-ServingCellConfig',
        'PDSCH-CodeBlockGroupTransmission',
        'PDSCH-TimeDomainResourceAllocation',
        'PLMN-Identity',
        'MCC',
        'MNC',
        'MCC-MNC-Digit',
        'PhysCellId',
        'PRB-Id',
        'PTRS-DownlinkConfig',
        'PTRS-UplinkConfig',
        'PUCCH-Config',
        'PUCCH-FormatConfig',
        'PUCCH-MaxCodeRate',
        'PUCCH-SpatialRelationInfo',
        'PUCCH-SpatialRelationInfoId',
        'PUCCH-ResourceSet',
        'PUCCH-ResourceSetId',
        'PUCCH-Resource',
        'PUCCH-ResourceId',
        'PUCCH-format0',
        'PUCCH-format1',
        'PUCCH-format2',
        'PUCCH-format3',
        'PUCCH-format4',
        'PUCCH-ConfigCommon',
        'PUCCH-PowerControl',
        'P0-PUCCH',
        'P0-PUCCH-Id',
        'PUCCH-PathlossReferenceRS',
        'PUCCH-PathlossReferenceRS-Id',
        'PUCCH-TPC-CommandConfig',
        'PUSCH-Config',
        'UCI-OnPUSCH',
        'PUSCH-ConfigCommon',
        'PUSCH-PowerControl',
        'P0-PUSCH-AlphaSet',
        'P0-PUSCH-AlphaSetId',
        'PUSCH-PathlossReferenceRS',
        'PUSCH-PathlossReferenceRS-Id',
        'SRI-PUSCH-PowerControl',
        'SRI-PUSCH-PowerControlId',
        'BetaOffsets',
        'PUSCH-ServingCellConfig',
        'PUSCH-CodeBlockGroupGransmission',
        'PUSCH-TimeDomainResourceAllocation',
        'PUSCH-TPC-CommandConfig',
        'Q-OffsetRange',
        'QuantityConfig',
        'QuantityConfigNR-List',
        'QuantityConfigNR',
        'QuantityConfigRS',
        'FilterConfig',
        'RACH-ConfigCommon',
        'RACH-ConfigGeneric',
        'RACH-ConfigDedicated',
        'CFRA-Resources',
        'CFRA-SSB-Resource',
        'CFRA-CSIRS-Resource',
        'RadioBearerConfig',
        'SRB-ToAddModList',
        'SRB-ToAddMod',
        'DRB-ToAddModList',
        'DRB-ToAddMod',
        'DRB-ToReleaseList',
        'SecurityConfig',
        'RadioLinkMonitoringConfig',
        'RadioLinkMonitoringRS',
        'RateMatchPattern',
        'RateMatchPatternId',
        'RateMatchPatternLTE-CRS',
        'ReportConfigId',
        'ReportConfigNR',
        'EventTriggerConfig',
        'PeriodicalReportConfig',
        'NR-RS-Type',
        'MeasTriggerQuantity',
        'MeasTriggerQuantityOffset',
        'MeasReportQuantity',
        'ReportConfigToAddModList',
        'ReportConfigToAddMod',
        'ReportInterval',
        'RLC-Config',
        'UL-AM-RLC',
        'DL-AM-RLC',
        'UL-UM-RLC',
        'DL-UM-RLC',
        'T-PollRetransmit',
        'PollPDU',
        'PollByte',
        'T-Reassembly',
        'T-StatusProhibit',
        'SN-FieldLengthUM',
        'SN-FieldLengthAM',
        'RLF-TimersAndConstants',
        'RNTI-Value',
        'RSRP-Range',
        'RSRQ-Range',
        'SCellIndex',
        'SchedulingRequestConfig',
        'SchedulingRequestToAddMod',
        'SchedulingRequestId',
        'SchedulingRequestResourceConfig',
        'SchedulingRequestResourceId',
        'ScramblingId',
        'SCS-SpecificCarrier',
        'SDAP-Config',
        'QFI',
        'PDU-SessionID',
        'SearchSpace',
        'SearchSpaceId',
        'SecurityAlgorithmConfig',
        'IntegrityProtAlgorithm',
        'CipheringAlgorithm',
        'ServCellIndex',
        'ServingCellConfig',
        'UplinkConfig',
        'ServingCellConfigCommon',
        'UplinkConfigCommon',
        'SINR-Range',
        'SlotFormatCombinationsPerCell',
        'SlotFormatCombination',
        'SlotFormatCombinationId',
        'SlotFormatIndicator',
        'S-NSSAI',
        'SPS-Config',
        'SRB-Identity',
        'SRS-Config',
        'SRS-ResourceSet',
        'SRS-ResourceSetId',
        'SRS-Resource',
        'SRS-ResourceId',
        'SRS-PeriodicityAndOffset',
        'SRS-CarrierSwitching',
        'SRS-TPC-PDCCH-Config',
        'SRS-CC-SetIndex',
        'SSB-Index',
        'SubcarrierSpacing',
        'TCI-State',
        'QCL-Info',
        'TCI-StateId',
        'TDD-UL-DL-ConfigCommon',
        'TDD-UL-DL-ConfigDedicated',
        'TDD-UL-DL-SlotConfig',
        'TDD-UL-DL-SlotIndex',
        'TimeToTrigger',
        'ZP-CSI-RS-Resource',
        'ZP-CSI-RS-ResourceId',
        'ZP-CSI-RS-ResourceSet',
        'ZP-CSI-RS-ResourceSetId',
        'BandCombinationList',
        'BandCombination',
        'BandAndDL-ParametersList',
        'BandAndDL-Parameters',
        'BandCombinationParameters',
        'CA-ParametersNR',
        'MRDC-Parameters',
        'BandAndDL-ParametersEUTRA',
        'BandAndDL-ParametersNR',
        'IntraBandContiguousCC-InfoDL',
        'IntraBandContiguousCC-InfoDL-EUTRA',
        'BandCombinationParametersUL-List',
        'BandCombinationParametersUL',
        'BandParametersUL',
        'BandParametersUL-EUTRA',
        'BandParametersUL-NR',
        'IntraBandContiguousCC-InfoUL',
        'IntraBandContiguousCC-InfoUL-EUTRA',
        'BasebandCombinationParametersUL-List',
        'BasebandCombinationParametersUL',
        'BasebandParametersPerBandUL',
        'BasebandParametersPerCC-UL',
        'BasebandProcessingCombinationMRDC',
        'BasebandProcessingCombinationLink',
        'BasebandProcessingCombinationIndex',
        'CA-BandwidthClassNR',
        'CA-BandwidthClassEUTRA',
        'FreqBandIndicatorEUTRA',
        'FreqBandList',
        'FreqBandInformation',
        'FreqSeparationClass',
        'MIMO-LayersDL',
        'MIMO-LayersUL',
        'ModulationOrder',
        'RAT-Type',
        'SupportedBasebandProcessingCombination',
        'BasebandProcessingCombination',
        'BasebandParametersPerBandDL',
        'BasebandParametersPerCC-DL',
        'UE-CapabilityRAT-ContainerList',
        'UE-CapabilityRAT-Container',
        'UE-MRDC-Capability',
        'UE-MRDC-CapabilityAddXDD-Mode',
        'UE-MRDC-CapabilityAddFRX-Mode',
        'RF-ParametersMRDC',
        'Phy-ParametersMRDC',
        'Phy-ParametersMRDC-XDD-Diff',
        'Phy-ParametersMRDC-FRX-Diff',
        'MeasParametersMRDC',
        'MeasParametersMRDC-Common',
        'MeasParametersMRDC-XDD-Diff',
        'MeasParametersMRDC-FRX-Diff',
        'GeneralParametersMRDC-XDD-Diff',
        'UE-NR-Capability',
        'UE-NR-CapabilityAddXDD-Mode',
        'UE-NR-CapabilityAddFRX-Mode',
        'Phy-Parameters',
        'Phy-ParametersCommon',
        'Phy-ParametersXDD-Diff',
        'Phy-ParametersFRX-Diff',
        'Phy-ParametersFR1',
        'Phy-ParametersFR2',
        'RF-Parameters',
        'SupportedBandListNR',
        'BandNR',
        'MIMO-ParametersPerBand',
        'BeamManagementSSB-CSI-RS',
        'SRS-Resources',
        'SRS-TxSwitch',
        'PDCP-Parameters',
        'RLC-Parameters',
        'MAC-Parameters',
        'MAC-ParametersCommon',
        'MAC-ParametersXDD-Diff',
        'MeasParameters',
        'MeasParametersXDD-Diff',
        'MeasParametersFRX-Diff',
        'RRC-TransactionIdentifier',
        'maxBandComb',
        'maxBasebandProcComb',
        'maxEARFCN',
        'maxNrofServingCells',
        'maxNrofServingCells-1',
        'maxNrofAggregatedCellsPerCellGroup',
        'maxNrofSCells',
        'maxNrofCellMeas',
        'maxNrofSS-BlocksToAverage',
        'maxNrofCSI-RS-ResourcesToAverage',
        'maxNrofDL-Allocations',
        'maxNrofSR-ConfigPerCellGroup',
        'maxLCG-ID',
        'maxLC-ID',
        'maxNrofTAGs',
        'maxNrofTAGs-1',
        'maxNrofBWPs',
        'maxNrofSymbols-1',
        'maxNrofSlots',
        'maxNrofSlots-1',
        'maxNrofPhysicalResourceBlocks',
        'maxNrofPhysicalResourceBlocks-1',
        'maxNrofControlResourceSets',
        'maxNrofControlResourceSets-1',
        'maxCoReSetDuration',
        'maxNrofSearchSpaces',
        'maxNrofSearchSpaces-1',
        'maxSFI-DCI-PayloadSize',
        'maxSFI-DCI-PayloadSize-1',
        'maxINT-DCI-PayloadSize',
        'maxINT-DCI-PayloadSize-1',
        'maxNrofRateMatchPatterns',
        'maxNrofRateMatchPatterns-1',
        'maxNrofCSI-ReportConfigurations',
        'maxNrofCSI-ReportConfigurations-1',
        'maxNrofCSI-ResourceConfigurations',
        'maxNrofCSI-ResourceConfigurations-1',
        'maxNrofAP-CSI-RS-ResourcesPerSet',
        'maxNrOfCSI-AperiodicTriggers',
        'maxNrofReportConfigPerAperiodicTrigger',
        'maxNrofNZP-CSI-RS-Resources',
        'maxNrofNZP-CSI-RS-Resources-1',
        'maxNrofNZP-CSI-RS-ResourcesPerSet',
        'maxNrofNZP-CSI-RS-ResourceSetsPerConfig',
        'maxNrofZP-CSI-RS-Resources',
        'maxNrofZP-CSI-RS-Resources-1',
        'maxNrofZP-CSI-RS-ResourceSets-1',
        'maxNrofZP-CSI-RS-ResourcesPerSet',
        'maxNrofZP-CSI-RS-Sets',
        'maxNrofCSI-IM-Resources',
        'maxNrofCSI-IM-Resources-1',
        'maxNrofCSI-IM-ResourcesPerSet',
        'maxNrofCSI-IM-ResourceSetsPerConfig',
        'maxNrofSSB-Resources-1',
        'maxNrofCSI-SSB-ResourcePerSet',
        'maxNrofCSI-SSB-ResourceSetsPerConfig',
        'maxNrofFailureDetectionResources',
        'maxNrofObjectId',
        'maxNrofPageRec',
        'maxNrofPCI-Ranges',
        'maxNrofPLMN',
        'maxNrofCSI-RS-ResourcesRRM',
        'maxNrofCSI-RS-ResourcesRRM-1',
        'maxNrofMeasId',
        'maxNrofQuantityConfig',
        'maxNrofCSI-RS-CellsRRM',
        'maxNrofSRS-ResourceSets',
        'maxNrofSRS-ResourceSets-1',
        'maxNrofSRS-Resources',
        'maxNrofSRS-Resources-1',
        'maxNrofSRS-TriggerStates-1',
        'maxRAT-CapabilityContainers',
        'maxSimultaneousBands',
        'maxNrofSlotFormatCombinationsPerCell',
        'maxNrofSlotFormatCombinationsPerSet',
        'maxNrofSlotFormatCombinationsPerSet-1',
        'maxNrofPUCCH-Resources',
        'maxNrofPUCCH-Resources-1',
        'maxNrofPUCCH-ResourceSets',
        'maxNrofPUCCH-ResourceSets-1',
        'maxNrofPUCCH-ResourcesPerSet',
        'maxNrofPUCCH-ResourcesPerSet-1',
        'maxNrofPUCCH-P0-PerSet',
        'maxNrofPUCCH-PathlossReferenceRSs',
        'maxNrofPUCCH-PathlossReferenceRSs-1',
        'maxNrofP0-PUSCH-AlphaSets',
        'maxNrofP0-PUSCH-AlphaSets-1',
        'maxNrofPUSCH-PathlossReferenceRSs',
        'maxNrofPUSCH-PathlossReferenceRSs-1',
        'maxBands',
        'maxBandsMRDC',
        'maxBandsEUTRA',
        'maxCellPrep',
        'maxCellReport',
        'maxDRB',
        'maxFreq',
        'maxNrofCSI-RS',
        'maxNrofCandidateBeams',
        'maxNrofPCIsPerSMTC',
        'maxNrofQFIs',
        'maxNrofSR-Resources',
        'maxNrofSlotFormatsPerCombination',
        'maxNrofSpatialRelationInfos',
        'maxNrofSRS-ResourcesPerSet',
        'maxNrofIndexesToReport',
        'maxNrofSSBs',
        'maxNrofSSBs-1',
        'maxNrofS-NSSAI',
        'maxNrofTCI-StatesPDCCH',
        'maxNrofTCI-States',
        'maxNrofTCI-States-1',
        'maxNrofUL-Allocations',
        'maxQFI',
        'maxRA-CSIRS-Resources',
        'maxRA-OccasionsPerCSIRS',
        'maxRA-Occasions-1',
        'maxRA-SSB-Resources',
        'maxSCSs',
        'maxSecondaryCellGroups',
        'maxNrofServingCellsEUTRA',
        'maxMBSFN-Allocations',
        'maxNrofMultiBands',
        'maxCellSFTD',
        'maxReportConfigId',
        'maxNrofSRI-PUSCH-Mappings',
        'maxNrofSRI-PUSCH-Mappings-1',
        'CellIdentity',
        'ShortMAC-I',
        ]
    _type_ = [
        'BCCH-BCH-Message',
        'BCCH-BCH-MessageType',
        'BCCH-DL-SCH-Message',
        'BCCH-DL-SCH-MessageType',
        'PCCH-Message',
        'PCCH-MessageType',
        'DL-CCCH-Message',
        'DL-CCCH-MessageType',
        'DL-DCCH-Message',
        'DL-DCCH-MessageType',
        'UL-CCCH-Message',
        'UL-CCCH-MessageType',
        'UL-DCCH-Message',
        'UL-DCCH-MessageType',
        'MIB',
        'MeasurementReport',
        'MeasurementReport-IEs',
        'DLInformationTransfer',
        'DLInformationTransfer-IEs',
        'ULInformationTransfer',
        'ULInformationTransfer-IEs',
        'Paging',
        'PagingRecordList',
        'PagingRecord',
        'PagingUE-Identity',
        'RRCReestablishment',
        'RRCReestablishment-IEs',
        'RRCReestablishmentComplete',
        'RRCReestablishmentComplete-IEs',
        'RRCReestablishmentReject',
        'RRCReestablishmentReject-IEs',
        'RRCReestablishmentRequest',
        'RRCReestablishmentRequest-IEs',
        'ReestabUE-Identity',
        'ReestablishmentCause',
        'RRCReconfiguration',
        'RRCReconfiguration-IEs',
        'RRCReconfigurationComplete',
        'RRCReconfigurationComplete-IEs',
        'RRCReject',
        'RRCReject-IEs',
        'RejectWaitTime',
        'RRCRelease',
        'RRCRelease-IEs',
        'RedirectedCarrierInfo',
        'SuspendConfig',
        'PagingCycle',
        'IdleModePriorities',
        'FreqPriorityListEUTRA',
        'FreqPriorityListNR',
        'FreqPriorityEUTRA',
        'FreqPriorityNR',
        'TrackingAreaCode',
        'RRCSetupRequest',
        'RRCSetupRequest-IEs',
        'InitialUE-Identity',
        'EstablishmentCause',
        'RRCResume',
        'RRCResume-IEs',
        'RRCResumeRequest',
        'RRCResumeRequest-IEs',
        'ResumeCause',
        'RRCResumeComplete',
        'RRCResumeComplete-IEs',
        'RRCSetup',
        'RRCSetup-IEs',
        'RRCSetupComplete',
        'RRCSetupComplete-IEs',
        'RegisteredAMF',
        'RRCSuspend',
        'RRCSuspend-IEs',
        'RAN-NotificationAreaInfo',
        'RAN-AreaConfigList',
        'RAN-AreaConfig',
        'RAN-AreaCode',
        'SecurityModeCommand',
        'SecurityModeCommand-IEs',
        'SecurityConfigSMC',
        'SecurityModeComplete',
        'SecurityModeComplete-IEs',
        'SecurityModeFailure',
        'SecurityModeFailure-IEs',
        'SIB1-March',
        'SIB1',
        'CellAccessRelatedInfo',
        'PLMN-IdentityInfoList',
        'PLMN-IdentityInfo',
        'Q-QualMin',
        'Q-RxLevMin',
        'ServingCellConfigCommonSIB',
        'UplinkConfigCommonSIB',
        'BWP-UplinkCommonSIB',
        'SI-Message',
        'SetupRelease',
        'AdditionalSpectrumEmission',
        'Alpha',
        'AMF-RegionID',
        'AMF-SetID',
        'AMF-Pointer',
        'ARFCN-ValueNR',
        'ARFCN-ValueEUTRA',
        'BWP',
        'BWP-Uplink',
        'BWP-UplinkCommon',
        'BWP-UplinkDedicated',
        'BWP-Downlink',
        'BWP-DownlinkCommon',
        'BWP-DownlinkDedicated',
        'BWP-Id',
        'BeamFailureRecoveryConfig',
        'PRACH-ResourceDedicatedBFR',
        'BFR-SSB-Resource',
        'BFR-CSIRS-Resource',
        'CellGroupConfig',
        'CellGroupId',
        'RLC-Bearer-Config',
        'LogicalChannelIdentity',
        'PhysicalCellGroupConfig',
        'SpCellConfig',
        'ReconfigurationWithSync',
        'SCellConfig',
        'CellReselectionPriority',
        'CodebookConfig',
        'ConfiguredGrantConfig',
        'CG-UCI-OnPUSCH',
        'ControlResourceSet',
        'ControlResourceSetId',
        'CrossCarrierSchedulingConfig',
        'CSI-AperiodicTriggerStateList',
        'CSI-AperiodicTriggerState',
        'CSI-AssociatedReportConfigInfo',
        'CSI-FrequencyOccupation',
        'CSI-IM-Resource',
        'CSI-IM-ResourceId',
        'CSI-IM-ResourceSet',
        'CSI-IM-ResourceSetId',
        'CSI-MeasConfig',
        'CSI-ReportConfig',
        'CSI-ReportPeriodicityAndOffset',
        'PUCCH-CSI-Resource',
        'PortIndexFor8Ranks',
        'PortIndex8',
        'PortIndex4',
        'PortIndex2',
        'CSI-ReportConfigId',
        'CSI-ResourceConfig',
        'CSI-ResourceConfigId',
        'CSI-ResourcePeriodicityAndOffset',
        'CSI-RS-ResourceMapping',
        'CSI-SemiPersistentOnPUSCH-TriggerStateList',
        'CSI-SemiPersistentOnPUSCH-TriggerState',
        'CSI-SSB-ResourceSetId',
        'CSI-SSB-ResourceSet',
        'DedicatedInfoNAS',
        'DMRS-DownlinkConfig',
        'DMRS-UplinkConfig',
        'DownlinkPreemption',
        'INT-ConfigurationPerServingCell',
        'DRB-Identity',
        'EUTRA-MBSFN-SubframeConfigList',
        'EUTRA-MBSFN-SubframeConfig',
        'FilterCoefficient',
        'FreqBandIndicatorNR',
        'FrequencyInfoDL',
        'FrequencyInfoUL',
        'GSCN-ValueNR',
        'Hysteresis',
        'I-RNTI-Value',
        'LogicalChannelConfig',
        'MAC-CellGroupConfig',
        'DRX-Config',
        'PHR-Config',
        'TAG-Config',
        'TAG-ToAddMod',
        'TAG-Id',
        'TimeAlignmentTimer',
        'BSR-Config',
        'MeasConfig',
        'MeasObjectToRemoveList',
        'MeasIdToRemoveList',
        'ReportConfigToRemoveList',
        'MeasGapConfig',
        'GapConfig',
        'MeasId',
        'MeasIdToAddModList',
        'MeasIdToAddMod',
        'MeasObjectId',
        'MeasObjectNR',
        'ReferenceSignalConfig',
        'SSB-ConfigMobility',
        'CSI-RS-ResourceConfigMobility',
        'CSI-RS-CellMobility',
        'CSI-RS-Resource-Mobility',
        'CSI-RS-Index',
        'Q-OffsetRangeList',
        'SSB-ToMeasure',
        'ThresholdNR',
        'CellsToAddModList',
        'CellsToAddMod',
        'BlackCellsToAddModList',
        'BlackCellsToAddMod',
        'WhiteCellsToAddModList',
        'WhiteCellsToAddMod',
        'MeasObjectToAddModList',
        'MeasObjectToAddMod',
        'MeasResults',
        'MeasResultServFreqList',
        'MeasResultServFreq',
        'MeasResultListNR',
        'MeasResultNR',
        'MeasQuantityResults',
        'ResultsPerSSB-IndexList',
        'ResultsPerSSB-Index',
        'ResultsPerCSI-RS-IndexList',
        'ResultsPerCSI-RS-Index',
        'MeasResultSCG-Failure',
        'MeasResultServFreqList2NR',
        'MeasResultServFreq2NR',
        'MeasResultList2NR',
        'MeasResult2NR',
        'MeasResultCellListSFTD',
        'MeasResultCellSFTD',
        'MultiFrequencyBandListNR',
        'NextHopChainingCount',
        'NG-5G-S-TMSI',
        'NZP-CSI-RS-ResourceSet',
        'NZP-CSI-RS-ResourceSetId',
        'NZP-CSI-RS-Resource',
        'NZP-CSI-RS-ResourceId',
        'P-Max',
        'PCI-List',
        'PCI-Range',
        'PCI-RangeIndex',
        'PCI-RangeIndexList',
        'PDCCH-Config',
        'PDCCH-ConfigCommon',
        'PDCP-Config',
        'UL-DataSplitThreshold',
        'PDSCH-Config',
        'PDSCH-ConfigCommon',
        'PDSCH-ServingCellConfig',
        'PDSCH-CodeBlockGroupTransmission',
        'PDSCH-TimeDomainResourceAllocation',
        'PLMN-Identity',
        'MCC',
        'MNC',
        'MCC-MNC-Digit',
        'PhysCellId',
        'PRB-Id',
        'PTRS-DownlinkConfig',
        'PTRS-UplinkConfig',
        'PUCCH-Config',
        'PUCCH-FormatConfig',
        'PUCCH-MaxCodeRate',
        'PUCCH-SpatialRelationInfo',
        'PUCCH-SpatialRelationInfoId',
        'PUCCH-ResourceSet',
        'PUCCH-ResourceSetId',
        'PUCCH-Resource',
        'PUCCH-ResourceId',
        'PUCCH-format0',
        'PUCCH-format1',
        'PUCCH-format2',
        'PUCCH-format3',
        'PUCCH-format4',
        'PUCCH-ConfigCommon',
        'PUCCH-PowerControl',
        'P0-PUCCH',
        'P0-PUCCH-Id',
        'PUCCH-PathlossReferenceRS',
        'PUCCH-PathlossReferenceRS-Id',
        'PUCCH-TPC-CommandConfig',
        'PUSCH-Config',
        'UCI-OnPUSCH',
        'PUSCH-ConfigCommon',
        'PUSCH-PowerControl',
        'P0-PUSCH-AlphaSet',
        'P0-PUSCH-AlphaSetId',
        'PUSCH-PathlossReferenceRS',
        'PUSCH-PathlossReferenceRS-Id',
        'SRI-PUSCH-PowerControl',
        'SRI-PUSCH-PowerControlId',
        'BetaOffsets',
        'PUSCH-ServingCellConfig',
        'PUSCH-CodeBlockGroupGransmission',
        'PUSCH-TimeDomainResourceAllocation',
        'PUSCH-TPC-CommandConfig',
        'Q-OffsetRange',
        'QuantityConfig',
        'QuantityConfigNR-List',
        'QuantityConfigNR',
        'QuantityConfigRS',
        'FilterConfig',
        'RACH-ConfigCommon',
        'RACH-ConfigGeneric',
        'RACH-ConfigDedicated',
        'CFRA-Resources',
        'CFRA-SSB-Resource',
        'CFRA-CSIRS-Resource',
        'RadioBearerConfig',
        'SRB-ToAddModList',
        'SRB-ToAddMod',
        'DRB-ToAddModList',
        'DRB-ToAddMod',
        'DRB-ToReleaseList',
        'SecurityConfig',
        'RadioLinkMonitoringConfig',
        'RadioLinkMonitoringRS',
        'RateMatchPattern',
        'RateMatchPatternId',
        'RateMatchPatternLTE-CRS',
        'ReportConfigId',
        'ReportConfigNR',
        'EventTriggerConfig',
        'PeriodicalReportConfig',
        'NR-RS-Type',
        'MeasTriggerQuantity',
        'MeasTriggerQuantityOffset',
        'MeasReportQuantity',
        'ReportConfigToAddModList',
        'ReportConfigToAddMod',
        'ReportInterval',
        'RLC-Config',
        'UL-AM-RLC',
        'DL-AM-RLC',
        'UL-UM-RLC',
        'DL-UM-RLC',
        'T-PollRetransmit',
        'PollPDU',
        'PollByte',
        'T-Reassembly',
        'T-StatusProhibit',
        'SN-FieldLengthUM',
        'SN-FieldLengthAM',
        'RLF-TimersAndConstants',
        'RNTI-Value',
        'RSRP-Range',
        'RSRQ-Range',
        'SCellIndex',
        'SchedulingRequestConfig',
        'SchedulingRequestToAddMod',
        'SchedulingRequestId',
        'SchedulingRequestResourceConfig',
        'SchedulingRequestResourceId',
        'ScramblingId',
        'SCS-SpecificCarrier',
        'SDAP-Config',
        'QFI',
        'PDU-SessionID',
        'SearchSpace',
        'SearchSpaceId',
        'SecurityAlgorithmConfig',
        'IntegrityProtAlgorithm',
        'CipheringAlgorithm',
        'ServCellIndex',
        'ServingCellConfig',
        'UplinkConfig',
        'ServingCellConfigCommon',
        'UplinkConfigCommon',
        'SINR-Range',
        'SlotFormatCombinationsPerCell',
        'SlotFormatCombination',
        'SlotFormatCombinationId',
        'SlotFormatIndicator',
        'S-NSSAI',
        'SPS-Config',
        'SRB-Identity',
        'SRS-Config',
        'SRS-ResourceSet',
        'SRS-ResourceSetId',
        'SRS-Resource',
        'SRS-ResourceId',
        'SRS-PeriodicityAndOffset',
        'SRS-CarrierSwitching',
        'SRS-TPC-PDCCH-Config',
        'SRS-CC-SetIndex',
        'SSB-Index',
        'SubcarrierSpacing',
        'TCI-State',
        'QCL-Info',
        'TCI-StateId',
        'TDD-UL-DL-ConfigCommon',
        'TDD-UL-DL-ConfigDedicated',
        'TDD-UL-DL-SlotConfig',
        'TDD-UL-DL-SlotIndex',
        'TimeToTrigger',
        'ZP-CSI-RS-Resource',
        'ZP-CSI-RS-ResourceId',
        'ZP-CSI-RS-ResourceSet',
        'ZP-CSI-RS-ResourceSetId',
        'BandCombinationList',
        'BandCombination',
        'BandAndDL-ParametersList',
        'BandAndDL-Parameters',
        'BandCombinationParameters',
        'CA-ParametersNR',
        'MRDC-Parameters',
        'BandAndDL-ParametersEUTRA',
        'BandAndDL-ParametersNR',
        'IntraBandContiguousCC-InfoDL',
        'IntraBandContiguousCC-InfoDL-EUTRA',
        'BandCombinationParametersUL-List',
        'BandCombinationParametersUL',
        'BandParametersUL',
        'BandParametersUL-EUTRA',
        'BandParametersUL-NR',
        'IntraBandContiguousCC-InfoUL',
        'IntraBandContiguousCC-InfoUL-EUTRA',
        'BasebandCombinationParametersUL-List',
        'BasebandCombinationParametersUL',
        'BasebandParametersPerBandUL',
        'BasebandParametersPerCC-UL',
        'BasebandProcessingCombinationMRDC',
        'BasebandProcessingCombinationLink',
        'BasebandProcessingCombinationIndex',
        'CA-BandwidthClassNR',
        'CA-BandwidthClassEUTRA',
        'FreqBandIndicatorEUTRA',
        'FreqBandList',
        'FreqBandInformation',
        'FreqSeparationClass',
        'MIMO-LayersDL',
        'MIMO-LayersUL',
        'ModulationOrder',
        'RAT-Type',
        'SupportedBasebandProcessingCombination',
        'BasebandProcessingCombination',
        'BasebandParametersPerBandDL',
        'BasebandParametersPerCC-DL',
        'UE-CapabilityRAT-ContainerList',
        'UE-CapabilityRAT-Container',
        'UE-MRDC-Capability',
        'UE-MRDC-CapabilityAddXDD-Mode',
        'UE-MRDC-CapabilityAddFRX-Mode',
        'RF-ParametersMRDC',
        'Phy-ParametersMRDC',
        'Phy-ParametersMRDC-XDD-Diff',
        'Phy-ParametersMRDC-FRX-Diff',
        'MeasParametersMRDC',
        'MeasParametersMRDC-Common',
        'MeasParametersMRDC-XDD-Diff',
        'MeasParametersMRDC-FRX-Diff',
        'GeneralParametersMRDC-XDD-Diff',
        'UE-NR-Capability',
        'UE-NR-CapabilityAddXDD-Mode',
        'UE-NR-CapabilityAddFRX-Mode',
        'Phy-Parameters',
        'Phy-ParametersCommon',
        'Phy-ParametersXDD-Diff',
        'Phy-ParametersFRX-Diff',
        'Phy-ParametersFR1',
        'Phy-ParametersFR2',
        'RF-Parameters',
        'SupportedBandListNR',
        'BandNR',
        'MIMO-ParametersPerBand',
        'BeamManagementSSB-CSI-RS',
        'SRS-Resources',
        'SRS-TxSwitch',
        'PDCP-Parameters',
        'RLC-Parameters',
        'MAC-Parameters',
        'MAC-ParametersCommon',
        'MAC-ParametersXDD-Diff',
        'MeasParameters',
        'MeasParametersXDD-Diff',
        'MeasParametersFRX-Diff',
        'RRC-TransactionIdentifier',
        'CellIdentity',
        'ShortMAC-I',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxNrofNZP-CSI-RS-ResourceSets',
        'maxNrofNZP-CSI-RS-ResourceSets-1',
        'maxNrofCSI-SSB-ResourceSets',
        'maxNrofCSI-SSB-ResourceSets-1',
        'maxNrofCSI-IM-ResourceSets',
        'maxNrofCSI-IM-ResourceSets-1',
        'maxNrofNZP-CSI-RS-ResourcesPerConfig',
        'maxNrOfSemiPersistentPUSCH-Triggers',
        'maxBandComb',
        'maxBasebandProcComb',
        'maxEARFCN',
        'maxNrofServingCells',
        'maxNrofServingCells-1',
        'maxNrofAggregatedCellsPerCellGroup',
        'maxNrofSCells',
        'maxNrofCellMeas',
        'maxNrofSS-BlocksToAverage',
        'maxNrofCSI-RS-ResourcesToAverage',
        'maxNrofDL-Allocations',
        'maxNrofSR-ConfigPerCellGroup',
        'maxLCG-ID',
        'maxLC-ID',
        'maxNrofTAGs',
        'maxNrofTAGs-1',
        'maxNrofBWPs',
        'maxNrofSymbols-1',
        'maxNrofSlots',
        'maxNrofSlots-1',
        'maxNrofPhysicalResourceBlocks',
        'maxNrofPhysicalResourceBlocks-1',
        'maxNrofControlResourceSets',
        'maxNrofControlResourceSets-1',
        'maxCoReSetDuration',
        'maxNrofSearchSpaces',
        'maxNrofSearchSpaces-1',
        'maxSFI-DCI-PayloadSize',
        'maxSFI-DCI-PayloadSize-1',
        'maxINT-DCI-PayloadSize',
        'maxINT-DCI-PayloadSize-1',
        'maxNrofRateMatchPatterns',
        'maxNrofRateMatchPatterns-1',
        'maxNrofCSI-ReportConfigurations',
        'maxNrofCSI-ReportConfigurations-1',
        'maxNrofCSI-ResourceConfigurations',
        'maxNrofCSI-ResourceConfigurations-1',
        'maxNrofAP-CSI-RS-ResourcesPerSet',
        'maxNrOfCSI-AperiodicTriggers',
        'maxNrofReportConfigPerAperiodicTrigger',
        'maxNrofNZP-CSI-RS-Resources',
        'maxNrofNZP-CSI-RS-Resources-1',
        'maxNrofNZP-CSI-RS-ResourcesPerSet',
        'maxNrofNZP-CSI-RS-ResourceSetsPerConfig',
        'maxNrofZP-CSI-RS-Resources',
        'maxNrofZP-CSI-RS-Resources-1',
        'maxNrofZP-CSI-RS-ResourceSets-1',
        'maxNrofZP-CSI-RS-ResourcesPerSet',
        'maxNrofZP-CSI-RS-Sets',
        'maxNrofCSI-IM-Resources',
        'maxNrofCSI-IM-Resources-1',
        'maxNrofCSI-IM-ResourcesPerSet',
        'maxNrofCSI-IM-ResourceSetsPerConfig',
        'maxNrofSSB-Resources-1',
        'maxNrofCSI-SSB-ResourcePerSet',
        'maxNrofCSI-SSB-ResourceSetsPerConfig',
        'maxNrofFailureDetectionResources',
        'maxNrofObjectId',
        'maxNrofPageRec',
        'maxNrofPCI-Ranges',
        'maxNrofPLMN',
        'maxNrofCSI-RS-ResourcesRRM',
        'maxNrofCSI-RS-ResourcesRRM-1',
        'maxNrofMeasId',
        'maxNrofQuantityConfig',
        'maxNrofCSI-RS-CellsRRM',
        'maxNrofSRS-ResourceSets',
        'maxNrofSRS-ResourceSets-1',
        'maxNrofSRS-Resources',
        'maxNrofSRS-Resources-1',
        'maxNrofSRS-TriggerStates-1',
        'maxRAT-CapabilityContainers',
        'maxSimultaneousBands',
        'maxNrofSlotFormatCombinationsPerCell',
        'maxNrofSlotFormatCombinationsPerSet',
        'maxNrofSlotFormatCombinationsPerSet-1',
        'maxNrofPUCCH-Resources',
        'maxNrofPUCCH-Resources-1',
        'maxNrofPUCCH-ResourceSets',
        'maxNrofPUCCH-ResourceSets-1',
        'maxNrofPUCCH-ResourcesPerSet',
        'maxNrofPUCCH-ResourcesPerSet-1',
        'maxNrofPUCCH-P0-PerSet',
        'maxNrofPUCCH-PathlossReferenceRSs',
        'maxNrofPUCCH-PathlossReferenceRSs-1',
        'maxNrofP0-PUSCH-AlphaSets',
        'maxNrofP0-PUSCH-AlphaSets-1',
        'maxNrofPUSCH-PathlossReferenceRSs',
        'maxNrofPUSCH-PathlossReferenceRSs-1',
        'maxBands',
        'maxBandsMRDC',
        'maxBandsEUTRA',
        'maxCellPrep',
        'maxCellReport',
        'maxDRB',
        'maxFreq',
        'maxNrofCSI-RS',
        'maxNrofCandidateBeams',
        'maxNrofPCIsPerSMTC',
        'maxNrofQFIs',
        'maxNrofSR-Resources',
        'maxNrofSlotFormatsPerCombination',
        'maxNrofSpatialRelationInfos',
        'maxNrofSRS-ResourcesPerSet',
        'maxNrofIndexesToReport',
        'maxNrofSSBs',
        'maxNrofSSBs-1',
        'maxNrofS-NSSAI',
        'maxNrofTCI-StatesPDCCH',
        'maxNrofTCI-States',
        'maxNrofTCI-States-1',
        'maxNrofUL-Allocations',
        'maxQFI',
        'maxRA-CSIRS-Resources',
        'maxRA-OccasionsPerCSIRS',
        'maxRA-Occasions-1',
        'maxRA-SSB-Resources',
        'maxSCSs',
        'maxSecondaryCellGroups',
        'maxNrofServingCellsEUTRA',
        'maxMBSFN-Allocations',
        'maxNrofMultiBands',
        'maxCellSFTD',
        'maxReportConfigId',
        'maxNrofSRI-PUSCH-Mappings',
        'maxNrofSRI-PUSCH-Mappings-1',
        ]
    _class_ = [
        ]
    _param_ = [
        'SetupRelease',
        ]
    
    #-----< BCCH-BCH-Message >-----#
    BCCH_BCH_Message = SEQ(name='BCCH-BCH-Message', mode=MODE_TYPE)
    _BCCH_BCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BCCH-BCH-MessageType')))
    BCCH_BCH_Message._cont = ASN1Dict([
        ('message', _BCCH_BCH_Message_message),
        ])
    BCCH_BCH_Message._ext = []
    
    #-----< BCCH-BCH-MessageType >-----#
    BCCH_BCH_MessageType = CHOICE(name='BCCH-BCH-MessageType', mode=MODE_TYPE)
    _BCCH_BCH_MessageType_mib = SEQ(name='mib', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIB')))
    _BCCH_BCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BCCH_BCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _BCCH_BCH_MessageType_messageClassExtension._ext = []
    BCCH_BCH_MessageType._cont = ASN1Dict([
        ('mib', _BCCH_BCH_MessageType_mib),
        ('messageClassExtension', _BCCH_BCH_MessageType_messageClassExtension),
        ])
    BCCH_BCH_MessageType._ext = []
    
    #-----< BCCH-DL-SCH-Message >-----#
    BCCH_DL_SCH_Message = SEQ(name='BCCH-DL-SCH-Message', mode=MODE_TYPE)
    _BCCH_DL_SCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BCCH-DL-SCH-MessageType')))
    BCCH_DL_SCH_Message._cont = ASN1Dict([
        ('message', _BCCH_DL_SCH_Message_message),
        ])
    BCCH_DL_SCH_Message._ext = []
    
    #-----< BCCH-DL-SCH-MessageType >-----#
    BCCH_DL_SCH_MessageType = CHOICE(name='BCCH-DL-SCH-MessageType', mode=MODE_TYPE)
    _BCCH_DL_SCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1 = SEQ(name='systemInformationBlockType1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SIB1')))
    __BCCH_DL_SCH_MessageType_c1_systemInformation = OCT_STR(name='systemInformation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SI-Message')))
    _BCCH_DL_SCH_MessageType_c1._cont = ASN1Dict([
        ('systemInformationBlockType1', __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1),
        ('systemInformation', __BCCH_DL_SCH_MessageType_c1_systemInformation),
        ])
    _BCCH_DL_SCH_MessageType_c1._ext = []
    _BCCH_DL_SCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BCCH_DL_SCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _BCCH_DL_SCH_MessageType_messageClassExtension._ext = []
    BCCH_DL_SCH_MessageType._cont = ASN1Dict([
        ('c1', _BCCH_DL_SCH_MessageType_c1),
        ('messageClassExtension', _BCCH_DL_SCH_MessageType_messageClassExtension),
        ])
    BCCH_DL_SCH_MessageType._ext = []
    
    #-----< PCCH-Message >-----#
    PCCH_Message = SEQ(name='PCCH-Message', mode=MODE_TYPE)
    _PCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCCH-MessageType')))
    PCCH_Message._cont = ASN1Dict([
        ('message', _PCCH_Message_message),
        ])
    PCCH_Message._ext = []
    
    #-----< PCCH-MessageType >-----#
    PCCH_MessageType = CHOICE(name='PCCH-MessageType', mode=MODE_TYPE)
    _PCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PCCH_MessageType_c1_paging = SEQ(name='paging', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Paging')))
    _PCCH_MessageType_c1._cont = ASN1Dict([
        ('paging', __PCCH_MessageType_c1_paging),
        ])
    _PCCH_MessageType_c1._ext = []
    _PCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _PCCH_MessageType_messageClassExtension._ext = []
    PCCH_MessageType._cont = ASN1Dict([
        ('c1', _PCCH_MessageType_c1),
        ('messageClassExtension', _PCCH_MessageType_messageClassExtension),
        ])
    PCCH_MessageType._ext = []
    
    #-----< DL-CCCH-Message >-----#
    DL_CCCH_Message = SEQ(name='DL-CCCH-Message', mode=MODE_TYPE)
    _DL_CCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DL-CCCH-MessageType')))
    DL_CCCH_Message._cont = ASN1Dict([
        ('message', _DL_CCCH_Message_message),
        ])
    DL_CCCH_Message._ext = []
    
    #-----< DL-CCCH-MessageType >-----#
    DL_CCCH_MessageType = CHOICE(name='DL-CCCH-MessageType', mode=MODE_TYPE)
    _DL_CCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DL_CCCH_MessageType_c1_rrcReject = SEQ(name='rrcReject', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReject')))
    __DL_CCCH_MessageType_c1_rrcSetup = SEQ(name='rrcSetup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetup')))
    __DL_CCCH_MessageType_c1_rrcReestablishmentReject = SEQ(name='rrcReestablishmentReject', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentReject')))
    __DL_CCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_CCCH_MessageType_c1._cont = ASN1Dict([
        ('rrcReject', __DL_CCCH_MessageType_c1_rrcReject),
        ('rrcSetup', __DL_CCCH_MessageType_c1_rrcSetup),
        ('rrcReestablishmentReject', __DL_CCCH_MessageType_c1_rrcReestablishmentReject),
        ('spare1', __DL_CCCH_MessageType_c1_spare1),
        ])
    _DL_CCCH_MessageType_c1._ext = []
    _DL_CCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_CCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _DL_CCCH_MessageType_messageClassExtension._ext = []
    DL_CCCH_MessageType._cont = ASN1Dict([
        ('c1', _DL_CCCH_MessageType_c1),
        ('messageClassExtension', _DL_CCCH_MessageType_messageClassExtension),
        ])
    DL_CCCH_MessageType._ext = []
    
    #-----< DL-DCCH-Message >-----#
    DL_DCCH_Message = SEQ(name='DL-DCCH-Message', mode=MODE_TYPE)
    _DL_DCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DL-DCCH-MessageType')))
    DL_DCCH_Message._cont = ASN1Dict([
        ('message', _DL_DCCH_Message_message),
        ])
    DL_DCCH_Message._ext = []
    
    #-----< DL-DCCH-MessageType >-----#
    DL_DCCH_MessageType = CHOICE(name='DL-DCCH-MessageType', mode=MODE_TYPE)
    _DL_DCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DL_DCCH_MessageType_c1_rrcReconfiguration = SEQ(name='rrcReconfiguration', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration')))
    __DL_DCCH_MessageType_c1_rrcResume = SEQ(name='rrcResume', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResume')))
    __DL_DCCH_MessageType_c1_rrcRelease = SEQ(name='rrcRelease', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCRelease')))
    __DL_DCCH_MessageType_c1_rrcReestablishment = SEQ(name='rrcReestablishment', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishment')))
    __DL_DCCH_MessageType_c1_securityModeCommand = SEQ(name='securityModeCommand', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeCommand')))
    __DL_DCCH_MessageType_c1_dlInformationTransfer = SEQ(name='dlInformationTransfer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DLInformationTransfer')))
    __DL_DCCH_MessageType_c1_spare10 = NULL(name='spare10', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare9 = NULL(name='spare9', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare8 = NULL(name='spare8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DL_DCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_DCCH_MessageType_c1._cont = ASN1Dict([
        ('rrcReconfiguration', __DL_DCCH_MessageType_c1_rrcReconfiguration),
        ('rrcResume', __DL_DCCH_MessageType_c1_rrcResume),
        ('rrcRelease', __DL_DCCH_MessageType_c1_rrcRelease),
        ('rrcReestablishment', __DL_DCCH_MessageType_c1_rrcReestablishment),
        ('securityModeCommand', __DL_DCCH_MessageType_c1_securityModeCommand),
        ('dlInformationTransfer', __DL_DCCH_MessageType_c1_dlInformationTransfer),
        ('spare10', __DL_DCCH_MessageType_c1_spare10),
        ('spare9', __DL_DCCH_MessageType_c1_spare9),
        ('spare8', __DL_DCCH_MessageType_c1_spare8),
        ('spare7', __DL_DCCH_MessageType_c1_spare7),
        ('spare6', __DL_DCCH_MessageType_c1_spare6),
        ('spare5', __DL_DCCH_MessageType_c1_spare5),
        ('spare4', __DL_DCCH_MessageType_c1_spare4),
        ('spare3', __DL_DCCH_MessageType_c1_spare3),
        ('spare2', __DL_DCCH_MessageType_c1_spare2),
        ('spare1', __DL_DCCH_MessageType_c1_spare1),
        ])
    _DL_DCCH_MessageType_c1._ext = []
    _DL_DCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DL_DCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _DL_DCCH_MessageType_messageClassExtension._ext = []
    DL_DCCH_MessageType._cont = ASN1Dict([
        ('c1', _DL_DCCH_MessageType_c1),
        ('messageClassExtension', _DL_DCCH_MessageType_messageClassExtension),
        ])
    DL_DCCH_MessageType._ext = []
    
    #-----< UL-CCCH-Message >-----#
    UL_CCCH_Message = SEQ(name='UL-CCCH-Message', mode=MODE_TYPE)
    _UL_CCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-CCCH-MessageType')))
    UL_CCCH_Message._cont = ASN1Dict([
        ('message', _UL_CCCH_Message_message),
        ])
    UL_CCCH_Message._ext = []
    
    #-----< UL-CCCH-MessageType >-----#
    UL_CCCH_MessageType = CHOICE(name='UL-CCCH-MessageType', mode=MODE_TYPE)
    _UL_CCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UL_CCCH_MessageType_c1_rrcSetupRequest = SEQ(name='rrcSetupRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetupRequest')))
    __UL_CCCH_MessageType_c1_rrcResumeRequest = SEQ(name='rrcResumeRequest', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResumeRequest')))
    __UL_CCCH_MessageType_c1_rrcReestablishmentRequest = SEQ(name='rrcReestablishmentRequest', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentRequest')))
    __UL_CCCH_MessageType_c1_ulInformationTransfer = SEQ(name='ulInformationTransfer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ULInformationTransfer')))
    __UL_CCCH_MessageType_c1_spare12 = NULL(name='spare12', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare11 = NULL(name='spare11', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare10 = NULL(name='spare10', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare9 = NULL(name='spare9', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare8 = NULL(name='spare8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_CCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_CCCH_MessageType_c1._cont = ASN1Dict([
        ('rrcSetupRequest', __UL_CCCH_MessageType_c1_rrcSetupRequest),
        ('rrcResumeRequest', __UL_CCCH_MessageType_c1_rrcResumeRequest),
        ('rrcReestablishmentRequest', __UL_CCCH_MessageType_c1_rrcReestablishmentRequest),
        ('ulInformationTransfer', __UL_CCCH_MessageType_c1_ulInformationTransfer),
        ('spare12', __UL_CCCH_MessageType_c1_spare12),
        ('spare11', __UL_CCCH_MessageType_c1_spare11),
        ('spare10', __UL_CCCH_MessageType_c1_spare10),
        ('spare9', __UL_CCCH_MessageType_c1_spare9),
        ('spare8', __UL_CCCH_MessageType_c1_spare8),
        ('spare7', __UL_CCCH_MessageType_c1_spare7),
        ('spare6', __UL_CCCH_MessageType_c1_spare6),
        ('spare5', __UL_CCCH_MessageType_c1_spare5),
        ('spare4', __UL_CCCH_MessageType_c1_spare4),
        ('spare3', __UL_CCCH_MessageType_c1_spare3),
        ('spare2', __UL_CCCH_MessageType_c1_spare2),
        ('spare1', __UL_CCCH_MessageType_c1_spare1),
        ])
    _UL_CCCH_MessageType_c1._ext = []
    _UL_CCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_CCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _UL_CCCH_MessageType_messageClassExtension._ext = []
    UL_CCCH_MessageType._cont = ASN1Dict([
        ('c1', _UL_CCCH_MessageType_c1),
        ('messageClassExtension', _UL_CCCH_MessageType_messageClassExtension),
        ])
    UL_CCCH_MessageType._ext = []
    
    #-----< UL-DCCH-Message >-----#
    UL_DCCH_Message = SEQ(name='UL-DCCH-Message', mode=MODE_TYPE)
    _UL_DCCH_Message_message = CHOICE(name='message', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-DCCH-MessageType')))
    UL_DCCH_Message._cont = ASN1Dict([
        ('message', _UL_DCCH_Message_message),
        ])
    UL_DCCH_Message._ext = []
    
    #-----< UL-DCCH-MessageType >-----#
    UL_DCCH_MessageType = CHOICE(name='UL-DCCH-MessageType', mode=MODE_TYPE)
    _UL_DCCH_MessageType_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __UL_DCCH_MessageType_c1_measurementReport = SEQ(name='measurementReport', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasurementReport')))
    __UL_DCCH_MessageType_c1_rrcReconfigurationComplete = SEQ(name='rrcReconfigurationComplete', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfigurationComplete')))
    __UL_DCCH_MessageType_c1_rrcSetupComplete = SEQ(name='rrcSetupComplete', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetupComplete')))
    __UL_DCCH_MessageType_c1_rrcReestablishmentComplete = SEQ(name='rrcReestablishmentComplete', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentComplete')))
    __UL_DCCH_MessageType_c1_rrcResumeComplete = SEQ(name='rrcResumeComplete', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResumeComplete')))
    __UL_DCCH_MessageType_c1_securityModeComplete = SEQ(name='securityModeComplete', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeComplete')))
    __UL_DCCH_MessageType_c1_securityModeFailure = SEQ(name='securityModeFailure', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeFailure')))
    __UL_DCCH_MessageType_c1_spare9 = NULL(name='spare9', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare8 = NULL(name='spare8', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UL_DCCH_MessageType_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_DCCH_MessageType_c1._cont = ASN1Dict([
        ('measurementReport', __UL_DCCH_MessageType_c1_measurementReport),
        ('rrcReconfigurationComplete', __UL_DCCH_MessageType_c1_rrcReconfigurationComplete),
        ('rrcSetupComplete', __UL_DCCH_MessageType_c1_rrcSetupComplete),
        ('rrcReestablishmentComplete', __UL_DCCH_MessageType_c1_rrcReestablishmentComplete),
        ('rrcResumeComplete', __UL_DCCH_MessageType_c1_rrcResumeComplete),
        ('securityModeComplete', __UL_DCCH_MessageType_c1_securityModeComplete),
        ('securityModeFailure', __UL_DCCH_MessageType_c1_securityModeFailure),
        ('spare9', __UL_DCCH_MessageType_c1_spare9),
        ('spare8', __UL_DCCH_MessageType_c1_spare8),
        ('spare7', __UL_DCCH_MessageType_c1_spare7),
        ('spare6', __UL_DCCH_MessageType_c1_spare6),
        ('spare5', __UL_DCCH_MessageType_c1_spare5),
        ('spare4', __UL_DCCH_MessageType_c1_spare4),
        ('spare3', __UL_DCCH_MessageType_c1_spare3),
        ('spare2', __UL_DCCH_MessageType_c1_spare2),
        ('spare1', __UL_DCCH_MessageType_c1_spare1),
        ])
    _UL_DCCH_MessageType_c1._ext = []
    _UL_DCCH_MessageType_messageClassExtension = SEQ(name='messageClassExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_DCCH_MessageType_messageClassExtension._cont = ASN1Dict([
        ])
    _UL_DCCH_MessageType_messageClassExtension._ext = []
    UL_DCCH_MessageType._cont = ASN1Dict([
        ('c1', _UL_DCCH_MessageType_c1),
        ('messageClassExtension', _UL_DCCH_MessageType_messageClassExtension),
        ])
    UL_DCCH_MessageType._ext = []
    
    #-----< MIB >-----#
    MIB = SEQ(name='MIB', mode=MODE_TYPE)
    _MIB_systemFrameNumber = BIT_STR(name='systemFrameNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_systemFrameNumber._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _MIB_subCarrierSpacingCommon = ENUM(name='subCarrierSpacingCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_subCarrierSpacingCommon._cont = ASN1Dict([('scs15or60', 0), ('scs30or120', 1)])
    _MIB_subCarrierSpacingCommon._ext = []
    _MIB_ssb_SubcarrierOffset = INT(name='ssb-SubcarrierOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_ssb_SubcarrierOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _MIB_dmrs_TypeA_Position = ENUM(name='dmrs-TypeA-Position', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_dmrs_TypeA_Position._cont = ASN1Dict([('pos2', 0), ('pos3', 1)])
    _MIB_dmrs_TypeA_Position._ext = []
    _MIB_pdcch_ConfigSIB1 = INT(name='pdcch-ConfigSIB1', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_pdcch_ConfigSIB1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _MIB_cellBarred = ENUM(name='cellBarred', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_cellBarred._cont = ASN1Dict([('barred', 0), ('notBarred', 1)])
    _MIB_cellBarred._ext = []
    _MIB_intraFreqReselection = ENUM(name='intraFreqReselection', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_intraFreqReselection._cont = ASN1Dict([('allowed', 0), ('notAllowed', 1)])
    _MIB_intraFreqReselection._ext = []
    _MIB_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MIB_spare._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    MIB._cont = ASN1Dict([
        ('systemFrameNumber', _MIB_systemFrameNumber),
        ('subCarrierSpacingCommon', _MIB_subCarrierSpacingCommon),
        ('ssb-SubcarrierOffset', _MIB_ssb_SubcarrierOffset),
        ('dmrs-TypeA-Position', _MIB_dmrs_TypeA_Position),
        ('pdcch-ConfigSIB1', _MIB_pdcch_ConfigSIB1),
        ('cellBarred', _MIB_cellBarred),
        ('intraFreqReselection', _MIB_intraFreqReselection),
        ('spare', _MIB_spare),
        ])
    MIB._ext = []
    
    #-----< MeasurementReport >-----#
    MeasurementReport = SEQ(name='MeasurementReport', mode=MODE_TYPE)
    _MeasurementReport_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasurementReport_criticalExtensions_measurementReport = SEQ(name='measurementReport', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasurementReport-IEs')))
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __MeasurementReport_criticalExtensions_criticalExtensionsFuture._ext = []
    _MeasurementReport_criticalExtensions._cont = ASN1Dict([
        ('measurementReport', __MeasurementReport_criticalExtensions_measurementReport),
        ('criticalExtensionsFuture', __MeasurementReport_criticalExtensions_criticalExtensionsFuture),
        ])
    _MeasurementReport_criticalExtensions._ext = []
    MeasurementReport._cont = ASN1Dict([
        ('criticalExtensions', _MeasurementReport_criticalExtensions),
        ])
    MeasurementReport._ext = []
    
    #-----< MeasurementReport-IEs >-----#
    MeasurementReport_IEs = SEQ(name='MeasurementReport-IEs', mode=MODE_TYPE)
    _MeasurementReport_IEs_measResults = SEQ(name='measResults', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResults')))
    _MeasurementReport_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasurementReport_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasurementReport_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _MeasurementReport_IEs_nonCriticalExtension._ext = []
    MeasurementReport_IEs._cont = ASN1Dict([
        ('measResults', _MeasurementReport_IEs_measResults),
        ('lateNonCriticalExtension', _MeasurementReport_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _MeasurementReport_IEs_nonCriticalExtension),
        ])
    MeasurementReport_IEs._ext = []
    
    #-----< DLInformationTransfer >-----#
    DLInformationTransfer = SEQ(name='DLInformationTransfer', mode=MODE_TYPE)
    _DLInformationTransfer_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _DLInformationTransfer_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DLInformationTransfer_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer = SEQ(name='dlInformationTransfer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DLInformationTransfer-IEs')))
    ___DLInformationTransfer_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DLInformationTransfer_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DLInformationTransfer_criticalExtensions_c1._cont = ASN1Dict([
        ('dlInformationTransfer', ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer),
        ('spare3', ___DLInformationTransfer_criticalExtensions_c1_spare3),
        ('spare2', ___DLInformationTransfer_criticalExtensions_c1_spare2),
        ('spare1', ___DLInformationTransfer_criticalExtensions_c1_spare1),
        ])
    __DLInformationTransfer_criticalExtensions_c1._ext = []
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture._ext = []
    _DLInformationTransfer_criticalExtensions._cont = ASN1Dict([
        ('c1', __DLInformationTransfer_criticalExtensions_c1),
        ('criticalExtensionsFuture', __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture),
        ])
    _DLInformationTransfer_criticalExtensions._ext = []
    DLInformationTransfer._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _DLInformationTransfer_rrc_TransactionIdentifier),
        ('criticalExtensions', _DLInformationTransfer_criticalExtensions),
        ])
    DLInformationTransfer._ext = []
    
    #-----< DLInformationTransfer-IEs >-----#
    DLInformationTransfer_IEs = SEQ(name='DLInformationTransfer-IEs', mode=MODE_TYPE)
    _DLInformationTransfer_IEs_nasMessage = OCT_STR(name='nasMessage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DLInformationTransfer_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DLInformationTransfer_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DLInformationTransfer_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _DLInformationTransfer_IEs_nonCriticalExtension._ext = []
    DLInformationTransfer_IEs._cont = ASN1Dict([
        ('nasMessage', _DLInformationTransfer_IEs_nasMessage),
        ('lateNonCriticalExtension', _DLInformationTransfer_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _DLInformationTransfer_IEs_nonCriticalExtension),
        ])
    DLInformationTransfer_IEs._ext = []
    
    #-----< ULInformationTransfer >-----#
    ULInformationTransfer = SEQ(name='ULInformationTransfer', mode=MODE_TYPE)
    _ULInformationTransfer_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ULInformationTransfer_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer = SEQ(name='ulInformationTransfer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ULInformationTransfer-IEs')))
    ___ULInformationTransfer_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ULInformationTransfer_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULInformationTransfer_criticalExtensions_c1._cont = ASN1Dict([
        ('ulInformationTransfer', ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer),
        ('spare3', ___ULInformationTransfer_criticalExtensions_c1_spare3),
        ('spare2', ___ULInformationTransfer_criticalExtensions_c1_spare2),
        ('spare1', ___ULInformationTransfer_criticalExtensions_c1_spare1),
        ])
    __ULInformationTransfer_criticalExtensions_c1._ext = []
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture._ext = []
    _ULInformationTransfer_criticalExtensions._cont = ASN1Dict([
        ('c1', __ULInformationTransfer_criticalExtensions_c1),
        ('criticalExtensionsFuture', __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture),
        ])
    _ULInformationTransfer_criticalExtensions._ext = []
    ULInformationTransfer._cont = ASN1Dict([
        ('criticalExtensions', _ULInformationTransfer_criticalExtensions),
        ])
    ULInformationTransfer._ext = []
    
    #-----< ULInformationTransfer-IEs >-----#
    ULInformationTransfer_IEs = SEQ(name='ULInformationTransfer-IEs', mode=MODE_TYPE)
    _ULInformationTransfer_IEs_nasMessage = OCT_STR(name='nasMessage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ULInformationTransfer_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ULInformationTransfer_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ULInformationTransfer_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _ULInformationTransfer_IEs_nonCriticalExtension._ext = []
    ULInformationTransfer_IEs._cont = ASN1Dict([
        ('nasMessage', _ULInformationTransfer_IEs_nasMessage),
        ('lateNonCriticalExtension', _ULInformationTransfer_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _ULInformationTransfer_IEs_nonCriticalExtension),
        ])
    ULInformationTransfer_IEs._ext = []
    
    #-----< Paging >-----#
    Paging = SEQ(name='Paging', mode=MODE_TYPE)
    _Paging_pagingRecordList = SEQ_OF(name='pagingRecordList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PagingRecordList')), opt=True)
    _Paging_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Paging_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Paging_nonCriticalExtension._cont = ASN1Dict([
        ])
    _Paging_nonCriticalExtension._ext = []
    Paging._cont = ASN1Dict([
        ('pagingRecordList', _Paging_pagingRecordList),
        ('lateNonCriticalExtension', _Paging_lateNonCriticalExtension),
        ('nonCriticalExtension', _Paging_nonCriticalExtension),
        ])
    Paging._ext = []
    
    #-----< PagingRecordList >-----#
    PagingRecordList = SEQ_OF(name='PagingRecordList', mode=MODE_TYPE)
    _PagingRecordList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PagingRecord')))
    PagingRecordList._cont = _PagingRecordList__item_
    PagingRecordList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< PagingRecord >-----#
    PagingRecord = SEQ(name='PagingRecord', mode=MODE_TYPE)
    _PagingRecord_ue_Identity = CHOICE(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PagingUE-Identity')))
    PagingRecord._cont = ASN1Dict([
        ('ue-Identity', _PagingRecord_ue_Identity),
        ])
    PagingRecord._ext = []
    
    #-----< PagingUE-Identity >-----#
    PagingUE_Identity = CHOICE(name='PagingUE-Identity', mode=MODE_TYPE)
    _PagingUE_Identity_ng_5g_s_tmsi = SEQ(name='ng-5g-s-tmsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NG-5G-S-TMSI')))
    _PagingUE_Identity_i_rnti = BIT_STR(name='i-rnti', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'I-RNTI-Value')))
    PagingUE_Identity._cont = ASN1Dict([
        ('ng-5g-s-tmsi', _PagingUE_Identity_ng_5g_s_tmsi),
        ('i-rnti', _PagingUE_Identity_i_rnti),
        ])
    PagingUE_Identity._ext = []
    
    #-----< RRCReestablishment >-----#
    RRCReestablishment = SEQ(name='RRCReestablishment', mode=MODE_TYPE)
    _RRCReestablishment_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCReestablishment_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReestablishment_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCReestablishment_criticalExtensions_c1_rrcReestablishment = SEQ(name='rrcReestablishment', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishment-IEs')))
    ___RRCReestablishment_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCReestablishment_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCReestablishment_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReestablishment_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcReestablishment', ___RRCReestablishment_criticalExtensions_c1_rrcReestablishment),
        ('spare3', ___RRCReestablishment_criticalExtensions_c1_spare3),
        ('spare2', ___RRCReestablishment_criticalExtensions_c1_spare2),
        ('spare1', ___RRCReestablishment_criticalExtensions_c1_spare1),
        ])
    __RRCReestablishment_criticalExtensions_c1._ext = []
    __RRCReestablishment_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReestablishment_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReestablishment_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReestablishment_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCReestablishment_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCReestablishment_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReestablishment_criticalExtensions._ext = []
    RRCReestablishment._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCReestablishment_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCReestablishment_criticalExtensions),
        ])
    RRCReestablishment._ext = []
    
    #-----< RRCReestablishment-IEs >-----#
    RRCReestablishment_IEs = SEQ(name='RRCReestablishment-IEs', mode=MODE_TYPE)
    _RRCReestablishment_IEs_nextHopChainingCount = INT(name='nextHopChainingCount', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NextHopChainingCount')))
    _RRCReestablishment_IEs_radioBearerConfig = SEQ(name='radioBearerConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')), opt=True)
    _RRCReestablishment_IEs_masterCellGroup = OCT_STR(name='masterCellGroup', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RRCReestablishment_IEs_masterCellGroup_contain = SEQ(name='_cont_masterCellGroup', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupConfig')))
    _RRCReestablishment_IEs_masterCellGroup._const_cont = __RRCReestablishment_IEs_masterCellGroup_contain
    _RRCReestablishment_IEs_drb_ContinueROHC = ENUM(name='drb-ContinueROHC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishment_IEs_drb_ContinueROHC._cont = ASN1Dict([('true', 0)])
    _RRCReestablishment_IEs_drb_ContinueROHC._ext = []
    _RRCReestablishment_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishment_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishment_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReestablishment_IEs_nonCriticalExtension._ext = []
    RRCReestablishment_IEs._cont = ASN1Dict([
        ('nextHopChainingCount', _RRCReestablishment_IEs_nextHopChainingCount),
        ('radioBearerConfig', _RRCReestablishment_IEs_radioBearerConfig),
        ('masterCellGroup', _RRCReestablishment_IEs_masterCellGroup),
        ('drb-ContinueROHC', _RRCReestablishment_IEs_drb_ContinueROHC),
        ('lateNonCriticalExtension', _RRCReestablishment_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReestablishment_IEs_nonCriticalExtension),
        ])
    RRCReestablishment_IEs._ext = []
    
    #-----< RRCReestablishmentComplete >-----#
    RRCReestablishmentComplete = SEQ(name='RRCReestablishmentComplete', mode=MODE_TYPE)
    _RRCReestablishmentComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCReestablishmentComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReestablishmentComplete_criticalExtensions_rrcReestablishmentComplete = SEQ(name='rrcReestablishmentComplete', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentComplete-IEs')))
    __RRCReestablishmentComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReestablishmentComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReestablishmentComplete_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReestablishmentComplete_criticalExtensions._cont = ASN1Dict([
        ('rrcReestablishmentComplete', __RRCReestablishmentComplete_criticalExtensions_rrcReestablishmentComplete),
        ('criticalExtensionsFuture', __RRCReestablishmentComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReestablishmentComplete_criticalExtensions._ext = []
    RRCReestablishmentComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCReestablishmentComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCReestablishmentComplete_criticalExtensions),
        ])
    RRCReestablishmentComplete._ext = []
    
    #-----< RRCReestablishmentComplete-IEs >-----#
    RRCReestablishmentComplete_IEs = SEQ(name='RRCReestablishmentComplete-IEs', mode=MODE_TYPE)
    _RRCReestablishmentComplete_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishmentComplete_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishmentComplete_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReestablishmentComplete_IEs_nonCriticalExtension._ext = []
    RRCReestablishmentComplete_IEs._cont = ASN1Dict([
        ('lateNonCriticalExtension', _RRCReestablishmentComplete_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReestablishmentComplete_IEs_nonCriticalExtension),
        ])
    RRCReestablishmentComplete_IEs._ext = []
    
    #-----< RRCReestablishmentReject >-----#
    RRCReestablishmentReject = SEQ(name='RRCReestablishmentReject', mode=MODE_TYPE)
    _RRCReestablishmentReject_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReestablishmentReject_criticalExtensions_rrcReestablishmentReject = SEQ(name='rrcReestablishmentReject', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentReject-IEs')))
    __RRCReestablishmentReject_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReestablishmentReject_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReestablishmentReject_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReestablishmentReject_criticalExtensions._cont = ASN1Dict([
        ('rrcReestablishmentReject', __RRCReestablishmentReject_criticalExtensions_rrcReestablishmentReject),
        ('criticalExtensionsFuture', __RRCReestablishmentReject_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReestablishmentReject_criticalExtensions._ext = []
    RRCReestablishmentReject._cont = ASN1Dict([
        ('criticalExtensions', _RRCReestablishmentReject_criticalExtensions),
        ])
    RRCReestablishmentReject._ext = []
    
    #-----< RRCReestablishmentReject-IEs >-----#
    RRCReestablishmentReject_IEs = SEQ(name='RRCReestablishmentReject-IEs', mode=MODE_TYPE)
    _RRCReestablishmentReject_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishmentReject_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReestablishmentReject_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReestablishmentReject_IEs_nonCriticalExtension._ext = []
    RRCReestablishmentReject_IEs._cont = ASN1Dict([
        ('lateNonCriticalExtension', _RRCReestablishmentReject_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReestablishmentReject_IEs_nonCriticalExtension),
        ])
    RRCReestablishmentReject_IEs._ext = []
    
    #-----< RRCReestablishmentRequest >-----#
    RRCReestablishmentRequest = SEQ(name='RRCReestablishmentRequest', mode=MODE_TYPE)
    _RRCReestablishmentRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReestablishmentRequest_criticalExtensions_rrcReestablishmentRequest = SEQ(name='rrcReestablishmentRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReestablishmentRequest-IEs')))
    __RRCReestablishmentRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReestablishmentRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReestablishmentRequest_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReestablishmentRequest_criticalExtensions._cont = ASN1Dict([
        ('rrcReestablishmentRequest', __RRCReestablishmentRequest_criticalExtensions_rrcReestablishmentRequest),
        ('criticalExtensionsFuture', __RRCReestablishmentRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReestablishmentRequest_criticalExtensions._ext = []
    RRCReestablishmentRequest._cont = ASN1Dict([
        ('criticalExtensions', _RRCReestablishmentRequest_criticalExtensions),
        ])
    RRCReestablishmentRequest._ext = []
    
    #-----< RRCReestablishmentRequest-IEs >-----#
    RRCReestablishmentRequest_IEs = SEQ(name='RRCReestablishmentRequest-IEs', mode=MODE_TYPE)
    _RRCReestablishmentRequest_IEs_ue_Identity = SEQ(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReestabUE-Identity')))
    _RRCReestablishmentRequest_IEs_reestablishmentCause = ENUM(name='reestablishmentCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReestablishmentCause')))
    _RRCReestablishmentRequest_IEs_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCReestablishmentRequest_IEs_spare._const_sz = ASN1Set(rv=[30], rr=[], ev=None, er=[])
    RRCReestablishmentRequest_IEs._cont = ASN1Dict([
        ('ue-Identity', _RRCReestablishmentRequest_IEs_ue_Identity),
        ('reestablishmentCause', _RRCReestablishmentRequest_IEs_reestablishmentCause),
        ('spare', _RRCReestablishmentRequest_IEs_spare),
        ])
    RRCReestablishmentRequest_IEs._ext = []
    
    #-----< ReestabUE-Identity >-----#
    ReestabUE_Identity = SEQ(name='ReestabUE-Identity', mode=MODE_TYPE)
    _ReestabUE_Identity_c_RNTI = INT(name='c-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _ReestabUE_Identity_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _ReestabUE_Identity_shortMAC_I = BIT_STR(name='shortMAC-I', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ShortMAC-I')))
    ReestabUE_Identity._cont = ASN1Dict([
        ('c-RNTI', _ReestabUE_Identity_c_RNTI),
        ('physCellId', _ReestabUE_Identity_physCellId),
        ('shortMAC-I', _ReestabUE_Identity_shortMAC_I),
        ])
    ReestabUE_Identity._ext = []
    
    #-----< ReestablishmentCause >-----#
    ReestablishmentCause = ENUM(name='ReestablishmentCause', mode=MODE_TYPE)
    ReestablishmentCause._cont = ASN1Dict([('reconfigurationFailure', 0), ('handoverFailure', 1), ('otherFailure', 2), ('spare1', 3)])
    ReestablishmentCause._ext = []
    
    #-----< RRCReconfiguration >-----#
    RRCReconfiguration = SEQ(name='RRCReconfiguration', mode=MODE_TYPE)
    _RRCReconfiguration_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCReconfiguration_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReconfiguration_criticalExtensions_rrcReconfiguration = SEQ(name='rrcReconfiguration', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration-IEs')))
    __RRCReconfiguration_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReconfiguration_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReconfiguration_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReconfiguration_criticalExtensions._cont = ASN1Dict([
        ('rrcReconfiguration', __RRCReconfiguration_criticalExtensions_rrcReconfiguration),
        ('criticalExtensionsFuture', __RRCReconfiguration_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReconfiguration_criticalExtensions._ext = []
    RRCReconfiguration._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCReconfiguration_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCReconfiguration_criticalExtensions),
        ])
    RRCReconfiguration._ext = []
    
    #-----< RRCReconfiguration-IEs >-----#
    RRCReconfiguration_IEs = SEQ(name='RRCReconfiguration-IEs', mode=MODE_TYPE)
    _RRCReconfiguration_IEs_radioBearerConfig = SEQ(name='radioBearerConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')), opt=True)
    _RRCReconfiguration_IEs_secondaryCellGroup = OCT_STR(name='secondaryCellGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RRCReconfiguration_IEs_secondaryCellGroup_contain = SEQ(name='_cont_secondaryCellGroup', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupConfig')))
    _RRCReconfiguration_IEs_secondaryCellGroup._const_cont = __RRCReconfiguration_IEs_secondaryCellGroup_contain
    _RRCReconfiguration_IEs_measConfig = SEQ(name='measConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasConfig')), opt=True)
    _RRCReconfiguration_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReconfiguration_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReconfiguration_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReconfiguration_IEs_nonCriticalExtension._ext = []
    RRCReconfiguration_IEs._cont = ASN1Dict([
        ('radioBearerConfig', _RRCReconfiguration_IEs_radioBearerConfig),
        ('secondaryCellGroup', _RRCReconfiguration_IEs_secondaryCellGroup),
        ('measConfig', _RRCReconfiguration_IEs_measConfig),
        ('lateNonCriticalExtension', _RRCReconfiguration_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReconfiguration_IEs_nonCriticalExtension),
        ])
    RRCReconfiguration_IEs._ext = []
    
    #-----< RRCReconfigurationComplete >-----#
    RRCReconfigurationComplete = SEQ(name='RRCReconfigurationComplete', mode=MODE_TYPE)
    _RRCReconfigurationComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCReconfigurationComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReconfigurationComplete_criticalExtensions_rrcReconfigurationComplete = SEQ(name='rrcReconfigurationComplete', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfigurationComplete-IEs')))
    __RRCReconfigurationComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReconfigurationComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReconfigurationComplete_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReconfigurationComplete_criticalExtensions._cont = ASN1Dict([
        ('rrcReconfigurationComplete', __RRCReconfigurationComplete_criticalExtensions_rrcReconfigurationComplete),
        ('criticalExtensionsFuture', __RRCReconfigurationComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReconfigurationComplete_criticalExtensions._ext = []
    RRCReconfigurationComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCReconfigurationComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCReconfigurationComplete_criticalExtensions),
        ])
    RRCReconfigurationComplete._ext = []
    
    #-----< RRCReconfigurationComplete-IEs >-----#
    RRCReconfigurationComplete_IEs = SEQ(name='RRCReconfigurationComplete-IEs', mode=MODE_TYPE)
    _RRCReconfigurationComplete_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReconfigurationComplete_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReconfigurationComplete_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReconfigurationComplete_IEs_nonCriticalExtension._ext = []
    RRCReconfigurationComplete_IEs._cont = ASN1Dict([
        ('lateNonCriticalExtension', _RRCReconfigurationComplete_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReconfigurationComplete_IEs_nonCriticalExtension),
        ])
    RRCReconfigurationComplete_IEs._ext = []
    
    #-----< RRCReject >-----#
    RRCReject = SEQ(name='RRCReject', mode=MODE_TYPE)
    _RRCReject_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCReject_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCReject_criticalExtensions_c1_rrcReject = SEQ(name='rrcReject', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReject-IEs')))
    ___RRCReject_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCReject_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCReject_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReject_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcReject', ___RRCReject_criticalExtensions_c1_rrcReject),
        ('spare3', ___RRCReject_criticalExtensions_c1_spare3),
        ('spare2', ___RRCReject_criticalExtensions_c1_spare2),
        ('spare1', ___RRCReject_criticalExtensions_c1_spare1),
        ])
    __RRCReject_criticalExtensions_c1._ext = []
    __RRCReject_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCReject_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCReject_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCReject_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCReject_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCReject_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCReject_criticalExtensions._ext = []
    RRCReject._cont = ASN1Dict([
        ('criticalExtensions', _RRCReject_criticalExtensions),
        ])
    RRCReject._ext = []
    
    #-----< RRCReject-IEs >-----#
    RRCReject_IEs = SEQ(name='RRCReject-IEs', mode=MODE_TYPE)
    _RRCReject_IEs_waitTime = INT(name='waitTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RejectWaitTime')))
    _RRCReject_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReject_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCReject_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCReject_IEs_nonCriticalExtension._ext = []
    RRCReject_IEs._cont = ASN1Dict([
        ('waitTime', _RRCReject_IEs_waitTime),
        ('lateNonCriticalExtension', _RRCReject_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCReject_IEs_nonCriticalExtension),
        ])
    RRCReject_IEs._ext = []
    
    #-----< RejectWaitTime >-----#
    RejectWaitTime = INT(name='RejectWaitTime', mode=MODE_TYPE)
    RejectWaitTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< RRCRelease >-----#
    RRCRelease = SEQ(name='RRCRelease', mode=MODE_TYPE)
    _RRCRelease_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCRelease_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCRelease_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCRelease_criticalExtensions_c1_rrcRelease = SEQ(name='rrcRelease', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCRelease-IEs')))
    ___RRCRelease_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCRelease_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCRelease_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCRelease_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcRelease', ___RRCRelease_criticalExtensions_c1_rrcRelease),
        ('spare3', ___RRCRelease_criticalExtensions_c1_spare3),
        ('spare2', ___RRCRelease_criticalExtensions_c1_spare2),
        ('spare1', ___RRCRelease_criticalExtensions_c1_spare1),
        ])
    __RRCRelease_criticalExtensions_c1._ext = []
    __RRCRelease_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCRelease_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCRelease_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCRelease_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCRelease_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCRelease_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCRelease_criticalExtensions._ext = []
    RRCRelease._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCRelease_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCRelease_criticalExtensions),
        ])
    RRCRelease._ext = []
    
    #-----< RRCRelease-IEs >-----#
    RRCRelease_IEs = SEQ(name='RRCRelease-IEs', mode=MODE_TYPE)
    _RRCRelease_IEs_redirectedCarrierInfo = CHOICE(name='redirectedCarrierInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RedirectedCarrierInfo')), opt=True)
    _RRCRelease_IEs_idleModePriorities = SEQ(name='idleModePriorities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IdleModePriorities')), opt=True)
    _RRCRelease_IEs_suspendConfig = SEQ(name='suspendConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SuspendConfig')), opt=True)
    _RRCRelease_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCRelease_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCRelease_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCRelease_IEs_nonCriticalExtension._ext = []
    RRCRelease_IEs._cont = ASN1Dict([
        ('redirectedCarrierInfo', _RRCRelease_IEs_redirectedCarrierInfo),
        ('idleModePriorities', _RRCRelease_IEs_idleModePriorities),
        ('suspendConfig', _RRCRelease_IEs_suspendConfig),
        ('lateNonCriticalExtension', _RRCRelease_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCRelease_IEs_nonCriticalExtension),
        ])
    RRCRelease_IEs._ext = []
    
    #-----< RedirectedCarrierInfo >-----#
    RedirectedCarrierInfo = CHOICE(name='RedirectedCarrierInfo', mode=MODE_TYPE)
    _RedirectedCarrierInfo_nr = INT(name='nr', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')))
    _RedirectedCarrierInfo_eutra = INT(name='eutra', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueEUTRA')))
    RedirectedCarrierInfo._cont = ASN1Dict([
        ('nr', _RedirectedCarrierInfo_nr),
        ('eutra', _RedirectedCarrierInfo_eutra),
        ])
    RedirectedCarrierInfo._ext = []
    
    #-----< SuspendConfig >-----#
    SuspendConfig = SEQ(name='SuspendConfig', mode=MODE_TYPE)
    _SuspendConfig_resumeIdentity = BIT_STR(name='resumeIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'I-RNTI-Value')))
    _SuspendConfig_pagingCycle = ENUM(name='pagingCycle', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PagingCycle')))
    _SuspendConfig_ran_NotificationAreaInfo = CHOICE(name='ran-NotificationAreaInfo', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-NotificationAreaInfo')))
    _SuspendConfig_periodic_RNAU_timer = ENUM(name='periodic-RNAU-timer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SuspendConfig_periodic_RNAU_timer._cont = ASN1Dict([('min1', 0), ('min2', 1), ('min5', 2), ('min10', 3), ('min20', 4), ('min50', 5), ('min100', 6), ('min200', 7), ('min500', 8), ('min1000', 9)])
    _SuspendConfig_periodic_RNAU_timer._ext = []
    _SuspendConfig_nextHopChainingCount = INT(name='nextHopChainingCount', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NextHopChainingCount')))
    SuspendConfig._cont = ASN1Dict([
        ('resumeIdentity', _SuspendConfig_resumeIdentity),
        ('pagingCycle', _SuspendConfig_pagingCycle),
        ('ran-NotificationAreaInfo', _SuspendConfig_ran_NotificationAreaInfo),
        ('periodic-RNAU-timer', _SuspendConfig_periodic_RNAU_timer),
        ('nextHopChainingCount', _SuspendConfig_nextHopChainingCount),
        ])
    SuspendConfig._ext = []
    
    #-----< PagingCycle >-----#
    PagingCycle = ENUM(name='PagingCycle', mode=MODE_TYPE)
    PagingCycle._cont = ASN1Dict([('rf32', 0), ('rf64', 1), ('rf128', 2), ('rf256', 3)])
    PagingCycle._ext = []
    
    #-----< IdleModePriorities >-----#
    IdleModePriorities = SEQ(name='IdleModePriorities', mode=MODE_TYPE)
    _IdleModePriorities_freqPriorityListEUTRA = SEQ_OF(name='freqPriorityListEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqPriorityListEUTRA')), opt=True)
    _IdleModePriorities_freqPriorityListNR = SEQ_OF(name='freqPriorityListNR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqPriorityListNR')), opt=True)
    _IdleModePriorities_t320 = ENUM(name='t320', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IdleModePriorities_t320._cont = ASN1Dict([('min5', 0), ('min10', 1), ('min20', 2), ('min30', 3), ('min60', 4), ('min120', 5), ('min180', 6), ('spare1', 7)])
    _IdleModePriorities_t320._ext = []
    IdleModePriorities._cont = ASN1Dict([
        ('freqPriorityListEUTRA', _IdleModePriorities_freqPriorityListEUTRA),
        ('freqPriorityListNR', _IdleModePriorities_freqPriorityListNR),
        ('t320', _IdleModePriorities_t320),
        ])
    IdleModePriorities._ext = []
    
    #-----< FreqPriorityListEUTRA >-----#
    FreqPriorityListEUTRA = SEQ_OF(name='FreqPriorityListEUTRA', mode=MODE_TYPE)
    _FreqPriorityListEUTRA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqPriorityEUTRA')))
    FreqPriorityListEUTRA._cont = _FreqPriorityListEUTRA__item_
    FreqPriorityListEUTRA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< FreqPriorityListNR >-----#
    FreqPriorityListNR = SEQ_OF(name='FreqPriorityListNR', mode=MODE_TYPE)
    _FreqPriorityListNR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqPriorityNR')))
    FreqPriorityListNR._cont = _FreqPriorityListNR__item_
    FreqPriorityListNR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< FreqPriorityEUTRA >-----#
    FreqPriorityEUTRA = SEQ(name='FreqPriorityEUTRA', mode=MODE_TYPE)
    _FreqPriorityEUTRA_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueEUTRA')))
    _FreqPriorityEUTRA_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellReselectionPriority')))
    FreqPriorityEUTRA._cont = ASN1Dict([
        ('carrierFreq', _FreqPriorityEUTRA_carrierFreq),
        ('cellReselectionPriority', _FreqPriorityEUTRA_cellReselectionPriority),
        ])
    FreqPriorityEUTRA._ext = []
    
    #-----< FreqPriorityNR >-----#
    FreqPriorityNR = SEQ(name='FreqPriorityNR', mode=MODE_TYPE)
    _FreqPriorityNR_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')))
    _FreqPriorityNR_cellReselectionPriority = INT(name='cellReselectionPriority', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellReselectionPriority')))
    FreqPriorityNR._cont = ASN1Dict([
        ('carrierFreq', _FreqPriorityNR_carrierFreq),
        ('cellReselectionPriority', _FreqPriorityNR_cellReselectionPriority),
        ])
    FreqPriorityNR._ext = []
    
    #-----< TrackingAreaCode >-----#
    TrackingAreaCode = OCT_STR(name='TrackingAreaCode', mode=MODE_TYPE)
    TrackingAreaCode._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< RRCSetupRequest >-----#
    RRCSetupRequest = SEQ(name='RRCSetupRequest', mode=MODE_TYPE)
    _RRCSetupRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCSetupRequest_criticalExtensions_rrcSetupRequest = SEQ(name='rrcSetupRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetupRequest-IEs')))
    __RRCSetupRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetupRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCSetupRequest_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCSetupRequest_criticalExtensions._cont = ASN1Dict([
        ('rrcSetupRequest', __RRCSetupRequest_criticalExtensions_rrcSetupRequest),
        ('criticalExtensionsFuture', __RRCSetupRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCSetupRequest_criticalExtensions._ext = []
    RRCSetupRequest._cont = ASN1Dict([
        ('criticalExtensions', _RRCSetupRequest_criticalExtensions),
        ])
    RRCSetupRequest._ext = []
    
    #-----< RRCSetupRequest-IEs >-----#
    RRCSetupRequest_IEs = SEQ(name='RRCSetupRequest-IEs', mode=MODE_TYPE)
    _RRCSetupRequest_IEs_ue_Identity = CHOICE(name='ue-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'InitialUE-Identity')))
    _RRCSetupRequest_IEs_establishmentCause = ENUM(name='establishmentCause', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'EstablishmentCause')))
    _RRCSetupRequest_IEs_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCSetupRequest_IEs_spare._const_sz = ASN1Set(rv=[29], rr=[], ev=None, er=[])
    RRCSetupRequest_IEs._cont = ASN1Dict([
        ('ue-Identity', _RRCSetupRequest_IEs_ue_Identity),
        ('establishmentCause', _RRCSetupRequest_IEs_establishmentCause),
        ('spare', _RRCSetupRequest_IEs_spare),
        ])
    RRCSetupRequest_IEs._ext = []
    
    #-----< InitialUE-Identity >-----#
    InitialUE_Identity = CHOICE(name='InitialUE-Identity', mode=MODE_TYPE)
    _InitialUE_Identity_ng_5g_s_tmsi = SEQ(name='ng-5g-s-tmsi', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NG-5G-S-TMSI')))
    _InitialUE_Identity_randomValue = BIT_STR(name='randomValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitialUE_Identity_randomValue._const_sz = ASN1Set(rv=[40], rr=[], ev=None, er=[])
    InitialUE_Identity._cont = ASN1Dict([
        ('ng-5g-s-tmsi', _InitialUE_Identity_ng_5g_s_tmsi),
        ('randomValue', _InitialUE_Identity_randomValue),
        ])
    InitialUE_Identity._ext = []
    
    #-----< EstablishmentCause >-----#
    EstablishmentCause = ENUM(name='EstablishmentCause', mode=MODE_TYPE)
    EstablishmentCause._cont = ASN1Dict([('emergency', 0), ('highPriorityAccess', 1), ('mt-Access', 2), ('mo-Signalling', 3), ('mo-Data', 4), ('mo-VoiceCall', 5), ('spare1', 6), ('spare2', 7), ('spare3', 8), ('spare4', 9), ('spare5', 10), ('spare6', 11), ('spare7', 12), ('spare8', 13), ('spare9', 14), ('spare10', 15)])
    EstablishmentCause._ext = []
    
    #-----< RRCResume >-----#
    RRCResume = SEQ(name='RRCResume', mode=MODE_TYPE)
    _RRCResume_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCResume_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCResume_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCResume_criticalExtensions_c1_rrcResume = SEQ(name='rrcResume', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResume-IEs')))
    ___RRCResume_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCResume_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCResume_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCResume_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcResume', ___RRCResume_criticalExtensions_c1_rrcResume),
        ('spare3', ___RRCResume_criticalExtensions_c1_spare3),
        ('spare2', ___RRCResume_criticalExtensions_c1_spare2),
        ('spare1', ___RRCResume_criticalExtensions_c1_spare1),
        ])
    __RRCResume_criticalExtensions_c1._ext = []
    __RRCResume_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCResume_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCResume_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCResume_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCResume_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCResume_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCResume_criticalExtensions._ext = []
    RRCResume._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCResume_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCResume_criticalExtensions),
        ])
    RRCResume._ext = []
    
    #-----< RRCResume-IEs >-----#
    RRCResume_IEs = SEQ(name='RRCResume-IEs', mode=MODE_TYPE)
    _RRCResume_IEs_radioBearerConfig = SEQ(name='radioBearerConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')), opt=True)
    _RRCResume_IEs_masterCellGroup = OCT_STR(name='masterCellGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RRCResume_IEs_masterCellGroup_contain = SEQ(name='_cont_masterCellGroup', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupConfig')))
    _RRCResume_IEs_masterCellGroup._const_cont = __RRCResume_IEs_masterCellGroup_contain
    _RRCResume_IEs_measConfig = SEQ(name='measConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasConfig')), opt=True)
    _RRCResume_IEs_drb_ContinueROHC = ENUM(name='drb-ContinueROHC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCResume_IEs_drb_ContinueROHC._cont = ASN1Dict([('true', 0)])
    _RRCResume_IEs_drb_ContinueROHC._ext = []
    _RRCResume_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCResume_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCResume_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCResume_IEs_nonCriticalExtension._ext = []
    RRCResume_IEs._cont = ASN1Dict([
        ('radioBearerConfig', _RRCResume_IEs_radioBearerConfig),
        ('masterCellGroup', _RRCResume_IEs_masterCellGroup),
        ('measConfig', _RRCResume_IEs_measConfig),
        ('drb-ContinueROHC', _RRCResume_IEs_drb_ContinueROHC),
        ('lateNonCriticalExtension', _RRCResume_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCResume_IEs_nonCriticalExtension),
        ])
    RRCResume_IEs._ext = []
    
    #-----< RRCResumeRequest >-----#
    RRCResumeRequest = SEQ(name='RRCResumeRequest', mode=MODE_TYPE)
    _RRCResumeRequest_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCResumeRequest_criticalExtensions_rrcResumeRequest = SEQ(name='rrcResumeRequest', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResumeRequest-IEs')))
    __RRCResumeRequest_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCResumeRequest_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCResumeRequest_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCResumeRequest_criticalExtensions._cont = ASN1Dict([
        ('rrcResumeRequest', __RRCResumeRequest_criticalExtensions_rrcResumeRequest),
        ('criticalExtensionsFuture', __RRCResumeRequest_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCResumeRequest_criticalExtensions._ext = []
    RRCResumeRequest._cont = ASN1Dict([
        ('criticalExtensions', _RRCResumeRequest_criticalExtensions),
        ])
    RRCResumeRequest._ext = []
    
    #-----< RRCResumeRequest-IEs >-----#
    RRCResumeRequest_IEs = SEQ(name='RRCResumeRequest-IEs', mode=MODE_TYPE)
    _RRCResumeRequest_IEs_resumeIdentity = BIT_STR(name='resumeIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'I-RNTI-Value')))
    _RRCResumeRequest_IEs_resumeMAC_I = BIT_STR(name='resumeMAC-I', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCResumeRequest_IEs_resumeMAC_I._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _RRCResumeRequest_IEs_resumeCause = ENUM(name='resumeCause', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ResumeCause')))
    _RRCResumeRequest_IEs_spare = BIT_STR(name='spare', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCResumeRequest_IEs_spare._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    RRCResumeRequest_IEs._cont = ASN1Dict([
        ('resumeIdentity', _RRCResumeRequest_IEs_resumeIdentity),
        ('resumeMAC-I', _RRCResumeRequest_IEs_resumeMAC_I),
        ('resumeCause', _RRCResumeRequest_IEs_resumeCause),
        ('spare', _RRCResumeRequest_IEs_spare),
        ])
    RRCResumeRequest_IEs._ext = []
    
    #-----< ResumeCause >-----#
    ResumeCause = ENUM(name='ResumeCause', mode=MODE_TYPE)
    ResumeCause._cont = ASN1Dict([('emergency', 0), ('highPriorityAccess', 1), ('mt-Access', 2), ('mo-Signalling', 3), ('mo-Data', 4), ('mo-VoiceCall', 5), ('spare1', 6), ('spare2', 7), ('spare3', 8), ('spare4', 9), ('spare5', 10), ('spare6', 11), ('spare7', 12), ('spare8', 13), ('spare9', 14), ('spare10', 15)])
    ResumeCause._ext = []
    
    #-----< RRCResumeComplete >-----#
    RRCResumeComplete = SEQ(name='RRCResumeComplete', mode=MODE_TYPE)
    _RRCResumeComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCResumeComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCResumeComplete_criticalExtensions_rrcResumeComplete = SEQ(name='rrcResumeComplete', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCResumeComplete-IEs')))
    __RRCResumeComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCResumeComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCResumeComplete_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCResumeComplete_criticalExtensions._cont = ASN1Dict([
        ('rrcResumeComplete', __RRCResumeComplete_criticalExtensions_rrcResumeComplete),
        ('criticalExtensionsFuture', __RRCResumeComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCResumeComplete_criticalExtensions._ext = []
    RRCResumeComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCResumeComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCResumeComplete_criticalExtensions),
        ])
    RRCResumeComplete._ext = []
    
    #-----< RRCResumeComplete-IEs >-----#
    RRCResumeComplete_IEs = SEQ(name='RRCResumeComplete-IEs', mode=MODE_TYPE)
    _RRCResumeComplete_IEs_dedicatedInfoNAS = OCT_STR(name='dedicatedInfoNAS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DedicatedInfoNAS')), opt=True)
    _RRCResumeComplete_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCResumeComplete_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCResumeComplete_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCResumeComplete_IEs_nonCriticalExtension._ext = []
    RRCResumeComplete_IEs._cont = ASN1Dict([
        ('dedicatedInfoNAS', _RRCResumeComplete_IEs_dedicatedInfoNAS),
        ('lateNonCriticalExtension', _RRCResumeComplete_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCResumeComplete_IEs_nonCriticalExtension),
        ])
    RRCResumeComplete_IEs._ext = []
    
    #-----< RRCSetup >-----#
    RRCSetup = SEQ(name='RRCSetup', mode=MODE_TYPE)
    _RRCSetup_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCSetup_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCSetup_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCSetup_criticalExtensions_c1_rrcSetup = SEQ(name='rrcSetup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetup-IEs')))
    ___RRCSetup_criticalExtensions_c1_spare7 = NULL(name='spare7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare6 = NULL(name='spare6', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare5 = NULL(name='spare5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare4 = NULL(name='spare4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetup_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetup_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcSetup', ___RRCSetup_criticalExtensions_c1_rrcSetup),
        ('spare7', ___RRCSetup_criticalExtensions_c1_spare7),
        ('spare6', ___RRCSetup_criticalExtensions_c1_spare6),
        ('spare5', ___RRCSetup_criticalExtensions_c1_spare5),
        ('spare4', ___RRCSetup_criticalExtensions_c1_spare4),
        ('spare3', ___RRCSetup_criticalExtensions_c1_spare3),
        ('spare2', ___RRCSetup_criticalExtensions_c1_spare2),
        ('spare1', ___RRCSetup_criticalExtensions_c1_spare1),
        ])
    __RRCSetup_criticalExtensions_c1._ext = []
    __RRCSetup_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetup_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCSetup_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCSetup_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCSetup_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCSetup_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCSetup_criticalExtensions._ext = []
    RRCSetup._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCSetup_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCSetup_criticalExtensions),
        ])
    RRCSetup._ext = []
    
    #-----< RRCSetup-IEs >-----#
    RRCSetup_IEs = SEQ(name='RRCSetup-IEs', mode=MODE_TYPE)
    _RRCSetup_IEs_radioBearerConfig = SEQ(name='radioBearerConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')))
    _RRCSetup_IEs_masterCellGroup = OCT_STR(name='masterCellGroup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetup_IEs_masterCellGroup_contain = SEQ(name='_cont_masterCellGroup', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupConfig')))
    _RRCSetup_IEs_masterCellGroup._const_cont = __RRCSetup_IEs_masterCellGroup_contain
    _RRCSetup_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSetup_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSetup_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCSetup_IEs_nonCriticalExtension._ext = []
    RRCSetup_IEs._cont = ASN1Dict([
        ('radioBearerConfig', _RRCSetup_IEs_radioBearerConfig),
        ('masterCellGroup', _RRCSetup_IEs_masterCellGroup),
        ('lateNonCriticalExtension', _RRCSetup_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCSetup_IEs_nonCriticalExtension),
        ])
    RRCSetup_IEs._ext = []
    
    #-----< RRCSetupComplete >-----#
    RRCSetupComplete = SEQ(name='RRCSetupComplete', mode=MODE_TYPE)
    _RRCSetupComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCSetupComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCSetupComplete_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCSetupComplete_criticalExtensions_c1_rrcSetupComplete = SEQ(name='rrcSetupComplete', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSetupComplete-IEs')))
    ___RRCSetupComplete_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetupComplete_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSetupComplete_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetupComplete_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcSetupComplete', ___RRCSetupComplete_criticalExtensions_c1_rrcSetupComplete),
        ('spare3', ___RRCSetupComplete_criticalExtensions_c1_spare3),
        ('spare2', ___RRCSetupComplete_criticalExtensions_c1_spare2),
        ('spare1', ___RRCSetupComplete_criticalExtensions_c1_spare1),
        ])
    __RRCSetupComplete_criticalExtensions_c1._ext = []
    __RRCSetupComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSetupComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCSetupComplete_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCSetupComplete_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCSetupComplete_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCSetupComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCSetupComplete_criticalExtensions._ext = []
    RRCSetupComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCSetupComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCSetupComplete_criticalExtensions),
        ])
    RRCSetupComplete._ext = []
    
    #-----< RRCSetupComplete-IEs >-----#
    RRCSetupComplete_IEs = SEQ(name='RRCSetupComplete-IEs', mode=MODE_TYPE)
    _RRCSetupComplete_IEs_selectedPLMN_Identity = INT(name='selectedPLMN-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCSetupComplete_IEs_selectedPLMN_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    _RRCSetupComplete_IEs_registeredAMF = SEQ(name='registeredAMF', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RegisteredAMF')), opt=True)
    _RRCSetupComplete_IEs_guami_Type = ENUM(name='guami-Type', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSetupComplete_IEs_guami_Type._cont = ASN1Dict([('native', 0), ('mapped', 1)])
    _RRCSetupComplete_IEs_guami_Type._ext = []
    _RRCSetupComplete_IEs_s_nssai_list = SEQ_OF(name='s-nssai-list', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RRCSetupComplete_IEs_s_nssai_list__item_ = BIT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'S-NSSAI')))
    _RRCSetupComplete_IEs_s_nssai_list._cont = __RRCSetupComplete_IEs_s_nssai_list__item_
    _RRCSetupComplete_IEs_s_nssai_list._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _RRCSetupComplete_IEs_dedicatedInfoNAS = OCT_STR(name='dedicatedInfoNAS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DedicatedInfoNAS')))
    _RRCSetupComplete_IEs_ng_5g_s_tmsi = SEQ(name='ng-5g-s-tmsi', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NG-5G-S-TMSI')), opt=True)
    _RRCSetupComplete_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSetupComplete_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSetupComplete_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCSetupComplete_IEs_nonCriticalExtension._ext = []
    RRCSetupComplete_IEs._cont = ASN1Dict([
        ('selectedPLMN-Identity', _RRCSetupComplete_IEs_selectedPLMN_Identity),
        ('registeredAMF', _RRCSetupComplete_IEs_registeredAMF),
        ('guami-Type', _RRCSetupComplete_IEs_guami_Type),
        ('s-nssai-list', _RRCSetupComplete_IEs_s_nssai_list),
        ('dedicatedInfoNAS', _RRCSetupComplete_IEs_dedicatedInfoNAS),
        ('ng-5g-s-tmsi', _RRCSetupComplete_IEs_ng_5g_s_tmsi),
        ('lateNonCriticalExtension', _RRCSetupComplete_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCSetupComplete_IEs_nonCriticalExtension),
        ])
    RRCSetupComplete_IEs._ext = []
    
    #-----< RegisteredAMF >-----#
    RegisteredAMF = SEQ(name='RegisteredAMF', mode=MODE_TYPE)
    _RegisteredAMF_plmn_Identity = SEQ(name='plmn-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PLMN-Identity')), opt=True)
    _RegisteredAMF_amf_SetId = BIT_STR(name='amf-SetId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AMF-SetID')))
    _RegisteredAMF_amf_Pointer = BIT_STR(name='amf-Pointer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AMF-Pointer')))
    _RegisteredAMF_amf_Region = BIT_STR(name='amf-Region', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AMF-RegionID')))
    RegisteredAMF._cont = ASN1Dict([
        ('plmn-Identity', _RegisteredAMF_plmn_Identity),
        ('amf-SetId', _RegisteredAMF_amf_SetId),
        ('amf-Pointer', _RegisteredAMF_amf_Pointer),
        ('amf-Region', _RegisteredAMF_amf_Region),
        ])
    RegisteredAMF._ext = []
    
    #-----< RRCSuspend >-----#
    RRCSuspend = SEQ(name='RRCSuspend', mode=MODE_TYPE)
    _RRCSuspend_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _RRCSuspend_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RRCSuspend_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___RRCSuspend_criticalExtensions_c1_rrcSuspend = SEQ(name='rrcSuspend', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCSuspend-IEs')))
    ___RRCSuspend_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSuspend_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RRCSuspend_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSuspend_criticalExtensions_c1._cont = ASN1Dict([
        ('rrcSuspend', ___RRCSuspend_criticalExtensions_c1_rrcSuspend),
        ('spare3', ___RRCSuspend_criticalExtensions_c1_spare3),
        ('spare2', ___RRCSuspend_criticalExtensions_c1_spare2),
        ('spare1', ___RRCSuspend_criticalExtensions_c1_spare1),
        ])
    __RRCSuspend_criticalExtensions_c1._ext = []
    __RRCSuspend_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RRCSuspend_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __RRCSuspend_criticalExtensions_criticalExtensionsFuture._ext = []
    _RRCSuspend_criticalExtensions._cont = ASN1Dict([
        ('c1', __RRCSuspend_criticalExtensions_c1),
        ('criticalExtensionsFuture', __RRCSuspend_criticalExtensions_criticalExtensionsFuture),
        ])
    _RRCSuspend_criticalExtensions._ext = []
    RRCSuspend._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _RRCSuspend_rrc_TransactionIdentifier),
        ('criticalExtensions', _RRCSuspend_criticalExtensions),
        ])
    RRCSuspend._ext = []
    
    #-----< RRCSuspend-IEs >-----#
    RRCSuspend_IEs = SEQ(name='RRCSuspend-IEs', mode=MODE_TYPE)
    _RRCSuspend_IEs_resumeIdentity = BIT_STR(name='resumeIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'I-RNTI-Value')))
    _RRCSuspend_IEs_ran_NotificationAreaInfo = CHOICE(name='ran-NotificationAreaInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-NotificationAreaInfo')))
    _RRCSuspend_IEs_periodic_RNAU_timer = ENUM(name='periodic-RNAU-timer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RRCSuspend_IEs_periodic_RNAU_timer._cont = ASN1Dict([('min1', 0), ('min2', 1), ('min5', 2), ('min10', 3), ('min20', 4), ('min50', 5), ('min100', 6), ('min200', 7), ('min500', 8), ('min1000', 9)])
    _RRCSuspend_IEs_periodic_RNAU_timer._ext = []
    _RRCSuspend_IEs_nextHopChainingCount = INT(name='nextHopChainingCount', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NextHopChainingCount')))
    _RRCSuspend_IEs_redirectedCarrierInfo = CHOICE(name='redirectedCarrierInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RedirectedCarrierInfo')), opt=True)
    _RRCSuspend_IEs_idleModePriorities = SEQ(name='idleModePriorities', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IdleModePriorities')), opt=True)
    _RRCSuspend_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSuspend_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRCSuspend_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _RRCSuspend_IEs_nonCriticalExtension._ext = []
    RRCSuspend_IEs._cont = ASN1Dict([
        ('resumeIdentity', _RRCSuspend_IEs_resumeIdentity),
        ('ran-NotificationAreaInfo', _RRCSuspend_IEs_ran_NotificationAreaInfo),
        ('periodic-RNAU-timer', _RRCSuspend_IEs_periodic_RNAU_timer),
        ('nextHopChainingCount', _RRCSuspend_IEs_nextHopChainingCount),
        ('redirectedCarrierInfo', _RRCSuspend_IEs_redirectedCarrierInfo),
        ('idleModePriorities', _RRCSuspend_IEs_idleModePriorities),
        ('lateNonCriticalExtension', _RRCSuspend_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _RRCSuspend_IEs_nonCriticalExtension),
        ])
    RRCSuspend_IEs._ext = []
    
    #-----< RAN-NotificationAreaInfo >-----#
    RAN_NotificationAreaInfo = CHOICE(name='RAN-NotificationAreaInfo', mode=MODE_TYPE)
    _RAN_NotificationAreaInfo_cellList = SEQ_OF(name='cellList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RAN_NotificationAreaInfo_cellList__item_ = BIT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellIdentity')))
    _RAN_NotificationAreaInfo_cellList._cont = __RAN_NotificationAreaInfo_cellList__item_
    _RAN_NotificationAreaInfo_cellList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _RAN_NotificationAreaInfo_ran_AreaConfigList = SEQ_OF(name='ran-AreaConfigList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-AreaConfigList')))
    RAN_NotificationAreaInfo._cont = ASN1Dict([
        ('cellList', _RAN_NotificationAreaInfo_cellList),
        ('ran-AreaConfigList', _RAN_NotificationAreaInfo_ran_AreaConfigList),
        ])
    RAN_NotificationAreaInfo._ext = []
    
    #-----< RAN-AreaConfigList >-----#
    RAN_AreaConfigList = SEQ_OF(name='RAN-AreaConfigList', mode=MODE_TYPE)
    _RAN_AreaConfigList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-AreaConfig')))
    RAN_AreaConfigList._cont = _RAN_AreaConfigList__item_
    RAN_AreaConfigList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< RAN-AreaConfig >-----#
    RAN_AreaConfig = SEQ(name='RAN-AreaConfig', mode=MODE_TYPE)
    _RAN_AreaConfig_trackingAreaCode = OCT_STR(name='trackingAreaCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TrackingAreaCode')))
    _RAN_AreaConfig_ran_AreaCodeList = SEQ_OF(name='ran-AreaCodeList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RAN_AreaConfig_ran_AreaCodeList__item_ = BIT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-AreaCode')))
    _RAN_AreaConfig_ran_AreaCodeList._cont = __RAN_AreaConfig_ran_AreaCodeList__item_
    _RAN_AreaConfig_ran_AreaCodeList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    RAN_AreaConfig._cont = ASN1Dict([
        ('trackingAreaCode', _RAN_AreaConfig_trackingAreaCode),
        ('ran-AreaCodeList', _RAN_AreaConfig_ran_AreaCodeList),
        ])
    RAN_AreaConfig._ext = []
    
    #-----< RAN-AreaCode >-----#
    RAN_AreaCode = BIT_STR(name='RAN-AreaCode', mode=MODE_TYPE)
    RAN_AreaCode._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< SecurityModeCommand >-----#
    SecurityModeCommand = SEQ(name='SecurityModeCommand', mode=MODE_TYPE)
    _SecurityModeCommand_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _SecurityModeCommand_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeCommand_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand = SEQ(name='securityModeCommand', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeCommand-IEs')))
    ___SecurityModeCommand_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SecurityModeCommand_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeCommand_criticalExtensions_c1._cont = ASN1Dict([
        ('securityModeCommand', ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand),
        ('spare3', ___SecurityModeCommand_criticalExtensions_c1_spare3),
        ('spare2', ___SecurityModeCommand_criticalExtensions_c1_spare2),
        ('spare1', ___SecurityModeCommand_criticalExtensions_c1_spare1),
        ])
    __SecurityModeCommand_criticalExtensions_c1._ext = []
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture._ext = []
    _SecurityModeCommand_criticalExtensions._cont = ASN1Dict([
        ('c1', __SecurityModeCommand_criticalExtensions_c1),
        ('criticalExtensionsFuture', __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeCommand_criticalExtensions._ext = []
    SecurityModeCommand._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeCommand_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeCommand_criticalExtensions),
        ])
    SecurityModeCommand._ext = []
    
    #-----< SecurityModeCommand-IEs >-----#
    SecurityModeCommand_IEs = SEQ(name='SecurityModeCommand-IEs', mode=MODE_TYPE)
    _SecurityModeCommand_IEs_securityConfigSMC = SEQ(name='securityConfigSMC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityConfigSMC')))
    _SecurityModeCommand_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeCommand_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeCommand_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeCommand_IEs_nonCriticalExtension._ext = []
    SecurityModeCommand_IEs._cont = ASN1Dict([
        ('securityConfigSMC', _SecurityModeCommand_IEs_securityConfigSMC),
        ('lateNonCriticalExtension', _SecurityModeCommand_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _SecurityModeCommand_IEs_nonCriticalExtension),
        ])
    SecurityModeCommand_IEs._ext = []
    
    #-----< SecurityConfigSMC >-----#
    SecurityConfigSMC = SEQ(name='SecurityConfigSMC', mode=MODE_TYPE)
    _SecurityConfigSMC_securityAlgorithmConfig = SEQ(name='securityAlgorithmConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityAlgorithmConfig')))
    SecurityConfigSMC._cont = ASN1Dict([
        ('securityAlgorithmConfig', _SecurityConfigSMC_securityAlgorithmConfig),
        ])
    SecurityConfigSMC._ext = []
    
    #-----< SecurityModeComplete >-----#
    SecurityModeComplete = SEQ(name='SecurityModeComplete', mode=MODE_TYPE)
    _SecurityModeComplete_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _SecurityModeComplete_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeComplete_criticalExtensions_securityModeComplete = SEQ(name='securityModeComplete', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeComplete-IEs')))
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture._ext = []
    _SecurityModeComplete_criticalExtensions._cont = ASN1Dict([
        ('securityModeComplete', __SecurityModeComplete_criticalExtensions_securityModeComplete),
        ('criticalExtensionsFuture', __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeComplete_criticalExtensions._ext = []
    SecurityModeComplete._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeComplete_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeComplete_criticalExtensions),
        ])
    SecurityModeComplete._ext = []
    
    #-----< SecurityModeComplete-IEs >-----#
    SecurityModeComplete_IEs = SEQ(name='SecurityModeComplete-IEs', mode=MODE_TYPE)
    _SecurityModeComplete_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeComplete_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeComplete_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeComplete_IEs_nonCriticalExtension._ext = []
    SecurityModeComplete_IEs._cont = ASN1Dict([
        ('lateNonCriticalExtension', _SecurityModeComplete_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _SecurityModeComplete_IEs_nonCriticalExtension),
        ])
    SecurityModeComplete_IEs._ext = []
    
    #-----< SecurityModeFailure >-----#
    SecurityModeFailure = SEQ(name='SecurityModeFailure', mode=MODE_TYPE)
    _SecurityModeFailure_rrc_TransactionIdentifier = INT(name='rrc-TransactionIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRC-TransactionIdentifier')))
    _SecurityModeFailure_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SecurityModeFailure_criticalExtensions_securityModeFailure = SEQ(name='securityModeFailure', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityModeFailure-IEs')))
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture._ext = []
    _SecurityModeFailure_criticalExtensions._cont = ASN1Dict([
        ('securityModeFailure', __SecurityModeFailure_criticalExtensions_securityModeFailure),
        ('criticalExtensionsFuture', __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture),
        ])
    _SecurityModeFailure_criticalExtensions._ext = []
    SecurityModeFailure._cont = ASN1Dict([
        ('rrc-TransactionIdentifier', _SecurityModeFailure_rrc_TransactionIdentifier),
        ('criticalExtensions', _SecurityModeFailure_criticalExtensions),
        ])
    SecurityModeFailure._ext = []
    
    #-----< SecurityModeFailure-IEs >-----#
    SecurityModeFailure_IEs = SEQ(name='SecurityModeFailure-IEs', mode=MODE_TYPE)
    _SecurityModeFailure_IEs_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeFailure_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityModeFailure_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SecurityModeFailure_IEs_nonCriticalExtension._ext = []
    SecurityModeFailure_IEs._cont = ASN1Dict([
        ('lateNonCriticalExtension', _SecurityModeFailure_IEs_lateNonCriticalExtension),
        ('nonCriticalExtension', _SecurityModeFailure_IEs_nonCriticalExtension),
        ])
    SecurityModeFailure_IEs._ext = []
    
    #-----< SIB1-March >-----#
    SIB1_March = SEQ(name='SIB1-March', mode=MODE_TYPE)
    _SIB1_March_frequencyOffsetSSB = ENUM(name='frequencyOffsetSSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_March_frequencyOffsetSSB._cont = ASN1Dict([('khz-5', 0), ('khz5', 1)])
    _SIB1_March_frequencyOffsetSSB._ext = []
    _SIB1_March_ssb_PositionsInBurst = SEQ(name='ssb-PositionsInBurst', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SIB1_March_ssb_PositionsInBurst_inOneGroup = BIT_STR(name='inOneGroup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SIB1_March_ssb_PositionsInBurst_inOneGroup._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __SIB1_March_ssb_PositionsInBurst_groupPresence = BIT_STR(name='groupPresence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SIB1_March_ssb_PositionsInBurst_groupPresence._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SIB1_March_ssb_PositionsInBurst._cont = ASN1Dict([
        ('inOneGroup', __SIB1_March_ssb_PositionsInBurst_inOneGroup),
        ('groupPresence', __SIB1_March_ssb_PositionsInBurst_groupPresence),
        ])
    _SIB1_March_ssb_PositionsInBurst._ext = []
    _SIB1_March_ssb_PeriodicityServingCell = ENUM(name='ssb-PeriodicityServingCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SIB1_March_ssb_PeriodicityServingCell._cont = ASN1Dict([('ms5', 0), ('ms10', 1), ('ms20', 2), ('ms40', 3), ('ms80', 4), ('ms160', 5), ('spare1', 6), ('spare2', 7)])
    _SIB1_March_ssb_PeriodicityServingCell._ext = []
    _SIB1_March_ss_PBCH_BlockPower = INT(name='ss-PBCH-BlockPower', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SIB1_March_ss_PBCH_BlockPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=50)], ev=None, er=[])
    _SIB1_March_uplinkConfigCommon = SEQ(name='uplinkConfigCommon', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommon')), opt=True)
    _SIB1_March_supplementaryUplink = SEQ(name='supplementaryUplink', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SIB1_March_supplementaryUplink_uplinkConfigCommon = SEQ(name='uplinkConfigCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommon')), opt=True)
    _SIB1_March_supplementaryUplink._cont = ASN1Dict([
        ('uplinkConfigCommon', __SIB1_March_supplementaryUplink_uplinkConfigCommon),
        ])
    _SIB1_March_supplementaryUplink._ext = []
    _SIB1_March_tdd_UL_DL_Configuration = SEQ(name='tdd-UL-DL-Configuration', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _SIB1_March_tdd_UL_DL_configurationCommon2 = SEQ(name='tdd-UL-DL-configurationCommon2', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _SIB1_March_pdcch_ConfigCommon = SEQ(name='pdcch-ConfigCommon', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCCH-ConfigCommon')), opt=True)
    _SIB1_March_pucch_ConfigCommon = SEQ(name='pucch-ConfigCommon', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ConfigCommon')), opt=True)
    _SIB1_March_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_March_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_March_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SIB1_March_nonCriticalExtension._ext = []
    SIB1_March._cont = ASN1Dict([
        ('frequencyOffsetSSB', _SIB1_March_frequencyOffsetSSB),
        ('ssb-PositionsInBurst', _SIB1_March_ssb_PositionsInBurst),
        ('ssb-PeriodicityServingCell', _SIB1_March_ssb_PeriodicityServingCell),
        ('ss-PBCH-BlockPower', _SIB1_March_ss_PBCH_BlockPower),
        ('uplinkConfigCommon', _SIB1_March_uplinkConfigCommon),
        ('supplementaryUplink', _SIB1_March_supplementaryUplink),
        ('tdd-UL-DL-Configuration', _SIB1_March_tdd_UL_DL_Configuration),
        ('tdd-UL-DL-configurationCommon2', _SIB1_March_tdd_UL_DL_configurationCommon2),
        ('pdcch-ConfigCommon', _SIB1_March_pdcch_ConfigCommon),
        ('pucch-ConfigCommon', _SIB1_March_pucch_ConfigCommon),
        ('lateNonCriticalExtension', _SIB1_March_lateNonCriticalExtension),
        ('nonCriticalExtension', _SIB1_March_nonCriticalExtension),
        ])
    SIB1_March._ext = []
    
    #-----< SIB1 >-----#
    SIB1 = SEQ(name='SIB1', mode=MODE_TYPE)
    _SIB1_cellSelectionInfo = SEQ(name='cellSelectionInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SIB1_cellSelectionInfo_q_RxLevMin = INT(name='q-RxLevMin', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-RxLevMin')))
    __SIB1_cellSelectionInfo_q_QualMin = INT(name='q-QualMin', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-QualMin')), opt=True)
    _SIB1_cellSelectionInfo._cont = ASN1Dict([
        ('q-RxLevMin', __SIB1_cellSelectionInfo_q_RxLevMin),
        ('q-QualMin', __SIB1_cellSelectionInfo_q_QualMin),
        ])
    _SIB1_cellSelectionInfo._ext = []
    _SIB1_cellAccessRelatedInfo = SEQ(name='cellAccessRelatedInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellAccessRelatedInfo')))
    _SIB1_servingCellConfigCommon = SEQ(name='servingCellConfigCommon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServingCellConfigCommonSIB')), opt=True)
    _SIB1_ims_EmergencySupport = ENUM(name='ims-EmergencySupport', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_ims_EmergencySupport._cont = ASN1Dict([('true', 0)])
    _SIB1_ims_EmergencySupport._ext = []
    _SIB1_eCallOverIMS_Support = ENUM(name='eCallOverIMS-Support', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_eCallOverIMS_Support._cont = ASN1Dict([('true', 0)])
    _SIB1_eCallOverIMS_Support._ext = []
    _SIB1_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SIB1_nonCriticalExtension._cont = ASN1Dict([
        ])
    _SIB1_nonCriticalExtension._ext = []
    SIB1._cont = ASN1Dict([
        ('cellSelectionInfo', _SIB1_cellSelectionInfo),
        ('cellAccessRelatedInfo', _SIB1_cellAccessRelatedInfo),
        ('servingCellConfigCommon', _SIB1_servingCellConfigCommon),
        ('ims-EmergencySupport', _SIB1_ims_EmergencySupport),
        ('eCallOverIMS-Support', _SIB1_eCallOverIMS_Support),
        ('lateNonCriticalExtension', _SIB1_lateNonCriticalExtension),
        ('nonCriticalExtension', _SIB1_nonCriticalExtension),
        ])
    SIB1._ext = []
    
    #-----< CellAccessRelatedInfo >-----#
    CellAccessRelatedInfo = SEQ(name='CellAccessRelatedInfo', mode=MODE_TYPE)
    _CellAccessRelatedInfo_plmn_IdentityList = SEQ_OF(name='plmn-IdentityList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PLMN-IdentityInfoList')))
    _CellAccessRelatedInfo_ranac = BIT_STR(name='ranac', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAN-AreaCode')), opt=True)
    _CellAccessRelatedInfo_reservedForFutureUse = ENUM(name='reservedForFutureUse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CellAccessRelatedInfo_reservedForFutureUse._cont = ASN1Dict([('true', 0)])
    _CellAccessRelatedInfo_reservedForFutureUse._ext = []
    CellAccessRelatedInfo._cont = ASN1Dict([
        ('plmn-IdentityList', _CellAccessRelatedInfo_plmn_IdentityList),
        ('ranac', _CellAccessRelatedInfo_ranac),
        ('reservedForFutureUse', _CellAccessRelatedInfo_reservedForFutureUse),
        ])
    CellAccessRelatedInfo._ext = []
    
    #-----< PLMN-IdentityInfoList >-----#
    PLMN_IdentityInfoList = SEQ_OF(name='PLMN-IdentityInfoList', mode=MODE_TYPE)
    _PLMN_IdentityInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PLMN-IdentityInfo')))
    PLMN_IdentityInfoList._cont = _PLMN_IdentityInfoList__item_
    PLMN_IdentityInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    
    #-----< PLMN-IdentityInfo >-----#
    PLMN_IdentityInfo = SEQ(name='PLMN-IdentityInfo', mode=MODE_TYPE)
    _PLMN_IdentityInfo_plmn_IdentityList = SEQ_OF(name='plmn-IdentityList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PLMN_IdentityInfo_plmn_IdentityList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PLMN-Identity')))
    _PLMN_IdentityInfo_plmn_IdentityList._cont = __PLMN_IdentityInfo_plmn_IdentityList__item_
    _PLMN_IdentityInfo_plmn_IdentityList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=12)], ev=None, er=[])
    _PLMN_IdentityInfo_trackingAreaCode = OCT_STR(name='trackingAreaCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TrackingAreaCode')))
    _PLMN_IdentityInfo_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellIdentity')))
    _PLMN_IdentityInfo_cellReservedForOperatorUse = ENUM(name='cellReservedForOperatorUse', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PLMN_IdentityInfo_cellReservedForOperatorUse._cont = ASN1Dict([('reserved', 0), ('notReserved', 1)])
    _PLMN_IdentityInfo_cellReservedForOperatorUse._ext = []
    PLMN_IdentityInfo._cont = ASN1Dict([
        ('plmn-IdentityList', _PLMN_IdentityInfo_plmn_IdentityList),
        ('trackingAreaCode', _PLMN_IdentityInfo_trackingAreaCode),
        ('cellIdentity', _PLMN_IdentityInfo_cellIdentity),
        ('cellReservedForOperatorUse', _PLMN_IdentityInfo_cellReservedForOperatorUse),
        ])
    PLMN_IdentityInfo._ext = []
    
    #-----< Q-QualMin >-----#
    Q_QualMin = INT(name='Q-QualMin', mode=MODE_TYPE)
    Q_QualMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-34, ub=-3)], ev=None, er=[])
    
    #-----< Q-RxLevMin >-----#
    Q_RxLevMin = INT(name='Q-RxLevMin', mode=MODE_TYPE)
    Q_RxLevMin._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-70, ub=-22)], ev=None, er=[])
    
    #-----< ServingCellConfigCommonSIB >-----#
    ServingCellConfigCommonSIB = SEQ(name='ServingCellConfigCommonSIB', mode=MODE_TYPE)
    _ServingCellConfigCommonSIB_frequencyOffsetSSB = ENUM(name='frequencyOffsetSSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfigCommonSIB_frequencyOffsetSSB._cont = ASN1Dict([('khz-5', 0), ('khz5', 1)])
    _ServingCellConfigCommonSIB_frequencyOffsetSSB._ext = []
    _ServingCellConfigCommonSIB_ssb_PositionsInBurst = SEQ(name='ssb-PositionsInBurst', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommonSIB_ssb_PositionsInBurst_inOneGroup = BIT_STR(name='inOneGroup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommonSIB_ssb_PositionsInBurst_inOneGroup._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __ServingCellConfigCommonSIB_ssb_PositionsInBurst_groupPresence = BIT_STR(name='groupPresence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfigCommonSIB_ssb_PositionsInBurst_groupPresence._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _ServingCellConfigCommonSIB_ssb_PositionsInBurst._cont = ASN1Dict([
        ('inOneGroup', __ServingCellConfigCommonSIB_ssb_PositionsInBurst_inOneGroup),
        ('groupPresence', __ServingCellConfigCommonSIB_ssb_PositionsInBurst_groupPresence),
        ])
    _ServingCellConfigCommonSIB_ssb_PositionsInBurst._ext = []
    _ServingCellConfigCommonSIB_ssb_PeriodicityServingCell = ENUM(name='ssb-PeriodicityServingCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServingCellConfigCommonSIB_ssb_PeriodicityServingCell._cont = ASN1Dict([('ms5', 0), ('ms10', 1), ('ms20', 2), ('ms40', 3), ('ms80', 4), ('ms160', 5), ('spare1', 6), ('spare2', 7)])
    _ServingCellConfigCommonSIB_ssb_PeriodicityServingCell._ext = []
    _ServingCellConfigCommonSIB_ss_PBCH_BlockPower = INT(name='ss-PBCH-BlockPower', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServingCellConfigCommonSIB_ss_PBCH_BlockPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=50)], ev=None, er=[])
    _ServingCellConfigCommonSIB_uplinkConfigCommon = SEQ(name='uplinkConfigCommon', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommonSIB')), opt=True)
    _ServingCellConfigCommonSIB_supplementaryUplink = SEQ(name='supplementaryUplink', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfigCommonSIB_supplementaryUplink_uplinkConfigCommon = SEQ(name='uplinkConfigCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommonSIB')), opt=True)
    _ServingCellConfigCommonSIB_supplementaryUplink._cont = ASN1Dict([
        ('uplinkConfigCommon', __ServingCellConfigCommonSIB_supplementaryUplink_uplinkConfigCommon),
        ])
    _ServingCellConfigCommonSIB_supplementaryUplink._ext = []
    _ServingCellConfigCommonSIB_tdd_UL_DL_Configuration = SEQ(name='tdd-UL-DL-Configuration', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _ServingCellConfigCommonSIB_tdd_UL_DL_configurationCommon2 = SEQ(name='tdd-UL-DL-configurationCommon2', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _ServingCellConfigCommonSIB_pdcch_ConfigCommon = SEQ(name='pdcch-ConfigCommon', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCCH-ConfigCommon')), opt=True)
    _ServingCellConfigCommonSIB_timeAlignmentTimerCommon = ENUM(name='timeAlignmentTimerCommon', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeAlignmentTimer')))
    _ServingCellConfigCommonSIB_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfigCommonSIB_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfigCommonSIB_nonCriticalExtension._cont = ASN1Dict([
        ])
    _ServingCellConfigCommonSIB_nonCriticalExtension._ext = []
    ServingCellConfigCommonSIB._cont = ASN1Dict([
        ('frequencyOffsetSSB', _ServingCellConfigCommonSIB_frequencyOffsetSSB),
        ('ssb-PositionsInBurst', _ServingCellConfigCommonSIB_ssb_PositionsInBurst),
        ('ssb-PeriodicityServingCell', _ServingCellConfigCommonSIB_ssb_PeriodicityServingCell),
        ('ss-PBCH-BlockPower', _ServingCellConfigCommonSIB_ss_PBCH_BlockPower),
        ('uplinkConfigCommon', _ServingCellConfigCommonSIB_uplinkConfigCommon),
        ('supplementaryUplink', _ServingCellConfigCommonSIB_supplementaryUplink),
        ('tdd-UL-DL-Configuration', _ServingCellConfigCommonSIB_tdd_UL_DL_Configuration),
        ('tdd-UL-DL-configurationCommon2', _ServingCellConfigCommonSIB_tdd_UL_DL_configurationCommon2),
        ('pdcch-ConfigCommon', _ServingCellConfigCommonSIB_pdcch_ConfigCommon),
        ('timeAlignmentTimerCommon', _ServingCellConfigCommonSIB_timeAlignmentTimerCommon),
        ('lateNonCriticalExtension', _ServingCellConfigCommonSIB_lateNonCriticalExtension),
        ('nonCriticalExtension', _ServingCellConfigCommonSIB_nonCriticalExtension),
        ])
    ServingCellConfigCommonSIB._ext = []
    
    #-----< UplinkConfigCommonSIB >-----#
    UplinkConfigCommonSIB = SEQ(name='UplinkConfigCommonSIB', mode=MODE_TYPE)
    _UplinkConfigCommonSIB_frequencyInfoUL = SEQ(name='frequencyInfoUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FrequencyInfoUL')), opt=True)
    _UplinkConfigCommonSIB_initialUplinkBWP = SEQ(name='initialUplinkBWP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-UplinkCommonSIB')), opt=True)
    UplinkConfigCommonSIB._cont = ASN1Dict([
        ('frequencyInfoUL', _UplinkConfigCommonSIB_frequencyInfoUL),
        ('initialUplinkBWP', _UplinkConfigCommonSIB_initialUplinkBWP),
        ])
    UplinkConfigCommonSIB._ext = []
    
    #-----< BWP-UplinkCommonSIB >-----#
    BWP_UplinkCommonSIB = SEQ(name='BWP-UplinkCommonSIB', mode=MODE_TYPE)
    _BWP_UplinkCommonSIB_genericParameters = SEQ(name='genericParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP')))
    _BWP_UplinkCommonSIB_rach_ConfigCommon = SEQ(name='rach-ConfigCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigCommon')))
    _BWP_UplinkCommonSIB_pusch_ConfigCommon = SEQ(name='pusch-ConfigCommon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-ConfigCommon')))
    _BWP_UplinkCommonSIB_pucch_ConfigCommon = SEQ(name='pucch-ConfigCommon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ConfigCommon')))
    BWP_UplinkCommonSIB._cont = ASN1Dict([
        ('genericParameters', _BWP_UplinkCommonSIB_genericParameters),
        ('rach-ConfigCommon', _BWP_UplinkCommonSIB_rach_ConfigCommon),
        ('pusch-ConfigCommon', _BWP_UplinkCommonSIB_pusch_ConfigCommon),
        ('pucch-ConfigCommon', _BWP_UplinkCommonSIB_pucch_ConfigCommon),
        ])
    BWP_UplinkCommonSIB._ext = []
    
    #-----< SI-Message >-----#
    SI_Message = OCT_STR(name='SI-Message', mode=MODE_TYPE)
    
    #-----< SetupRelease >-----#
    SetupRelease = CHOICE(name='SetupRelease', mode=MODE_TYPE, param=True)
    
    #-----< AdditionalSpectrumEmission >-----#
    AdditionalSpectrumEmission = INT(name='AdditionalSpectrumEmission', mode=MODE_TYPE)
    AdditionalSpectrumEmission._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< Alpha >-----#
    Alpha = ENUM(name='Alpha', mode=MODE_TYPE)
    Alpha._cont = ASN1Dict([('alpha0', 0), ('alpha04', 1), ('alpha05', 2), ('alpha06', 3), ('alpha07', 4), ('alpha08', 5), ('alpha09', 6), ('alpha1', 7)])
    Alpha._ext = []
    
    #-----< AMF-RegionID >-----#
    AMF_RegionID = BIT_STR(name='AMF-RegionID', mode=MODE_TYPE)
    AMF_RegionID._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< AMF-SetID >-----#
    AMF_SetID = BIT_STR(name='AMF-SetID', mode=MODE_TYPE)
    AMF_SetID._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< AMF-Pointer >-----#
    AMF_Pointer = BIT_STR(name='AMF-Pointer', mode=MODE_TYPE)
    AMF_Pointer._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< ARFCN-ValueNR >-----#
    ARFCN_ValueNR = INT(name='ARFCN-ValueNR', mode=MODE_TYPE)
    ARFCN_ValueNR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3279165)], ev=None, er=[])
    
    #-----< ARFCN-ValueEUTRA >-----#
    ARFCN_ValueEUTRA = INT(name='ARFCN-ValueEUTRA', mode=MODE_TYPE)
    ARFCN_ValueEUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=262143)], ev=None, er=[])
    
    #-----< BWP >-----#
    BWP = SEQ(name='BWP', mode=MODE_TYPE)
    _BWP_locationAndBandwidth = INT(name='locationAndBandwidth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BWP_locationAndBandwidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=37949)], ev=None, er=[])
    _BWP_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _BWP_cyclicPrefix = ENUM(name='cyclicPrefix', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BWP_cyclicPrefix._cont = ASN1Dict([('extended', 0)])
    _BWP_cyclicPrefix._ext = []
    BWP._cont = ASN1Dict([
        ('locationAndBandwidth', _BWP_locationAndBandwidth),
        ('subcarrierSpacing', _BWP_subcarrierSpacing),
        ('cyclicPrefix', _BWP_cyclicPrefix),
        ])
    BWP._ext = []
    
    #-----< BWP-Uplink >-----#
    BWP_Uplink = SEQ(name='BWP-Uplink', mode=MODE_TYPE)
    _BWP_Uplink_bwp_Id = INT(name='bwp-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _BWP_Uplink_bwp_Common = SEQ(name='bwp-Common', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-UplinkCommon')), opt=True)
    _BWP_Uplink_bwp_Dedicated = SEQ(name='bwp-Dedicated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-UplinkDedicated')), opt=True)
    BWP_Uplink._cont = ASN1Dict([
        ('bwp-Id', _BWP_Uplink_bwp_Id),
        ('bwp-Common', _BWP_Uplink_bwp_Common),
        ('bwp-Dedicated', _BWP_Uplink_bwp_Dedicated),
        ])
    BWP_Uplink._ext = []
    
    #-----< BWP-UplinkCommon >-----#
    BWP_UplinkCommon = SEQ(name='BWP-UplinkCommon', mode=MODE_TYPE)
    _BWP_UplinkCommon_genericParameters = SEQ(name='genericParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP')))
    _BWP_UplinkCommon_rach_ConfigCommon = CHOICE(name='rach-ConfigCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkCommon_rach_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkCommon_rach_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigCommon')))
    _BWP_UplinkCommon_rach_ConfigCommon._cont = ASN1Dict([
        ('release', __BWP_UplinkCommon_rach_ConfigCommon_release),
        ('setup', __BWP_UplinkCommon_rach_ConfigCommon_setup),
        ])
    _BWP_UplinkCommon_rach_ConfigCommon._ext = []
    _BWP_UplinkCommon_pusch_ConfigCommon = CHOICE(name='pusch-ConfigCommon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkCommon_pusch_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkCommon_pusch_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-ConfigCommon')))
    _BWP_UplinkCommon_pusch_ConfigCommon._cont = ASN1Dict([
        ('release', __BWP_UplinkCommon_pusch_ConfigCommon_release),
        ('setup', __BWP_UplinkCommon_pusch_ConfigCommon_setup),
        ])
    _BWP_UplinkCommon_pusch_ConfigCommon._ext = []
    _BWP_UplinkCommon_pucch_ConfigCommon = CHOICE(name='pucch-ConfigCommon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkCommon_pucch_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkCommon_pucch_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ConfigCommon')))
    _BWP_UplinkCommon_pucch_ConfigCommon._cont = ASN1Dict([
        ('release', __BWP_UplinkCommon_pucch_ConfigCommon_release),
        ('setup', __BWP_UplinkCommon_pucch_ConfigCommon_setup),
        ])
    _BWP_UplinkCommon_pucch_ConfigCommon._ext = []
    BWP_UplinkCommon._cont = ASN1Dict([
        ('genericParameters', _BWP_UplinkCommon_genericParameters),
        ('rach-ConfigCommon', _BWP_UplinkCommon_rach_ConfigCommon),
        ('pusch-ConfigCommon', _BWP_UplinkCommon_pusch_ConfigCommon),
        ('pucch-ConfigCommon', _BWP_UplinkCommon_pucch_ConfigCommon),
        ])
    BWP_UplinkCommon._ext = []
    
    #-----< BWP-UplinkDedicated >-----#
    BWP_UplinkDedicated = SEQ(name='BWP-UplinkDedicated', mode=MODE_TYPE)
    _BWP_UplinkDedicated_pucch_Config = CHOICE(name='pucch-Config', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkDedicated_pucch_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkDedicated_pucch_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-Config')))
    _BWP_UplinkDedicated_pucch_Config._cont = ASN1Dict([
        ('release', __BWP_UplinkDedicated_pucch_Config_release),
        ('setup', __BWP_UplinkDedicated_pucch_Config_setup),
        ])
    _BWP_UplinkDedicated_pucch_Config._ext = []
    _BWP_UplinkDedicated_pusch_Config = CHOICE(name='pusch-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkDedicated_pusch_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkDedicated_pusch_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-Config')))
    _BWP_UplinkDedicated_pusch_Config._cont = ASN1Dict([
        ('release', __BWP_UplinkDedicated_pusch_Config_release),
        ('setup', __BWP_UplinkDedicated_pusch_Config_setup),
        ])
    _BWP_UplinkDedicated_pusch_Config._ext = []
    _BWP_UplinkDedicated_configuredGrantConfig = CHOICE(name='configuredGrantConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkDedicated_configuredGrantConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkDedicated_configuredGrantConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ConfiguredGrantConfig')))
    _BWP_UplinkDedicated_configuredGrantConfig._cont = ASN1Dict([
        ('release', __BWP_UplinkDedicated_configuredGrantConfig_release),
        ('setup', __BWP_UplinkDedicated_configuredGrantConfig_setup),
        ])
    _BWP_UplinkDedicated_configuredGrantConfig._ext = []
    _BWP_UplinkDedicated_srs_Config = CHOICE(name='srs-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkDedicated_srs_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkDedicated_srs_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-Config')))
    _BWP_UplinkDedicated_srs_Config._cont = ASN1Dict([
        ('release', __BWP_UplinkDedicated_srs_Config_release),
        ('setup', __BWP_UplinkDedicated_srs_Config_setup),
        ])
    _BWP_UplinkDedicated_srs_Config._ext = []
    _BWP_UplinkDedicated_beamFailureRecoveryConfig = CHOICE(name='beamFailureRecoveryConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_UplinkDedicated_beamFailureRecoveryConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_UplinkDedicated_beamFailureRecoveryConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BeamFailureRecoveryConfig')))
    _BWP_UplinkDedicated_beamFailureRecoveryConfig._cont = ASN1Dict([
        ('release', __BWP_UplinkDedicated_beamFailureRecoveryConfig_release),
        ('setup', __BWP_UplinkDedicated_beamFailureRecoveryConfig_setup),
        ])
    _BWP_UplinkDedicated_beamFailureRecoveryConfig._ext = []
    BWP_UplinkDedicated._cont = ASN1Dict([
        ('pucch-Config', _BWP_UplinkDedicated_pucch_Config),
        ('pusch-Config', _BWP_UplinkDedicated_pusch_Config),
        ('configuredGrantConfig', _BWP_UplinkDedicated_configuredGrantConfig),
        ('srs-Config', _BWP_UplinkDedicated_srs_Config),
        ('beamFailureRecoveryConfig', _BWP_UplinkDedicated_beamFailureRecoveryConfig),
        ])
    BWP_UplinkDedicated._ext = []
    
    #-----< BWP-Downlink >-----#
    BWP_Downlink = SEQ(name='BWP-Downlink', mode=MODE_TYPE)
    _BWP_Downlink_bwp_Id = INT(name='bwp-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _BWP_Downlink_bwp_Common = SEQ(name='bwp-Common', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-DownlinkCommon')), opt=True)
    _BWP_Downlink_bwp_Dedicated = SEQ(name='bwp-Dedicated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-DownlinkDedicated')), opt=True)
    BWP_Downlink._cont = ASN1Dict([
        ('bwp-Id', _BWP_Downlink_bwp_Id),
        ('bwp-Common', _BWP_Downlink_bwp_Common),
        ('bwp-Dedicated', _BWP_Downlink_bwp_Dedicated),
        ])
    BWP_Downlink._ext = []
    
    #-----< BWP-DownlinkCommon >-----#
    BWP_DownlinkCommon = SEQ(name='BWP-DownlinkCommon', mode=MODE_TYPE)
    _BWP_DownlinkCommon_genericParameters = SEQ(name='genericParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP')))
    _BWP_DownlinkCommon_pdcch_ConfigCommon = CHOICE(name='pdcch-ConfigCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkCommon_pdcch_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkCommon_pdcch_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCCH-ConfigCommon')))
    _BWP_DownlinkCommon_pdcch_ConfigCommon._cont = ASN1Dict([
        ('release', __BWP_DownlinkCommon_pdcch_ConfigCommon_release),
        ('setup', __BWP_DownlinkCommon_pdcch_ConfigCommon_setup),
        ])
    _BWP_DownlinkCommon_pdcch_ConfigCommon._ext = []
    _BWP_DownlinkCommon_pdsch_ConfigCommon = CHOICE(name='pdsch-ConfigCommon', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkCommon_pdsch_ConfigCommon_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkCommon_pdsch_ConfigCommon_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-ConfigCommon')))
    _BWP_DownlinkCommon_pdsch_ConfigCommon._cont = ASN1Dict([
        ('release', __BWP_DownlinkCommon_pdsch_ConfigCommon_release),
        ('setup', __BWP_DownlinkCommon_pdsch_ConfigCommon_setup),
        ])
    _BWP_DownlinkCommon_pdsch_ConfigCommon._ext = []
    BWP_DownlinkCommon._cont = ASN1Dict([
        ('genericParameters', _BWP_DownlinkCommon_genericParameters),
        ('pdcch-ConfigCommon', _BWP_DownlinkCommon_pdcch_ConfigCommon),
        ('pdsch-ConfigCommon', _BWP_DownlinkCommon_pdsch_ConfigCommon),
        ])
    BWP_DownlinkCommon._ext = []
    
    #-----< BWP-DownlinkDedicated >-----#
    BWP_DownlinkDedicated = SEQ(name='BWP-DownlinkDedicated', mode=MODE_TYPE)
    _BWP_DownlinkDedicated_pdcch_Config = CHOICE(name='pdcch-Config', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkDedicated_pdcch_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkDedicated_pdcch_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCCH-Config')))
    _BWP_DownlinkDedicated_pdcch_Config._cont = ASN1Dict([
        ('release', __BWP_DownlinkDedicated_pdcch_Config_release),
        ('setup', __BWP_DownlinkDedicated_pdcch_Config_setup),
        ])
    _BWP_DownlinkDedicated_pdcch_Config._ext = []
    _BWP_DownlinkDedicated_pdsch_Config = CHOICE(name='pdsch-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkDedicated_pdsch_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkDedicated_pdsch_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-Config')))
    _BWP_DownlinkDedicated_pdsch_Config._cont = ASN1Dict([
        ('release', __BWP_DownlinkDedicated_pdsch_Config_release),
        ('setup', __BWP_DownlinkDedicated_pdsch_Config_setup),
        ])
    _BWP_DownlinkDedicated_pdsch_Config._ext = []
    _BWP_DownlinkDedicated_sps_Config = CHOICE(name='sps-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkDedicated_sps_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkDedicated_sps_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SPS-Config')))
    _BWP_DownlinkDedicated_sps_Config._cont = ASN1Dict([
        ('release', __BWP_DownlinkDedicated_sps_Config_release),
        ('setup', __BWP_DownlinkDedicated_sps_Config_setup),
        ])
    _BWP_DownlinkDedicated_sps_Config._ext = []
    _BWP_DownlinkDedicated_radioLinkMonitoringConfig = CHOICE(name='radioLinkMonitoringConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __BWP_DownlinkDedicated_radioLinkMonitoringConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BWP_DownlinkDedicated_radioLinkMonitoringConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioLinkMonitoringConfig')))
    _BWP_DownlinkDedicated_radioLinkMonitoringConfig._cont = ASN1Dict([
        ('release', __BWP_DownlinkDedicated_radioLinkMonitoringConfig_release),
        ('setup', __BWP_DownlinkDedicated_radioLinkMonitoringConfig_setup),
        ])
    _BWP_DownlinkDedicated_radioLinkMonitoringConfig._ext = []
    BWP_DownlinkDedicated._cont = ASN1Dict([
        ('pdcch-Config', _BWP_DownlinkDedicated_pdcch_Config),
        ('pdsch-Config', _BWP_DownlinkDedicated_pdsch_Config),
        ('sps-Config', _BWP_DownlinkDedicated_sps_Config),
        ('radioLinkMonitoringConfig', _BWP_DownlinkDedicated_radioLinkMonitoringConfig),
        ])
    BWP_DownlinkDedicated._ext = []
    
    #-----< BWP-Id >-----#
    BWP_Id = INT(name='BWP-Id', mode=MODE_TYPE)
    BWP_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    
    #-----< BeamFailureRecoveryConfig >-----#
    BeamFailureRecoveryConfig = SEQ(name='BeamFailureRecoveryConfig', mode=MODE_TYPE)
    _BeamFailureRecoveryConfig_rootSequenceIndex_BFR = INT(name='rootSequenceIndex-BFR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BeamFailureRecoveryConfig_rootSequenceIndex_BFR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=137)], ev=None, er=[])
    _BeamFailureRecoveryConfig_rach_ConfigBFR = SEQ(name='rach-ConfigBFR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigGeneric')), opt=True)
    _BeamFailureRecoveryConfig_candidateBeamThreshold = INT(name='candidateBeamThreshold', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    _BeamFailureRecoveryConfig_candidateBeamRSList = SEQ_OF(name='candidateBeamRSList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BeamFailureRecoveryConfig_candidateBeamRSList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PRACH-ResourceDedicatedBFR')))
    _BeamFailureRecoveryConfig_candidateBeamRSList._cont = __BeamFailureRecoveryConfig_candidateBeamRSList__item_
    _BeamFailureRecoveryConfig_candidateBeamRSList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _BeamFailureRecoveryConfig_ra_ssb_OccasionMaskIndex = INT(name='ra-ssb-OccasionMaskIndex', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BeamFailureRecoveryConfig_ra_ssb_OccasionMaskIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _BeamFailureRecoveryConfig_recoveryControlResourceSetId = INT(name='recoveryControlResourceSetId', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')), opt=True)
    _BeamFailureRecoveryConfig_recoverySearchSpaceId = INT(name='recoverySearchSpaceId', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')), opt=True)
    BeamFailureRecoveryConfig._cont = ASN1Dict([
        ('rootSequenceIndex-BFR', _BeamFailureRecoveryConfig_rootSequenceIndex_BFR),
        ('rach-ConfigBFR', _BeamFailureRecoveryConfig_rach_ConfigBFR),
        ('candidateBeamThreshold', _BeamFailureRecoveryConfig_candidateBeamThreshold),
        ('candidateBeamRSList', _BeamFailureRecoveryConfig_candidateBeamRSList),
        ('ra-ssb-OccasionMaskIndex', _BeamFailureRecoveryConfig_ra_ssb_OccasionMaskIndex),
        ('recoveryControlResourceSetId', _BeamFailureRecoveryConfig_recoveryControlResourceSetId),
        ('recoverySearchSpaceId', _BeamFailureRecoveryConfig_recoverySearchSpaceId),
        ])
    BeamFailureRecoveryConfig._ext = []
    
    #-----< PRACH-ResourceDedicatedBFR >-----#
    PRACH_ResourceDedicatedBFR = CHOICE(name='PRACH-ResourceDedicatedBFR', mode=MODE_TYPE)
    _PRACH_ResourceDedicatedBFR_ssb = SEQ(name='ssb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BFR-SSB-Resource')))
    _PRACH_ResourceDedicatedBFR_csi_RS = SEQ(name='csi-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BFR-CSIRS-Resource')))
    PRACH_ResourceDedicatedBFR._cont = ASN1Dict([
        ('ssb', _PRACH_ResourceDedicatedBFR_ssb),
        ('csi-RS', _PRACH_ResourceDedicatedBFR_csi_RS),
        ])
    PRACH_ResourceDedicatedBFR._ext = []
    
    #-----< BFR-SSB-Resource >-----#
    BFR_SSB_Resource = SEQ(name='BFR-SSB-Resource', mode=MODE_TYPE)
    _BFR_SSB_Resource_ssb = INT(name='ssb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    _BFR_SSB_Resource_ra_PreambleIndex = INT(name='ra-PreambleIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BFR_SSB_Resource_ra_PreambleIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    BFR_SSB_Resource._cont = ASN1Dict([
        ('ssb', _BFR_SSB_Resource_ssb),
        ('ra-PreambleIndex', _BFR_SSB_Resource_ra_PreambleIndex),
        ])
    BFR_SSB_Resource._ext = []
    
    #-----< BFR-CSIRS-Resource >-----#
    BFR_CSIRS_Resource = SEQ(name='BFR-CSIRS-Resource', mode=MODE_TYPE)
    _BFR_CSIRS_Resource_csi_RS = INT(name='csi-RS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _BFR_CSIRS_Resource_ra_PreambleIndex = INT(name='ra-PreambleIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BFR_CSIRS_Resource_ra_PreambleIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    BFR_CSIRS_Resource._cont = ASN1Dict([
        ('csi-RS', _BFR_CSIRS_Resource_csi_RS),
        ('ra-PreambleIndex', _BFR_CSIRS_Resource_ra_PreambleIndex),
        ])
    BFR_CSIRS_Resource._ext = []
    
    #-----< CellGroupConfig >-----#
    CellGroupConfig = SEQ(name='CellGroupConfig', mode=MODE_TYPE)
    _CellGroupConfig_cellGroupId = INT(name='cellGroupId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupId')))
    _CellGroupConfig_rlc_BearerToAddModList = SEQ_OF(name='rlc-BearerToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CellGroupConfig_rlc_BearerToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RLC-Bearer-Config')))
    _CellGroupConfig_rlc_BearerToAddModList._cont = __CellGroupConfig_rlc_BearerToAddModList__item_
    _CellGroupConfig_rlc_BearerToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellGroupConfig_rlc_BearerToReleaseList = SEQ_OF(name='rlc-BearerToReleaseList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CellGroupConfig_rlc_BearerToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'LogicalChannelIdentity')))
    _CellGroupConfig_rlc_BearerToReleaseList._cont = __CellGroupConfig_rlc_BearerToReleaseList__item_
    _CellGroupConfig_rlc_BearerToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CellGroupConfig_mac_CellGroupConfig = SEQ(name='mac-CellGroupConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MAC-CellGroupConfig')), opt=True)
    _CellGroupConfig_physicalCellGroupConfig = SEQ(name='physicalCellGroupConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysicalCellGroupConfig')), opt=True)
    _CellGroupConfig_spCellConfig = SEQ(name='spCellConfig', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SpCellConfig')), opt=True)
    _CellGroupConfig_sCellToAddModList = SEQ_OF(name='sCellToAddModList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CellGroupConfig_sCellToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SCellConfig')))
    _CellGroupConfig_sCellToAddModList._cont = __CellGroupConfig_sCellToAddModList__item_
    _CellGroupConfig_sCellToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    _CellGroupConfig_sCellToReleaseList = SEQ_OF(name='sCellToReleaseList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CellGroupConfig_sCellToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SCellIndex')))
    _CellGroupConfig_sCellToReleaseList._cont = __CellGroupConfig_sCellToReleaseList__item_
    _CellGroupConfig_sCellToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    CellGroupConfig._cont = ASN1Dict([
        ('cellGroupId', _CellGroupConfig_cellGroupId),
        ('rlc-BearerToAddModList', _CellGroupConfig_rlc_BearerToAddModList),
        ('rlc-BearerToReleaseList', _CellGroupConfig_rlc_BearerToReleaseList),
        ('mac-CellGroupConfig', _CellGroupConfig_mac_CellGroupConfig),
        ('physicalCellGroupConfig', _CellGroupConfig_physicalCellGroupConfig),
        ('spCellConfig', _CellGroupConfig_spCellConfig),
        ('sCellToAddModList', _CellGroupConfig_sCellToAddModList),
        ('sCellToReleaseList', _CellGroupConfig_sCellToReleaseList),
        ])
    CellGroupConfig._ext = []
    
    #-----< CellGroupId >-----#
    CellGroupId = INT(name='CellGroupId', mode=MODE_TYPE)
    CellGroupId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< RLC-Bearer-Config >-----#
    RLC_Bearer_Config = SEQ(name='RLC-Bearer-Config', mode=MODE_TYPE)
    _RLC_Bearer_Config_logicalChannelIdentity = INT(name='logicalChannelIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'LogicalChannelIdentity')))
    _RLC_Bearer_Config_servedRadioBearer = CHOICE(name='servedRadioBearer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __RLC_Bearer_Config_servedRadioBearer_srb_Identity = INT(name='srb-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRB-Identity')))
    __RLC_Bearer_Config_servedRadioBearer_drb_Identity = INT(name='drb-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-Identity')))
    _RLC_Bearer_Config_servedRadioBearer._cont = ASN1Dict([
        ('srb-Identity', __RLC_Bearer_Config_servedRadioBearer_srb_Identity),
        ('drb-Identity', __RLC_Bearer_Config_servedRadioBearer_drb_Identity),
        ])
    _RLC_Bearer_Config_servedRadioBearer._ext = []
    _RLC_Bearer_Config_reestablishRLC = ENUM(name='reestablishRLC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RLC_Bearer_Config_reestablishRLC._cont = ASN1Dict([('true', 0)])
    _RLC_Bearer_Config_reestablishRLC._ext = []
    _RLC_Bearer_Config_rlc_Config = CHOICE(name='rlc-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RLC-Config')), opt=True)
    _RLC_Bearer_Config_mac_LogicalChannelConfig = SEQ(name='mac-LogicalChannelConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'LogicalChannelConfig')), opt=True)
    RLC_Bearer_Config._cont = ASN1Dict([
        ('logicalChannelIdentity', _RLC_Bearer_Config_logicalChannelIdentity),
        ('servedRadioBearer', _RLC_Bearer_Config_servedRadioBearer),
        ('reestablishRLC', _RLC_Bearer_Config_reestablishRLC),
        ('rlc-Config', _RLC_Bearer_Config_rlc_Config),
        ('mac-LogicalChannelConfig', _RLC_Bearer_Config_mac_LogicalChannelConfig),
        ])
    RLC_Bearer_Config._ext = []
    
    #-----< LogicalChannelIdentity >-----#
    LogicalChannelIdentity = INT(name='LogicalChannelIdentity', mode=MODE_TYPE)
    LogicalChannelIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< PhysicalCellGroupConfig >-----#
    PhysicalCellGroupConfig = SEQ(name='PhysicalCellGroupConfig', mode=MODE_TYPE)
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH = ENUM(name='harq-ACK-SpatialBundlingPUCCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH._cont = ASN1Dict([('true', 0)])
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH._ext = []
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH = ENUM(name='harq-ACK-SpatialBundlingPUSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH._cont = ASN1Dict([('true', 0)])
    _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH._ext = []
    _PhysicalCellGroupConfig_p_NR = INT(name='p-NR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P-Max')), opt=True)
    _PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook = ENUM(name='pdsch-HARQ-ACK-Codebook', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook._cont = ASN1Dict([('semiStatic', 0), ('dynamic', 1)])
    _PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook._ext = []
    _PhysicalCellGroupConfig_tpc_SRS_RNTI = INT(name='tpc-SRS-RNTI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')), opt=True)
    _PhysicalCellGroupConfig_tpc_PUCCH_RNTI = INT(name='tpc-PUCCH-RNTI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')), opt=True)
    _PhysicalCellGroupConfig_tpc_PUSCH_RNTI = INT(name='tpc-PUSCH-RNTI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')), opt=True)
    PhysicalCellGroupConfig._cont = ASN1Dict([
        ('harq-ACK-SpatialBundlingPUCCH', _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH),
        ('harq-ACK-SpatialBundlingPUSCH', _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH),
        ('p-NR', _PhysicalCellGroupConfig_p_NR),
        ('pdsch-HARQ-ACK-Codebook', _PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook),
        ('tpc-SRS-RNTI', _PhysicalCellGroupConfig_tpc_SRS_RNTI),
        ('tpc-PUCCH-RNTI', _PhysicalCellGroupConfig_tpc_PUCCH_RNTI),
        ('tpc-PUSCH-RNTI', _PhysicalCellGroupConfig_tpc_PUSCH_RNTI),
        ])
    PhysicalCellGroupConfig._ext = []
    
    #-----< SpCellConfig >-----#
    SpCellConfig = SEQ(name='SpCellConfig', mode=MODE_TYPE)
    _SpCellConfig_servCellIndex = INT(name='servCellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')), opt=True)
    _SpCellConfig_reconfigurationWithSync = SEQ(name='reconfigurationWithSync', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReconfigurationWithSync')), opt=True)
    _SpCellConfig_rlf_TimersAndConstants = CHOICE(name='rlf-TimersAndConstants', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __SpCellConfig_rlf_TimersAndConstants_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SpCellConfig_rlf_TimersAndConstants_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RLF-TimersAndConstants')))
    _SpCellConfig_rlf_TimersAndConstants._cont = ASN1Dict([
        ('release', __SpCellConfig_rlf_TimersAndConstants_release),
        ('setup', __SpCellConfig_rlf_TimersAndConstants_setup),
        ])
    _SpCellConfig_rlf_TimersAndConstants._ext = []
    _SpCellConfig_rlmInSyncOutOfSyncThreshold = INT(name='rlmInSyncOutOfSyncThreshold', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SpCellConfig_rlmInSyncOutOfSyncThreshold._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _SpCellConfig_spCellConfigDedicated = SEQ(name='spCellConfigDedicated', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServingCellConfig')), opt=True)
    SpCellConfig._cont = ASN1Dict([
        ('servCellIndex', _SpCellConfig_servCellIndex),
        ('reconfigurationWithSync', _SpCellConfig_reconfigurationWithSync),
        ('rlf-TimersAndConstants', _SpCellConfig_rlf_TimersAndConstants),
        ('rlmInSyncOutOfSyncThreshold', _SpCellConfig_rlmInSyncOutOfSyncThreshold),
        ('spCellConfigDedicated', _SpCellConfig_spCellConfigDedicated),
        ])
    SpCellConfig._ext = []
    
    #-----< ReconfigurationWithSync >-----#
    ReconfigurationWithSync = SEQ(name='ReconfigurationWithSync', mode=MODE_TYPE)
    _ReconfigurationWithSync_spCellConfigCommon = SEQ(name='spCellConfigCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServingCellConfigCommon')), opt=True)
    _ReconfigurationWithSync_newUE_Identity = INT(name='newUE-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _ReconfigurationWithSync_t304 = ENUM(name='t304', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReconfigurationWithSync_t304._cont = ASN1Dict([('ms50', 0), ('ms100', 1), ('ms150', 2), ('ms200', 3), ('ms500', 4), ('ms1000', 5), ('ms2000', 6), ('ms10000', 7)])
    _ReconfigurationWithSync_t304._ext = []
    _ReconfigurationWithSync_rach_ConfigDedicated = CHOICE(name='rach-ConfigDedicated', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __ReconfigurationWithSync_rach_ConfigDedicated_uplink = SEQ(name='uplink', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigDedicated')))
    __ReconfigurationWithSync_rach_ConfigDedicated_supplementaryUplink = SEQ(name='supplementaryUplink', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigDedicated')))
    _ReconfigurationWithSync_rach_ConfigDedicated._cont = ASN1Dict([
        ('uplink', __ReconfigurationWithSync_rach_ConfigDedicated_uplink),
        ('supplementaryUplink', __ReconfigurationWithSync_rach_ConfigDedicated_supplementaryUplink),
        ])
    _ReconfigurationWithSync_rach_ConfigDedicated._ext = []
    ReconfigurationWithSync._cont = ASN1Dict([
        ('spCellConfigCommon', _ReconfigurationWithSync_spCellConfigCommon),
        ('newUE-Identity', _ReconfigurationWithSync_newUE_Identity),
        ('t304', _ReconfigurationWithSync_t304),
        ('rach-ConfigDedicated', _ReconfigurationWithSync_rach_ConfigDedicated),
        ])
    ReconfigurationWithSync._ext = []
    
    #-----< SCellConfig >-----#
    SCellConfig = SEQ(name='SCellConfig', mode=MODE_TYPE)
    _SCellConfig_sCellIndex = INT(name='sCellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SCellIndex')))
    _SCellConfig_sCellConfigCommon = SEQ(name='sCellConfigCommon', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServingCellConfigCommon')), opt=True)
    _SCellConfig_sCellConfigDedicated = SEQ(name='sCellConfigDedicated', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServingCellConfig')), opt=True)
    SCellConfig._cont = ASN1Dict([
        ('sCellIndex', _SCellConfig_sCellIndex),
        ('sCellConfigCommon', _SCellConfig_sCellConfigCommon),
        ('sCellConfigDedicated', _SCellConfig_sCellConfigDedicated),
        ])
    SCellConfig._ext = []
    
    #-----< CellReselectionPriority >-----#
    CellReselectionPriority = INT(name='CellReselectionPriority', mode=MODE_TYPE)
    CellReselectionPriority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< CodebookConfig >-----#
    CodebookConfig = SEQ(name='CodebookConfig', mode=MODE_TYPE)
    _CodebookConfig_codebookType = CHOICE(name='codebookType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CodebookConfig_codebookType_type1 = SEQ(name='type1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type1_subType = CHOICE(name='subType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel = SEQ(name='typeI-SinglePanel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts = CHOICE(name='nrOfAntennaPorts', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two = SEQ(name='two', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two_twoTX_CodebookSubsetRestriction = BIT_STR(name='twoTX-CodebookSubsetRestriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two_twoTX_CodebookSubsetRestriction._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two._cont = ASN1Dict([
        ('twoTX-CodebookSubsetRestriction', _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two_twoTX_CodebookSubsetRestriction),
        ])
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two._ext = []
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo = SEQ(name='moreThanTwo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2 = CHOICE(name='n1-n2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_one_TypeI_SinglePanel_Restriction = BIT_STR(name='two-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_two_TypeI_SinglePanel_Restriction = BIT_STR(name='two-two-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_two_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_one_TypeI_SinglePanel_Restriction = BIT_STR(name='four-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_three_two_TypeI_SinglePanel_Restriction = BIT_STR(name='three-two-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_three_two_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[96], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_one_TypeI_SinglePanel_Restriction = BIT_STR(name='six-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_two_TypeI_SinglePanel_Restriction = BIT_STR(name='four-two-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_two_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_one_TypeI_SinglePanel_Restriction = BIT_STR(name='eight-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_three_TypeI_SinglePanel_Restriction = BIT_STR(name='four-three-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_three_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[192], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_two_TypeI_SinglePanel_Restriction = BIT_STR(name='six-two-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_two_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[192], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_twelve_one_TypeI_SinglePanel_Restriction = BIT_STR(name='twelve-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_twelve_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[48], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_four_TypeI_SinglePanel_Restriction = BIT_STR(name='four-four-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_four_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_two_TypeI_SinglePanel_Restriction = BIT_STR(name='eight-two-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_two_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_sixteen_one_TypeI_SinglePanel_Restriction = BIT_STR(name='sixteen-one-TypeI-SinglePanel-Restriction', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_sixteen_one_TypeI_SinglePanel_Restriction._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2._cont = ASN1Dict([
        ('two-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_one_TypeI_SinglePanel_Restriction),
        ('two-two-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_two_TypeI_SinglePanel_Restriction),
        ('four-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_one_TypeI_SinglePanel_Restriction),
        ('three-two-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_three_two_TypeI_SinglePanel_Restriction),
        ('six-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_one_TypeI_SinglePanel_Restriction),
        ('four-two-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_two_TypeI_SinglePanel_Restriction),
        ('eight-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_one_TypeI_SinglePanel_Restriction),
        ('four-three-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_three_TypeI_SinglePanel_Restriction),
        ('six-two-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_two_TypeI_SinglePanel_Restriction),
        ('twelve-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_twelve_one_TypeI_SinglePanel_Restriction),
        ('four-four-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_four_TypeI_SinglePanel_Restriction),
        ('eight-two-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_two_TypeI_SinglePanel_Restriction),
        ('sixteen-one-TypeI-SinglePanel-Restriction', ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_sixteen_one_TypeI_SinglePanel_Restriction),
        ])
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2._ext = []
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_typeI_SinglePanel_codebookSubsetRestriction_i2 = BIT_STR(name='typeI-SinglePanel-codebookSubsetRestriction-i2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_typeI_SinglePanel_codebookSubsetRestriction_i2._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo._cont = ASN1Dict([
        ('n1-n2', _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2),
        ('typeI-SinglePanel-codebookSubsetRestriction-i2', _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_typeI_SinglePanel_codebookSubsetRestriction_i2),
        ])
    ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo._ext = []
    _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts._cont = ASN1Dict([
        ('two', ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two),
        ('moreThanTwo', ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo),
        ])
    _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts._ext = []
    _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_typeI_SinglePanel_ri_Restriction = BIT_STR(name='typeI-SinglePanel-ri-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_typeI_SinglePanel_ri_Restriction._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    ____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel._cont = ASN1Dict([
        ('nrOfAntennaPorts', _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts),
        ('typeI-SinglePanel-ri-Restriction', _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_typeI_SinglePanel_ri_Restriction),
        ])
    ____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel._ext = []
    ____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel = SEQ(name='typeI-MultiPanel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2 = CHOICE(name='ng-n1-n2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_one_TypeI_MultiPanel_Restriction = BIT_STR(name='two-two-one-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_one_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_one_TypeI_MultiPanel_Restriction = BIT_STR(name='two-four-one-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_one_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_one_TypeI_MultiPanel_Restriction = BIT_STR(name='four-two-one-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_one_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_two_TypeI_MultiPanel_Restriction = BIT_STR(name='two-two-two-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_two_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[128], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_eight_one_TypeI_MultiPanel_Restriction = BIT_STR(name='two-eight-one-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_eight_one_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_four_one_TypeI_MultiPanel_Restriction = BIT_STR(name='four-four-one-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_four_one_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_two_TypeI_MultiPanel_Restriction = BIT_STR(name='two-four-two-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_two_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_two_TypeI_MultiPanel_Restriction = BIT_STR(name='four-two-two-TypeI-MultiPanel-Restriction', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_two_TypeI_MultiPanel_Restriction._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2._cont = ASN1Dict([
        ('two-two-one-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_one_TypeI_MultiPanel_Restriction),
        ('two-four-one-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_one_TypeI_MultiPanel_Restriction),
        ('four-two-one-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_one_TypeI_MultiPanel_Restriction),
        ('two-two-two-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_two_TypeI_MultiPanel_Restriction),
        ('two-eight-one-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_eight_one_TypeI_MultiPanel_Restriction),
        ('four-four-one-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_four_one_TypeI_MultiPanel_Restriction),
        ('two-four-two-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_two_TypeI_MultiPanel_Restriction),
        ('four-two-two-TypeI-MultiPanel-Restriction', ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_two_TypeI_MultiPanel_Restriction),
        ])
    _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2._ext = []
    _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ri_Restriction = BIT_STR(name='ri-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ri_Restriction._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel._cont = ASN1Dict([
        ('ng-n1-n2', _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2),
        ('ri-Restriction', _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ri_Restriction),
        ])
    ____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel._ext = []
    ___CodebookConfig_codebookType_type1_subType._cont = ASN1Dict([
        ('typeI-SinglePanel', ____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel),
        ('typeI-MultiPanel', ____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel),
        ])
    ___CodebookConfig_codebookType_type1_subType._ext = []
    ___CodebookConfig_codebookType_type1_codebookMode = INT(name='codebookMode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type1_codebookMode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    __CodebookConfig_codebookType_type1._cont = ASN1Dict([
        ('subType', ___CodebookConfig_codebookType_type1_subType),
        ('codebookMode', ___CodebookConfig_codebookType_type1_codebookMode),
        ])
    __CodebookConfig_codebookType_type1._ext = []
    __CodebookConfig_codebookType_type2 = SEQ(name='type2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type2_subType = CHOICE(name='subType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ____CodebookConfig_codebookType_type2_subType_typeII = SEQ(name='typeII', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction = CHOICE(name='n1-n2-codebookSubsetRestriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_one = BIT_STR(name='two-one', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_one._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_two = BIT_STR(name='two-two', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_two._const_sz = ASN1Set(rv=[139], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_one = BIT_STR(name='four-one', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_one._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_three_two = BIT_STR(name='three-two', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_three_two._const_sz = ASN1Set(rv=[59], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_one = BIT_STR(name='six-one', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_one._const_sz = ASN1Set(rv=[49], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_two = BIT_STR(name='four-two', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_two._const_sz = ASN1Set(rv=[75], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_one = BIT_STR(name='eight-one', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_one._const_sz = ASN1Set(rv=[65], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_three = BIT_STR(name='four-three', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_three._const_sz = ASN1Set(rv=[107], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_two = BIT_STR(name='six-two', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_two._const_sz = ASN1Set(rv=[107], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_twelve_one = BIT_STR(name='twelve-one', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_twelve_one._const_sz = ASN1Set(rv=[129], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_four = BIT_STR(name='four-four', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_four._const_sz = ASN1Set(rv=[139], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_two = BIT_STR(name='eight-two', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_two._const_sz = ASN1Set(rv=[139], rr=[], ev=None, er=[])
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_sixteen_one = BIT_STR(name='sixteen-one', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_sixteen_one._const_sz = ASN1Set(rv=[129], rr=[], ev=None, er=[])
    _____CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction._cont = ASN1Dict([
        ('two-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_one),
        ('two-two', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_two),
        ('four-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_one),
        ('three-two', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_three_two),
        ('six-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_one),
        ('four-two', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_two),
        ('eight-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_one),
        ('four-three', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_three),
        ('six-two', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_two),
        ('twelve-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_twelve_one),
        ('four-four', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_four),
        ('eight-two', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_two),
        ('sixteen-one', ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_sixteen_one),
        ])
    _____CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction._ext = []
    _____CodebookConfig_codebookType_type2_subType_typeII_typeII_RI_Restriction = BIT_STR(name='typeII-RI-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type2_subType_typeII_typeII_RI_Restriction._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ____CodebookConfig_codebookType_type2_subType_typeII._cont = ASN1Dict([
        ('n1-n2-codebookSubsetRestriction', _____CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction),
        ('typeII-RI-Restriction', _____CodebookConfig_codebookType_type2_subType_typeII_typeII_RI_Restriction),
        ])
    ____CodebookConfig_codebookType_type2_subType_typeII._ext = []
    ____CodebookConfig_codebookType_type2_subType_typeII_PortSelection = SEQ(name='typeII-PortSelection', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize = ENUM(name='portSelectionSamplingSize', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3)])
    _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize._ext = []
    _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_typeII_PortSelectionRI_Restriction = BIT_STR(name='typeII-PortSelectionRI-Restriction', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_typeII_PortSelectionRI_Restriction._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ____CodebookConfig_codebookType_type2_subType_typeII_PortSelection._cont = ASN1Dict([
        ('portSelectionSamplingSize', _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize),
        ('typeII-PortSelectionRI-Restriction', _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_typeII_PortSelectionRI_Restriction),
        ])
    ____CodebookConfig_codebookType_type2_subType_typeII_PortSelection._ext = []
    ___CodebookConfig_codebookType_type2_subType._cont = ASN1Dict([
        ('typeII', ____CodebookConfig_codebookType_type2_subType_typeII),
        ('typeII-PortSelection', ____CodebookConfig_codebookType_type2_subType_typeII_PortSelection),
        ])
    ___CodebookConfig_codebookType_type2_subType._ext = []
    ___CodebookConfig_codebookType_type2_phaseAlphabetSize = ENUM(name='phaseAlphabetSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type2_phaseAlphabetSize._cont = ASN1Dict([('n4', 0), ('n8', 1)])
    ___CodebookConfig_codebookType_type2_phaseAlphabetSize._ext = []
    ___CodebookConfig_codebookType_type2_subbandAmplitude = BOOL(name='subbandAmplitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type2_numberOfBeams = ENUM(name='numberOfBeams', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CodebookConfig_codebookType_type2_numberOfBeams._cont = ASN1Dict([('two', 0), ('three', 1), ('four', 2)])
    ___CodebookConfig_codebookType_type2_numberOfBeams._ext = []
    __CodebookConfig_codebookType_type2._cont = ASN1Dict([
        ('subType', ___CodebookConfig_codebookType_type2_subType),
        ('phaseAlphabetSize', ___CodebookConfig_codebookType_type2_phaseAlphabetSize),
        ('subbandAmplitude', ___CodebookConfig_codebookType_type2_subbandAmplitude),
        ('numberOfBeams', ___CodebookConfig_codebookType_type2_numberOfBeams),
        ])
    __CodebookConfig_codebookType_type2._ext = []
    _CodebookConfig_codebookType._cont = ASN1Dict([
        ('type1', __CodebookConfig_codebookType_type1),
        ('type2', __CodebookConfig_codebookType_type2),
        ])
    _CodebookConfig_codebookType._ext = []
    CodebookConfig._cont = ASN1Dict([
        ('codebookType', _CodebookConfig_codebookType),
        ])
    CodebookConfig._ext = []
    
    #-----< ConfiguredGrantConfig >-----#
    ConfiguredGrantConfig = SEQ(name='ConfiguredGrantConfig', mode=MODE_TYPE)
    _ConfiguredGrantConfig_frequencyHopping = ENUM(name='frequencyHopping', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_frequencyHopping._cont = ASN1Dict([('mode1', 0), ('mode2', 1)])
    _ConfiguredGrantConfig_frequencyHopping._ext = []
    _ConfiguredGrantConfig_cg_DMRS_Configuration = SEQ(name='cg-DMRS-Configuration', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DMRS-UplinkConfig')))
    _ConfiguredGrantConfig_mcs_Table = ENUM(name='mcs-Table', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_mcs_Table._cont = ASN1Dict([('qam64', 0), ('qam256', 1)])
    _ConfiguredGrantConfig_mcs_Table._ext = []
    _ConfiguredGrantConfig_mcs_TableTransformPrecoder = ENUM(name='mcs-TableTransformPrecoder', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfiguredGrantConfig_mcs_TableTransformPrecoder._cont = ASN1Dict([('qam256', 0)])
    _ConfiguredGrantConfig_mcs_TableTransformPrecoder._ext = []
    _ConfiguredGrantConfig_uci_OnPUSCH = CHOICE(name='uci-OnPUSCH', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')))
    __ConfiguredGrantConfig_uci_OnPUSCH_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_uci_OnPUSCH_setup = CHOICE(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CG-UCI-OnPUSCH')))
    _ConfiguredGrantConfig_uci_OnPUSCH._cont = ASN1Dict([
        ('release', __ConfiguredGrantConfig_uci_OnPUSCH_release),
        ('setup', __ConfiguredGrantConfig_uci_OnPUSCH_setup),
        ])
    _ConfiguredGrantConfig_uci_OnPUSCH._ext = []
    _ConfiguredGrantConfig_resourceAllocation = ENUM(name='resourceAllocation', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_resourceAllocation._cont = ASN1Dict([('resourceAllocationType0', 0), ('resourceAllocationType1', 1), ('dynamicSwitch', 2)])
    _ConfiguredGrantConfig_resourceAllocation._ext = []
    _ConfiguredGrantConfig_rbg_Size = ENUM(name='rbg-Size', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfiguredGrantConfig_rbg_Size._cont = ASN1Dict([('config2', 0)])
    _ConfiguredGrantConfig_rbg_Size._ext = []
    _ConfiguredGrantConfig_powerControlLoopToUse = ENUM(name='powerControlLoopToUse', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_powerControlLoopToUse._cont = ASN1Dict([('n0', 0), ('n1', 1)])
    _ConfiguredGrantConfig_powerControlLoopToUse._ext = []
    _ConfiguredGrantConfig_p0_PUSCH_Alpha = INT(name='p0-PUSCH-Alpha', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUSCH-AlphaSetId')))
    _ConfiguredGrantConfig_transformPrecoder = ENUM(name='transformPrecoder', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfiguredGrantConfig_transformPrecoder._cont = ASN1Dict([('enabled', 0)])
    _ConfiguredGrantConfig_transformPrecoder._ext = []
    _ConfiguredGrantConfig_nrofHARQ_Processes = INT(name='nrofHARQ-Processes', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_nrofHARQ_Processes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _ConfiguredGrantConfig_repK = ENUM(name='repK', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_repK._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3)])
    _ConfiguredGrantConfig_repK._ext = []
    _ConfiguredGrantConfig_repK_RV = ENUM(name='repK-RV', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfiguredGrantConfig_repK_RV._cont = ASN1Dict([('s1-0231', 0), ('s2-0303', 1), ('s3-0000', 2)])
    _ConfiguredGrantConfig_repK_RV._ext = []
    _ConfiguredGrantConfig_periodicity = ENUM(name='periodicity', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfiguredGrantConfig_periodicity._cont = ASN1Dict([('sym2', 0), ('sym7', 1), ('sym1x14', 2), ('sym2x14', 3), ('sym4x14', 4), ('sym5x14', 5), ('sym8x14', 6), ('sym10x14', 7), ('sym16x14', 8), ('sym20x14', 9), ('sym32x14', 10), ('sym40x14', 11), ('sym64x14', 12), ('sym80x14', 13), ('sym128x14', 14), ('sym160x14', 15), ('sym256x14', 16), ('sym320x14', 17), ('sym512x14', 18), ('sym640x14', 19), ('sym1024x14', 20), ('sym1280x14', 21), ('sym2560x14', 22), ('sym5120x14', 23), ('sym6', 24), ('sym1x12', 25), ('sym2x12', 26), ('sym4x12', 27), ('sym5x12', 28), ('sym8x12', 29), ('sym10x12', 30), ('sym16x12', 31), ('sym20x12', 32), ('sym32x12', 33), ('sym40x12', 34), ('sym64x12', 35), ('sym80x12', 36), ('sym128x12', 37), ('sym160x12', 38), ('sym256x12', 39), ('sym320x12', 40), ('sym512x12', 41), ('sym640x12', 42), ('sym1280x12', 43), ('sym2560x12', 44)])
    _ConfiguredGrantConfig_periodicity._ext = []
    _ConfiguredGrantConfig_configuredGrantTimer = ENUM(name='configuredGrantTimer', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfiguredGrantConfig_configuredGrantTimer._cont = ASN1Dict([('sym2', 0), ('sym7', 1), ('sym1x14', 2), ('sym2x14', 3), ('sym4x14', 4), ('sym5x14', 5), ('sym8x14', 6), ('sym10x14', 7), ('sym16x14', 8), ('sym20x14', 9), ('sym32x14', 10), ('sym40x14', 11), ('sym64x14', 12), ('sym80x14', 13), ('sym128x14', 14), ('sym160x14', 15), ('sym256x14', 16), ('sym512x14', 17), ('sym640x14', 18), ('sym6', 19), ('sym1x12', 20), ('sym2x12', 21), ('sym4x12', 22), ('sym5x12', 23), ('sym8x12', 24), ('sym10x12', 25), ('sym16x12', 26), ('sym20x12', 27), ('sym32x12', 28), ('sym40x12', 29), ('sym64x12', 30), ('sym80x12', 31), ('sym128x12', 32), ('sym256x12', 33), ('sym320x12', 34), ('sym512x12', 35), ('sym640x12', 36)])
    _ConfiguredGrantConfig_configuredGrantTimer._ext = []
    _ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant = SEQ(name='rrc-ConfiguredUplinkGrant', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainOffset = INT(name='timeDomainOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5119)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainAllocation = INT(name='timeDomainAllocation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainAllocation._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyDomainAllocation = BIT_STR(name='frequencyDomainAllocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyDomainAllocation._const_sz = ASN1Set(rv=[18], rr=[], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_antennaPort = INT(name='antennaPort', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_antennaPort._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_dmrs_SeqInitialization = INT(name='dmrs-SeqInitialization', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_dmrs_SeqInitialization._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_precodingAndNumberOfLayers = INT(name='precodingAndNumberOfLayers', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_precodingAndNumberOfLayers._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_srs_ResourceIndicator = INT(name='srs-ResourceIndicator', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_srs_ResourceIndicator._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_mcsAndTBS = INT(name='mcsAndTBS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_mcsAndTBS._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyHoppingOffset = INT(name='frequencyHoppingOffset', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyHoppingOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=274)], ev=None, er=[])
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_pathlossReferenceIndex = INT(name='pathlossReferenceIndex', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_pathlossReferenceIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant._cont = ASN1Dict([
        ('timeDomainOffset', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainOffset),
        ('timeDomainAllocation', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainAllocation),
        ('frequencyDomainAllocation', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyDomainAllocation),
        ('antennaPort', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_antennaPort),
        ('dmrs-SeqInitialization', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_dmrs_SeqInitialization),
        ('precodingAndNumberOfLayers', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_precodingAndNumberOfLayers),
        ('srs-ResourceIndicator', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_srs_ResourceIndicator),
        ('mcsAndTBS', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_mcsAndTBS),
        ('frequencyHoppingOffset', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyHoppingOffset),
        ('pathlossReferenceIndex', __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_pathlossReferenceIndex),
        ])
    _ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant._ext = []
    ConfiguredGrantConfig._cont = ASN1Dict([
        ('frequencyHopping', _ConfiguredGrantConfig_frequencyHopping),
        ('cg-DMRS-Configuration', _ConfiguredGrantConfig_cg_DMRS_Configuration),
        ('mcs-Table', _ConfiguredGrantConfig_mcs_Table),
        ('mcs-TableTransformPrecoder', _ConfiguredGrantConfig_mcs_TableTransformPrecoder),
        ('uci-OnPUSCH', _ConfiguredGrantConfig_uci_OnPUSCH),
        ('resourceAllocation', _ConfiguredGrantConfig_resourceAllocation),
        ('rbg-Size', _ConfiguredGrantConfig_rbg_Size),
        ('powerControlLoopToUse', _ConfiguredGrantConfig_powerControlLoopToUse),
        ('p0-PUSCH-Alpha', _ConfiguredGrantConfig_p0_PUSCH_Alpha),
        ('transformPrecoder', _ConfiguredGrantConfig_transformPrecoder),
        ('nrofHARQ-Processes', _ConfiguredGrantConfig_nrofHARQ_Processes),
        ('repK', _ConfiguredGrantConfig_repK),
        ('repK-RV', _ConfiguredGrantConfig_repK_RV),
        ('periodicity', _ConfiguredGrantConfig_periodicity),
        ('configuredGrantTimer', _ConfiguredGrantConfig_configuredGrantTimer),
        ('rrc-ConfiguredUplinkGrant', _ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant),
        ])
    ConfiguredGrantConfig._ext = []
    
    #-----< CG-UCI-OnPUSCH >-----#
    CG_UCI_OnPUSCH = CHOICE(name='CG-UCI-OnPUSCH', mode=MODE_TYPE)
    _CG_UCI_OnPUSCH_dynamic = SEQ_OF(name='dynamic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_UCI_OnPUSCH_dynamic__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BetaOffsets')))
    _CG_UCI_OnPUSCH_dynamic._cont = __CG_UCI_OnPUSCH_dynamic__item_
    _CG_UCI_OnPUSCH_dynamic._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _CG_UCI_OnPUSCH_semiStatic = SEQ(name='semiStatic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BetaOffsets')))
    CG_UCI_OnPUSCH._cont = ASN1Dict([
        ('dynamic', _CG_UCI_OnPUSCH_dynamic),
        ('semiStatic', _CG_UCI_OnPUSCH_semiStatic),
        ])
    CG_UCI_OnPUSCH._ext = []
    
    #-----< ControlResourceSet >-----#
    ControlResourceSet = SEQ(name='ControlResourceSet', mode=MODE_TYPE)
    _ControlResourceSet_controlResourceSetId = INT(name='controlResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')))
    _ControlResourceSet_frequencyDomainResources = BIT_STR(name='frequencyDomainResources', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ControlResourceSet_frequencyDomainResources._const_sz = ASN1Set(rv=[45], rr=[], ev=None, er=[])
    _ControlResourceSet_duration = INT(name='duration', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ControlResourceSet_duration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _ControlResourceSet_cce_REG_MappingType = CHOICE(name='cce-REG-MappingType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ControlResourceSet_cce_REG_MappingType_interleaved = SEQ(name='interleaved', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ControlResourceSet_cce_REG_MappingType_interleaved_reg_BundleSize = ENUM(name='reg-BundleSize', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ControlResourceSet_cce_REG_MappingType_interleaved_reg_BundleSize._cont = ASN1Dict([('n2', 0), ('n3', 1), ('n6', 2)])
    ___ControlResourceSet_cce_REG_MappingType_interleaved_reg_BundleSize._ext = []
    ___ControlResourceSet_cce_REG_MappingType_interleaved_interleaverSize = ENUM(name='interleaverSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ControlResourceSet_cce_REG_MappingType_interleaved_interleaverSize._cont = ASN1Dict([('n2', 0), ('n3', 1), ('n6', 2)])
    ___ControlResourceSet_cce_REG_MappingType_interleaved_interleaverSize._ext = []
    ___ControlResourceSet_cce_REG_MappingType_interleaved_shiftIndex = INT(name='shiftIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ControlResourceSet_cce_REG_MappingType_interleaved_shiftIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=274)], ev=None, er=[])
    __ControlResourceSet_cce_REG_MappingType_interleaved._cont = ASN1Dict([
        ('reg-BundleSize', ___ControlResourceSet_cce_REG_MappingType_interleaved_reg_BundleSize),
        ('interleaverSize', ___ControlResourceSet_cce_REG_MappingType_interleaved_interleaverSize),
        ('shiftIndex', ___ControlResourceSet_cce_REG_MappingType_interleaved_shiftIndex),
        ])
    __ControlResourceSet_cce_REG_MappingType_interleaved._ext = []
    __ControlResourceSet_cce_REG_MappingType_nonInterleaved = NULL(name='nonInterleaved', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ControlResourceSet_cce_REG_MappingType._cont = ASN1Dict([
        ('interleaved', __ControlResourceSet_cce_REG_MappingType_interleaved),
        ('nonInterleaved', __ControlResourceSet_cce_REG_MappingType_nonInterleaved),
        ])
    _ControlResourceSet_cce_REG_MappingType._ext = []
    _ControlResourceSet_precoderGranularity = ENUM(name='precoderGranularity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ControlResourceSet_precoderGranularity._cont = ASN1Dict([('sameAsREG-bundle', 0), ('allContiguousRBs', 1)])
    _ControlResourceSet_precoderGranularity._ext = []
    _ControlResourceSet_tci_StatesPDCCH = SEQ_OF(name='tci-StatesPDCCH', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ControlResourceSet_tci_StatesPDCCH__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-StateId')))
    _ControlResourceSet_tci_StatesPDCCH._cont = __ControlResourceSet_tci_StatesPDCCH__item_
    _ControlResourceSet_tci_StatesPDCCH._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _ControlResourceSet_tci_PresentInDCI = ENUM(name='tci-PresentInDCI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ControlResourceSet_tci_PresentInDCI._cont = ASN1Dict([('enabled', 0)])
    _ControlResourceSet_tci_PresentInDCI._ext = []
    _ControlResourceSet_pdcch_DMRS_ScramblingID = BIT_STR(name='pdcch-DMRS-ScramblingID', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ControlResourceSet_pdcch_DMRS_ScramblingID._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    ControlResourceSet._cont = ASN1Dict([
        ('controlResourceSetId', _ControlResourceSet_controlResourceSetId),
        ('frequencyDomainResources', _ControlResourceSet_frequencyDomainResources),
        ('duration', _ControlResourceSet_duration),
        ('cce-REG-MappingType', _ControlResourceSet_cce_REG_MappingType),
        ('precoderGranularity', _ControlResourceSet_precoderGranularity),
        ('tci-StatesPDCCH', _ControlResourceSet_tci_StatesPDCCH),
        ('tci-PresentInDCI', _ControlResourceSet_tci_PresentInDCI),
        ('pdcch-DMRS-ScramblingID', _ControlResourceSet_pdcch_DMRS_ScramblingID),
        ])
    ControlResourceSet._ext = []
    
    #-----< ControlResourceSetId >-----#
    ControlResourceSetId = INT(name='ControlResourceSetId', mode=MODE_TYPE)
    ControlResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11)], ev=None, er=[])
    
    #-----< CrossCarrierSchedulingConfig >-----#
    CrossCarrierSchedulingConfig = SEQ(name='CrossCarrierSchedulingConfig', mode=MODE_TYPE)
    _CrossCarrierSchedulingConfig_schedulingCellInfo = CHOICE(name='schedulingCellInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CrossCarrierSchedulingConfig_schedulingCellInfo_own = SEQ(name='own', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CrossCarrierSchedulingConfig_schedulingCellInfo_own_cif_Presence = BOOL(name='cif-Presence', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CrossCarrierSchedulingConfig_schedulingCellInfo_own._cont = ASN1Dict([
        ('cif-Presence', ___CrossCarrierSchedulingConfig_schedulingCellInfo_own_cif_Presence),
        ])
    __CrossCarrierSchedulingConfig_schedulingCellInfo_own._ext = []
    __CrossCarrierSchedulingConfig_schedulingCellInfo_other = SEQ(name='other', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_schedulingCellId = INT(name='schedulingCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_cif_InSchedulingCell = INT(name='cif-InSchedulingCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_cif_InSchedulingCell._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    __CrossCarrierSchedulingConfig_schedulingCellInfo_other._cont = ASN1Dict([
        ('schedulingCellId', ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_schedulingCellId),
        ('cif-InSchedulingCell', ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_cif_InSchedulingCell),
        ])
    __CrossCarrierSchedulingConfig_schedulingCellInfo_other._ext = []
    _CrossCarrierSchedulingConfig_schedulingCellInfo._cont = ASN1Dict([
        ('own', __CrossCarrierSchedulingConfig_schedulingCellInfo_own),
        ('other', __CrossCarrierSchedulingConfig_schedulingCellInfo_other),
        ])
    _CrossCarrierSchedulingConfig_schedulingCellInfo._ext = []
    CrossCarrierSchedulingConfig._cont = ASN1Dict([
        ('schedulingCellInfo', _CrossCarrierSchedulingConfig_schedulingCellInfo),
        ])
    CrossCarrierSchedulingConfig._ext = []
    
    #-----< CSI-AperiodicTriggerStateList >-----#
    CSI_AperiodicTriggerStateList = SEQ_OF(name='CSI-AperiodicTriggerStateList', mode=MODE_TYPE)
    _CSI_AperiodicTriggerStateList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-AperiodicTriggerState')))
    CSI_AperiodicTriggerStateList._cont = _CSI_AperiodicTriggerStateList__item_
    CSI_AperiodicTriggerStateList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    
    #-----< CSI-AperiodicTriggerState >-----#
    CSI_AperiodicTriggerState = SEQ(name='CSI-AperiodicTriggerState', mode=MODE_TYPE)
    _CSI_AperiodicTriggerState_associatedReportConfigInfoList = SEQ_OF(name='associatedReportConfigInfoList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_AperiodicTriggerState_associatedReportConfigInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-AssociatedReportConfigInfo')))
    _CSI_AperiodicTriggerState_associatedReportConfigInfoList._cont = __CSI_AperiodicTriggerState_associatedReportConfigInfoList__item_
    _CSI_AperiodicTriggerState_associatedReportConfigInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    CSI_AperiodicTriggerState._cont = ASN1Dict([
        ('associatedReportConfigInfoList', _CSI_AperiodicTriggerState_associatedReportConfigInfoList),
        ])
    CSI_AperiodicTriggerState._ext = []
    
    #-----< CSI-AssociatedReportConfigInfo >-----#
    CSI_AssociatedReportConfigInfo = SEQ(name='CSI-AssociatedReportConfigInfo', mode=MODE_TYPE)
    _CSI_AssociatedReportConfigInfo_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportConfigId')))
    _CSI_AssociatedReportConfigInfo_resourcesForChannel = CHOICE(name='resourcesForChannel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS = SEQ(name='nzp-CSI-RS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_resourceSet = INT(name='resourceSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_resourceSet._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info = SEQ_OF(name='qcl-info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-StateId')))
    ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info._cont = ____CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info__item_
    ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS._cont = ASN1Dict([
        ('resourceSet', ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_resourceSet),
        ('qcl-info', ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info),
        ])
    __CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS._ext = []
    __CSI_AssociatedReportConfigInfo_resourcesForChannel_csi_SSB_ResourceSet = INT(name='csi-SSB-ResourceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_AssociatedReportConfigInfo_resourcesForChannel_csi_SSB_ResourceSet._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1)], ev=None, er=[])
    _CSI_AssociatedReportConfigInfo_resourcesForChannel._cont = ASN1Dict([
        ('nzp-CSI-RS', __CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS),
        ('csi-SSB-ResourceSet', __CSI_AssociatedReportConfigInfo_resourcesForChannel_csi_SSB_ResourceSet),
        ])
    _CSI_AssociatedReportConfigInfo_resourcesForChannel._ext = []
    _CSI_AssociatedReportConfigInfo_csi_IM_ResourcesforInteference = INT(name='csi-IM-ResourcesforInteference', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_AssociatedReportConfigInfo_csi_IM_ResourcesforInteference._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _CSI_AssociatedReportConfigInfo_nzp_CSI_RS_ResourcesforInterference = INT(name='nzp-CSI-RS-ResourcesforInterference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_AssociatedReportConfigInfo_nzp_CSI_RS_ResourcesforInterference._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    CSI_AssociatedReportConfigInfo._cont = ASN1Dict([
        ('reportConfigId', _CSI_AssociatedReportConfigInfo_reportConfigId),
        ('resourcesForChannel', _CSI_AssociatedReportConfigInfo_resourcesForChannel),
        ('csi-IM-ResourcesforInteference', _CSI_AssociatedReportConfigInfo_csi_IM_ResourcesforInteference),
        ('nzp-CSI-RS-ResourcesforInterference', _CSI_AssociatedReportConfigInfo_nzp_CSI_RS_ResourcesforInterference),
        ])
    CSI_AssociatedReportConfigInfo._ext = []
    
    #-----< CSI-FrequencyOccupation >-----#
    CSI_FrequencyOccupation = SEQ(name='CSI-FrequencyOccupation', mode=MODE_TYPE)
    _CSI_FrequencyOccupation_startingRB = INT(name='startingRB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_FrequencyOccupation_startingRB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=274)], ev=None, er=[])
    _CSI_FrequencyOccupation_nrofRBs = INT(name='nrofRBs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_FrequencyOccupation_nrofRBs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=24, ub=275)], ev=None, er=[])
    CSI_FrequencyOccupation._cont = ASN1Dict([
        ('startingRB', _CSI_FrequencyOccupation_startingRB),
        ('nrofRBs', _CSI_FrequencyOccupation_nrofRBs),
        ])
    CSI_FrequencyOccupation._ext = []
    
    #-----< CSI-IM-Resource >-----#
    CSI_IM_Resource = SEQ(name='CSI-IM-Resource', mode=MODE_TYPE)
    _CSI_IM_Resource_csi_IM_ResourceId = INT(name='csi-IM-ResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceId')))
    _CSI_IM_Resource_csi_IM_ResourceElementPattern = CHOICE(name='csi-IM-ResourceElementPattern', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0 = SEQ(name='pattern0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_subcarrierLocation_p0 = ENUM(name='subcarrierLocation-p0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_subcarrierLocation_p0._cont = ASN1Dict([('s0', 0), ('s2', 1), ('s4', 2), ('s6', 3), ('s8', 4), ('s10', 5)])
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_subcarrierLocation_p0._ext = []
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_symbolLocation_p0 = INT(name='symbolLocation-p0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_symbolLocation_p0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=12)], ev=None, er=[])
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0._cont = ASN1Dict([
        ('subcarrierLocation-p0', ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_subcarrierLocation_p0),
        ('symbolLocation-p0', ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_symbolLocation_p0),
        ])
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0._ext = []
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1 = SEQ(name='pattern1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1 = ENUM(name='subcarrierLocation-p1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1._cont = ASN1Dict([('s0', 0), ('s4', 1), ('s8', 2)])
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1._ext = []
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_symbolLocation_p1 = INT(name='symbolLocation-p1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_symbolLocation_p1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1._cont = ASN1Dict([
        ('subcarrierLocation-p1', ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1),
        ('symbolLocation-p1', ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_symbolLocation_p1),
        ])
    __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1._ext = []
    _CSI_IM_Resource_csi_IM_ResourceElementPattern._cont = ASN1Dict([
        ('pattern0', __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0),
        ('pattern1', __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1),
        ])
    _CSI_IM_Resource_csi_IM_ResourceElementPattern._ext = []
    _CSI_IM_Resource_freqBand = SEQ(name='freqBand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-FrequencyOccupation')), opt=True)
    _CSI_IM_Resource_periodicityAndOffset = CHOICE(name='periodicityAndOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourcePeriodicityAndOffset')), opt=True)
    CSI_IM_Resource._cont = ASN1Dict([
        ('csi-IM-ResourceId', _CSI_IM_Resource_csi_IM_ResourceId),
        ('csi-IM-ResourceElementPattern', _CSI_IM_Resource_csi_IM_ResourceElementPattern),
        ('freqBand', _CSI_IM_Resource_freqBand),
        ('periodicityAndOffset', _CSI_IM_Resource_periodicityAndOffset),
        ])
    CSI_IM_Resource._ext = []
    
    #-----< CSI-IM-ResourceId >-----#
    CSI_IM_ResourceId = INT(name='CSI-IM-ResourceId', mode=MODE_TYPE)
    CSI_IM_ResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< CSI-IM-ResourceSet >-----#
    CSI_IM_ResourceSet = SEQ(name='CSI-IM-ResourceSet', mode=MODE_TYPE)
    _CSI_IM_ResourceSet_csi_IM_ResourceSetId = INT(name='csi-IM-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceSetId')))
    _CSI_IM_ResourceSet_csi_IM_Resources = SEQ_OF(name='csi-IM-Resources', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_IM_ResourceSet_csi_IM_Resources__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceId')))
    _CSI_IM_ResourceSet_csi_IM_Resources._cont = __CSI_IM_ResourceSet_csi_IM_Resources__item_
    _CSI_IM_ResourceSet_csi_IM_Resources._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    CSI_IM_ResourceSet._cont = ASN1Dict([
        ('csi-IM-ResourceSetId', _CSI_IM_ResourceSet_csi_IM_ResourceSetId),
        ('csi-IM-Resources', _CSI_IM_ResourceSet_csi_IM_Resources),
        ])
    CSI_IM_ResourceSet._ext = []
    
    #-----< CSI-IM-ResourceSetId >-----#
    CSI_IM_ResourceSetId = INT(name='CSI-IM-ResourceSetId', mode=MODE_TYPE)
    CSI_IM_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< CSI-MeasConfig >-----#
    CSI_MeasConfig = SEQ(name='CSI-MeasConfig', mode=MODE_TYPE)
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList = SEQ_OF(name='nzp-CSI-RS-ResourceToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-Resource')))
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList._cont = __CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList__item_
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=192)], ev=None, er=[])
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList = SEQ_OF(name='nzp-CSI-RS-ResourceToReleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList._cont = __CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList__item_
    _CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=192)], ev=None, er=[])
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList = SEQ_OF(name='nzp-CSI-RS-ResourceSetToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceSet')))
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList._cont = __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList__item_
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList = SEQ_OF(name='nzp-CSI-RS-ResourceSetToReleaseList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceSetId')))
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList._cont = __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList__item_
    _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_csi_IM_ResourceToAddModList = SEQ_OF(name='csi-IM-ResourceToAddModList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_IM_ResourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-Resource')))
    _CSI_MeasConfig_csi_IM_ResourceToAddModList._cont = __CSI_MeasConfig_csi_IM_ResourceToAddModList__item_
    _CSI_MeasConfig_csi_IM_ResourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CSI_MeasConfig_csi_IM_ResourceToReleaseList = SEQ_OF(name='csi-IM-ResourceToReleaseList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_IM_ResourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceId')))
    _CSI_MeasConfig_csi_IM_ResourceToReleaseList._cont = __CSI_MeasConfig_csi_IM_ResourceToReleaseList__item_
    _CSI_MeasConfig_csi_IM_ResourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _CSI_MeasConfig_csi_IM_ResourceSetToAddModList = SEQ_OF(name='csi-IM-ResourceSetToAddModList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_IM_ResourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceSet')))
    _CSI_MeasConfig_csi_IM_ResourceSetToAddModList._cont = __CSI_MeasConfig_csi_IM_ResourceSetToAddModList__item_
    _CSI_MeasConfig_csi_IM_ResourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_csi_IM_ResourceSetToReleaseList = SEQ_OF(name='csi-IM-ResourceSetToReleaseList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_IM_ResourceSetToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceSetId')))
    _CSI_MeasConfig_csi_IM_ResourceSetToReleaseList._cont = __CSI_MeasConfig_csi_IM_ResourceSetToReleaseList__item_
    _CSI_MeasConfig_csi_IM_ResourceSetToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddModList = SEQ_OF(name='csi-SSB-ResourceSetToAddModList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_SSB_ResourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SSB-ResourceSet')))
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddModList._cont = __CSI_MeasConfig_csi_SSB_ResourceSetToAddModList__item_
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList = SEQ_OF(name='csi-SSB-ResourceSetToAddReleaseList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SSB-ResourceSetId')))
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList._cont = __CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList__item_
    _CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CSI_MeasConfig_csi_ResourceConfigToAddModList = SEQ_OF(name='csi-ResourceConfigToAddModList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_ResourceConfigToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfig')))
    _CSI_MeasConfig_csi_ResourceConfigToAddModList._cont = __CSI_MeasConfig_csi_ResourceConfigToAddModList__item_
    _CSI_MeasConfig_csi_ResourceConfigToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=112)], ev=None, er=[])
    _CSI_MeasConfig_csi_ResourceConfigToReleaseList = SEQ_OF(name='csi-ResourceConfigToReleaseList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_ResourceConfigToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfigId')))
    _CSI_MeasConfig_csi_ResourceConfigToReleaseList._cont = __CSI_MeasConfig_csi_ResourceConfigToReleaseList__item_
    _CSI_MeasConfig_csi_ResourceConfigToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=112)], ev=None, er=[])
    _CSI_MeasConfig_csi_ReportConfigToAddModList = SEQ_OF(name='csi-ReportConfigToAddModList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_ReportConfigToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportConfig')))
    _CSI_MeasConfig_csi_ReportConfigToAddModList._cont = __CSI_MeasConfig_csi_ReportConfigToAddModList__item_
    _CSI_MeasConfig_csi_ReportConfigToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=48)], ev=None, er=[])
    _CSI_MeasConfig_csi_ReportConfigToReleaseList = SEQ_OF(name='csi-ReportConfigToReleaseList', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_MeasConfig_csi_ReportConfigToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportConfigId')))
    _CSI_MeasConfig_csi_ReportConfigToReleaseList._cont = __CSI_MeasConfig_csi_ReportConfigToReleaseList__item_
    _CSI_MeasConfig_csi_ReportConfigToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=48)], ev=None, er=[])
    _CSI_MeasConfig_reportTriggerSize = INT(name='reportTriggerSize', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_MeasConfig_reportTriggerSize._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=6)], ev=None, er=[])
    _CSI_MeasConfig_aperiodicTriggerStateList = CHOICE(name='aperiodicTriggerStateList', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __CSI_MeasConfig_aperiodicTriggerStateList_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_MeasConfig_aperiodicTriggerStateList_setup = SEQ_OF(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-AperiodicTriggerStateList')))
    _CSI_MeasConfig_aperiodicTriggerStateList._cont = ASN1Dict([
        ('release', __CSI_MeasConfig_aperiodicTriggerStateList_release),
        ('setup', __CSI_MeasConfig_aperiodicTriggerStateList_setup),
        ])
    _CSI_MeasConfig_aperiodicTriggerStateList._ext = []
    _CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList = CHOICE(name='semiPersistentOnPUSCH-TriggerStateList', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_setup = SEQ_OF(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SemiPersistentOnPUSCH-TriggerStateList')))
    _CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList._cont = ASN1Dict([
        ('release', __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_release),
        ('setup', __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_setup),
        ])
    _CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList._ext = []
    CSI_MeasConfig._cont = ASN1Dict([
        ('nzp-CSI-RS-ResourceToAddModList', _CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList),
        ('nzp-CSI-RS-ResourceToReleaseList', _CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList),
        ('nzp-CSI-RS-ResourceSetToAddModList', _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList),
        ('nzp-CSI-RS-ResourceSetToReleaseList', _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList),
        ('csi-IM-ResourceToAddModList', _CSI_MeasConfig_csi_IM_ResourceToAddModList),
        ('csi-IM-ResourceToReleaseList', _CSI_MeasConfig_csi_IM_ResourceToReleaseList),
        ('csi-IM-ResourceSetToAddModList', _CSI_MeasConfig_csi_IM_ResourceSetToAddModList),
        ('csi-IM-ResourceSetToReleaseList', _CSI_MeasConfig_csi_IM_ResourceSetToReleaseList),
        ('csi-SSB-ResourceSetToAddModList', _CSI_MeasConfig_csi_SSB_ResourceSetToAddModList),
        ('csi-SSB-ResourceSetToAddReleaseList', _CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList),
        ('csi-ResourceConfigToAddModList', _CSI_MeasConfig_csi_ResourceConfigToAddModList),
        ('csi-ResourceConfigToReleaseList', _CSI_MeasConfig_csi_ResourceConfigToReleaseList),
        ('csi-ReportConfigToAddModList', _CSI_MeasConfig_csi_ReportConfigToAddModList),
        ('csi-ReportConfigToReleaseList', _CSI_MeasConfig_csi_ReportConfigToReleaseList),
        ('reportTriggerSize', _CSI_MeasConfig_reportTriggerSize),
        ('aperiodicTriggerStateList', _CSI_MeasConfig_aperiodicTriggerStateList),
        ('semiPersistentOnPUSCH-TriggerStateList', _CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList),
        ])
    CSI_MeasConfig._ext = []
    
    #-----< maxNrofNZP-CSI-RS-ResourceSets >-----#
    maxNrofNZP_CSI_RS_ResourceSets = INT(name='maxNrofNZP-CSI-RS-ResourceSets', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_ResourceSets._val = 64
    
    #-----< maxNrofNZP-CSI-RS-ResourceSets-1 >-----#
    maxNrofNZP_CSI_RS_ResourceSets_1 = INT(name='maxNrofNZP-CSI-RS-ResourceSets-1', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_ResourceSets_1._val = 63
    
    #-----< maxNrofCSI-SSB-ResourceSets >-----#
    maxNrofCSI_SSB_ResourceSets = INT(name='maxNrofCSI-SSB-ResourceSets', mode=MODE_VALUE)
    maxNrofCSI_SSB_ResourceSets._val = 64
    
    #-----< maxNrofCSI-SSB-ResourceSets-1 >-----#
    maxNrofCSI_SSB_ResourceSets_1 = INT(name='maxNrofCSI-SSB-ResourceSets-1', mode=MODE_VALUE)
    maxNrofCSI_SSB_ResourceSets_1._val = 63
    
    #-----< maxNrofCSI-IM-ResourceSets >-----#
    maxNrofCSI_IM_ResourceSets = INT(name='maxNrofCSI-IM-ResourceSets', mode=MODE_VALUE)
    maxNrofCSI_IM_ResourceSets._val = 64
    
    #-----< maxNrofCSI-IM-ResourceSets-1 >-----#
    maxNrofCSI_IM_ResourceSets_1 = INT(name='maxNrofCSI-IM-ResourceSets-1', mode=MODE_VALUE)
    maxNrofCSI_IM_ResourceSets_1._val = 63
    
    #-----< CSI-ReportConfig >-----#
    CSI_ReportConfig = SEQ(name='CSI-ReportConfig', mode=MODE_TYPE)
    _CSI_ReportConfig_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportConfigId')))
    _CSI_ReportConfig_carrier = INT(name='carrier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')), opt=True)
    _CSI_ReportConfig_resourcesForChannelMeasurement = INT(name='resourcesForChannelMeasurement', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfigId')))
    _CSI_ReportConfig_csi_IM_ResourcesForInterference = INT(name='csi-IM-ResourcesForInterference', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfigId')), opt=True)
    _CSI_ReportConfig_nzp_CSI_RS_ResourcesForInterference = INT(name='nzp-CSI-RS-ResourcesForInterference', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfigId')), opt=True)
    _CSI_ReportConfig_reportConfigType = CHOICE(name='reportConfigType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_ReportConfig_reportConfigType_periodic = SEQ(name='periodic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportConfigType_periodic_reportSlotConfig = CHOICE(name='reportSlotConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportPeriodicityAndOffset')))
    ___CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList = SEQ_OF(name='pucch-CSI-ResourceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-CSI-Resource')))
    ___CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList._cont = ____CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList__item_
    ___CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    __CSI_ReportConfig_reportConfigType_periodic._cont = ASN1Dict([
        ('reportSlotConfig', ___CSI_ReportConfig_reportConfigType_periodic_reportSlotConfig),
        ('pucch-CSI-ResourceList', ___CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList),
        ])
    __CSI_ReportConfig_reportConfigType_periodic._ext = []
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH = SEQ(name='semiPersistentOnPUCCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_reportSlotConfig = CHOICE(name='reportSlotConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportPeriodicityAndOffset')))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList = SEQ_OF(name='pucch-CSI-ResourceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-CSI-Resource')))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList._cont = ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList__item_
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH._cont = ASN1Dict([
        ('reportSlotConfig', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_reportSlotConfig),
        ('pucch-CSI-ResourceList', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList),
        ])
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH._ext = []
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH = SEQ(name='semiPersistentOnPUSCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig = ENUM(name='reportSlotConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig._cont = ASN1Dict([('sl5', 0), ('sl10', 1), ('sl20', 2), ('sl40', 3), ('sl80', 4), ('sl160', 5), ('sl320', 6)])
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig._ext = []
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList = SEQ_OF(name='reportSlotOffsetList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList__item_ = INT(name='_item_', mode=MODE_TYPE)
    ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList._cont = ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList__item_
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_csi_RNTI = INT(name='csi-RNTI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_p0alpha = INT(name='p0alpha', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUSCH-AlphaSetId')))
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH._cont = ASN1Dict([
        ('reportSlotConfig', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig),
        ('reportSlotOffsetList', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList),
        ('csi-RNTI', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_csi_RNTI),
        ('p0alpha', ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_p0alpha),
        ])
    __CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH._ext = []
    __CSI_ReportConfig_reportConfigType_aperiodic = SEQ(name='aperiodic', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList = SEQ_OF(name='reportSlotOffsetList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList__item_ = INT(name='_item_', mode=MODE_TYPE)
    ____CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    ___CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList._cont = ____CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList__item_
    ___CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __CSI_ReportConfig_reportConfigType_aperiodic._cont = ASN1Dict([
        ('reportSlotOffsetList', ___CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList),
        ])
    __CSI_ReportConfig_reportConfigType_aperiodic._ext = []
    _CSI_ReportConfig_reportConfigType._cont = ASN1Dict([
        ('periodic', __CSI_ReportConfig_reportConfigType_periodic),
        ('semiPersistentOnPUCCH', __CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH),
        ('semiPersistentOnPUSCH', __CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH),
        ('aperiodic', __CSI_ReportConfig_reportConfigType_aperiodic),
        ])
    _CSI_ReportConfig_reportConfigType._ext = []
    _CSI_ReportConfig_reportQuantity = CHOICE(name='reportQuantity', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_ReportConfig_reportQuantity_none = NULL(name='none', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_cri_RI_PMI_CQI = NULL(name='cri-RI-PMI-CQI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_cri_RI_i1 = NULL(name='cri-RI-i1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI = SEQ(name='cri-RI-i1-CQI', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI_pdsch_BundleSizeForCSI = ENUM(name='pdsch-BundleSizeForCSI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI_pdsch_BundleSizeForCSI._cont = ASN1Dict([('n2', 0), ('n4', 1)])
    ___CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI_pdsch_BundleSizeForCSI._ext = []
    __CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI._cont = ASN1Dict([
        ('pdsch-BundleSizeForCSI', ___CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI_pdsch_BundleSizeForCSI),
        ])
    __CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI._ext = []
    __CSI_ReportConfig_reportQuantity_cri_RI_CQI = NULL(name='cri-RI-CQI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_cri_RSRP = NULL(name='cri-RSRP', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_ssb_Index_RSRP = NULL(name='ssb-Index-RSRP', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportQuantity_cri_RI_LI_PMI_CQI = NULL(name='cri-RI-LI-PMI-CQI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportConfig_reportQuantity._cont = ASN1Dict([
        ('none', __CSI_ReportConfig_reportQuantity_none),
        ('cri-RI-PMI-CQI', __CSI_ReportConfig_reportQuantity_cri_RI_PMI_CQI),
        ('cri-RI-i1', __CSI_ReportConfig_reportQuantity_cri_RI_i1),
        ('cri-RI-i1-CQI', __CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI),
        ('cri-RI-CQI', __CSI_ReportConfig_reportQuantity_cri_RI_CQI),
        ('cri-RSRP', __CSI_ReportConfig_reportQuantity_cri_RSRP),
        ('ssb-Index-RSRP', __CSI_ReportConfig_reportQuantity_ssb_Index_RSRP),
        ('cri-RI-LI-PMI-CQI', __CSI_ReportConfig_reportQuantity_cri_RI_LI_PMI_CQI),
        ])
    _CSI_ReportConfig_reportQuantity._ext = []
    _CSI_ReportConfig_reportFreqConfiguration = SEQ(name='reportFreqConfiguration', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator = ENUM(name='cqi-FormatIndicator', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator._cont = ASN1Dict([('widebandCQI', 0), ('subbandCQI', 1)])
    __CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator._ext = []
    __CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator = ENUM(name='pmi-FormatIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator._cont = ASN1Dict([('widebandPMI', 0), ('subbandPMI', 1)])
    __CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator._ext = []
    __CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand = CHOICE(name='csi-ReportingBand', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands3 = BIT_STR(name='subbands3', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands3._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands4 = BIT_STR(name='subbands4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands4._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands5 = BIT_STR(name='subbands5', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands5._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands6 = BIT_STR(name='subbands6', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands6._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands7 = BIT_STR(name='subbands7', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands7._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands8 = BIT_STR(name='subbands8', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands8._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands9 = BIT_STR(name='subbands9', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands9._const_sz = ASN1Set(rv=[9], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands10 = BIT_STR(name='subbands10', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands10._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands11 = BIT_STR(name='subbands11', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands11._const_sz = ASN1Set(rv=[11], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands12 = BIT_STR(name='subbands12', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands12._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands13 = BIT_STR(name='subbands13', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands13._const_sz = ASN1Set(rv=[13], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands14 = BIT_STR(name='subbands14', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands14._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands15 = BIT_STR(name='subbands15', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands15._const_sz = ASN1Set(rv=[15], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands16 = BIT_STR(name='subbands16', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands16._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands17 = BIT_STR(name='subbands17', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands17._const_sz = ASN1Set(rv=[17], rr=[], ev=None, er=[])
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands18 = BIT_STR(name='subbands18', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands18._const_sz = ASN1Set(rv=[18], rr=[], ev=None, er=[])
    __CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand._cont = ASN1Dict([
        ('subbands3', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands3),
        ('subbands4', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands4),
        ('subbands5', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands5),
        ('subbands6', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands6),
        ('subbands7', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands7),
        ('subbands8', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands8),
        ('subbands9', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands9),
        ('subbands10', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands10),
        ('subbands11', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands11),
        ('subbands12', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands12),
        ('subbands13', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands13),
        ('subbands14', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands14),
        ('subbands15', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands15),
        ('subbands16', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands16),
        ('subbands17', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands17),
        ('subbands18', ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands18),
        ])
    __CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand._ext = []
    _CSI_ReportConfig_reportFreqConfiguration._cont = ASN1Dict([
        ('cqi-FormatIndicator', __CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator),
        ('pmi-FormatIndicator', __CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator),
        ('csi-ReportingBand', __CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand),
        ])
    _CSI_ReportConfig_reportFreqConfiguration._ext = []
    _CSI_ReportConfig_timeRestrictionForChannelMeasurements = ENUM(name='timeRestrictionForChannelMeasurements', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportConfig_timeRestrictionForChannelMeasurements._cont = ASN1Dict([('configured', 0), ('notConfigured', 1)])
    _CSI_ReportConfig_timeRestrictionForChannelMeasurements._ext = []
    _CSI_ReportConfig_timeRestrictionForInterferenceMeasurements = ENUM(name='timeRestrictionForInterferenceMeasurements', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportConfig_timeRestrictionForInterferenceMeasurements._cont = ASN1Dict([('configured', 0), ('notConfigured', 1)])
    _CSI_ReportConfig_timeRestrictionForInterferenceMeasurements._ext = []
    _CSI_ReportConfig_codebookConfig = SEQ(name='codebookConfig', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CodebookConfig')))
    _CSI_ReportConfig_nrofCQIsPerReport = ENUM(name='nrofCQIsPerReport', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportConfig_nrofCQIsPerReport._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _CSI_ReportConfig_nrofCQIsPerReport._ext = []
    _CSI_ReportConfig_groupBasedBeamReporting = CHOICE(name='groupBasedBeamReporting', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_ReportConfig_groupBasedBeamReporting_enabled = NULL(name='enabled', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_ReportConfig_groupBasedBeamReporting_disabled = SEQ(name='disabled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS = ENUM(name='nrofReportedRS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3)])
    ___CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS._ext = []
    __CSI_ReportConfig_groupBasedBeamReporting_disabled._cont = ASN1Dict([
        ('nrofReportedRS', ___CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS),
        ])
    __CSI_ReportConfig_groupBasedBeamReporting_disabled._ext = []
    _CSI_ReportConfig_groupBasedBeamReporting._cont = ASN1Dict([
        ('enabled', __CSI_ReportConfig_groupBasedBeamReporting_enabled),
        ('disabled', __CSI_ReportConfig_groupBasedBeamReporting_disabled),
        ])
    _CSI_ReportConfig_groupBasedBeamReporting._ext = []
    _CSI_ReportConfig_cqi_Table = ENUM(name='cqi-Table', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_ReportConfig_cqi_Table._cont = ASN1Dict([('table1', 0), ('table2', 1), ('spare2', 2), ('spare1', 3)])
    _CSI_ReportConfig_cqi_Table._ext = []
    _CSI_ReportConfig_subbandSize = ENUM(name='subbandSize', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportConfig_subbandSize._cont = ASN1Dict([('value1', 0), ('value2', 1)])
    _CSI_ReportConfig_subbandSize._ext = []
    _CSI_ReportConfig_bler_Target = ENUM(name='bler-Target', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_ReportConfig_bler_Target._cont = ASN1Dict([('zerodot1', 0), ('spare3', 1), ('space2', 2), ('spare1', 3)])
    _CSI_ReportConfig_bler_Target._ext = []
    _CSI_ReportConfig_non_PMI_PortIndication = SEQ_OF(name='non-PMI-PortIndication', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_ReportConfig_non_PMI_PortIndication__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndexFor8Ranks')))
    _CSI_ReportConfig_non_PMI_PortIndication._cont = __CSI_ReportConfig_non_PMI_PortIndication__item_
    _CSI_ReportConfig_non_PMI_PortIndication._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    CSI_ReportConfig._cont = ASN1Dict([
        ('reportConfigId', _CSI_ReportConfig_reportConfigId),
        ('carrier', _CSI_ReportConfig_carrier),
        ('resourcesForChannelMeasurement', _CSI_ReportConfig_resourcesForChannelMeasurement),
        ('csi-IM-ResourcesForInterference', _CSI_ReportConfig_csi_IM_ResourcesForInterference),
        ('nzp-CSI-RS-ResourcesForInterference', _CSI_ReportConfig_nzp_CSI_RS_ResourcesForInterference),
        ('reportConfigType', _CSI_ReportConfig_reportConfigType),
        ('reportQuantity', _CSI_ReportConfig_reportQuantity),
        ('reportFreqConfiguration', _CSI_ReportConfig_reportFreqConfiguration),
        ('timeRestrictionForChannelMeasurements', _CSI_ReportConfig_timeRestrictionForChannelMeasurements),
        ('timeRestrictionForInterferenceMeasurements', _CSI_ReportConfig_timeRestrictionForInterferenceMeasurements),
        ('codebookConfig', _CSI_ReportConfig_codebookConfig),
        ('nrofCQIsPerReport', _CSI_ReportConfig_nrofCQIsPerReport),
        ('groupBasedBeamReporting', _CSI_ReportConfig_groupBasedBeamReporting),
        ('cqi-Table', _CSI_ReportConfig_cqi_Table),
        ('subbandSize', _CSI_ReportConfig_subbandSize),
        ('bler-Target', _CSI_ReportConfig_bler_Target),
        ('non-PMI-PortIndication', _CSI_ReportConfig_non_PMI_PortIndication),
        ])
    CSI_ReportConfig._ext = []
    
    #-----< CSI-ReportPeriodicityAndOffset >-----#
    CSI_ReportPeriodicityAndOffset = CHOICE(name='CSI-ReportPeriodicityAndOffset', mode=MODE_TYPE)
    _CSI_ReportPeriodicityAndOffset_slots4 = INT(name='slots4', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots5 = INT(name='slots5', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots8 = INT(name='slots8', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots10 = INT(name='slots10', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots16 = INT(name='slots16', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots20 = INT(name='slots20', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots40 = INT(name='slots40', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots80 = INT(name='slots80', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots160 = INT(name='slots160', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    _CSI_ReportPeriodicityAndOffset_slots320 = INT(name='slots320', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ReportPeriodicityAndOffset_slots320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    CSI_ReportPeriodicityAndOffset._cont = ASN1Dict([
        ('slots4', _CSI_ReportPeriodicityAndOffset_slots4),
        ('slots5', _CSI_ReportPeriodicityAndOffset_slots5),
        ('slots8', _CSI_ReportPeriodicityAndOffset_slots8),
        ('slots10', _CSI_ReportPeriodicityAndOffset_slots10),
        ('slots16', _CSI_ReportPeriodicityAndOffset_slots16),
        ('slots20', _CSI_ReportPeriodicityAndOffset_slots20),
        ('slots40', _CSI_ReportPeriodicityAndOffset_slots40),
        ('slots80', _CSI_ReportPeriodicityAndOffset_slots80),
        ('slots160', _CSI_ReportPeriodicityAndOffset_slots160),
        ('slots320', _CSI_ReportPeriodicityAndOffset_slots320),
        ])
    CSI_ReportPeriodicityAndOffset._ext = []
    
    #-----< PUCCH-CSI-Resource >-----#
    PUCCH_CSI_Resource = CHOICE(name='PUCCH-CSI-Resource', mode=MODE_TYPE)
    _PUCCH_CSI_Resource_uplinkBandwidthPartId = INT(name='uplinkBandwidthPartId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _PUCCH_CSI_Resource_pucch_Resource = SEQ(name='pucch-Resource', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-Resource')))
    PUCCH_CSI_Resource._cont = ASN1Dict([
        ('uplinkBandwidthPartId', _PUCCH_CSI_Resource_uplinkBandwidthPartId),
        ('pucch-Resource', _PUCCH_CSI_Resource_pucch_Resource),
        ])
    PUCCH_CSI_Resource._ext = []
    
    #-----< PortIndexFor8Ranks >-----#
    PortIndexFor8Ranks = CHOICE(name='PortIndexFor8Ranks', mode=MODE_TYPE)
    _PortIndexFor8Ranks_portIndex8 = SEQ(name='portIndex8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PortIndexFor8Ranks_portIndex8_rank1_8 = INT(name='rank1-8', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank2_8 = SEQ_OF(name='rank2-8', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank2_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank2_8._cont = ___PortIndexFor8Ranks_portIndex8_rank2_8__item_
    __PortIndexFor8Ranks_portIndex8_rank2_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank3_8 = SEQ_OF(name='rank3-8', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank3_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank3_8._cont = ___PortIndexFor8Ranks_portIndex8_rank3_8__item_
    __PortIndexFor8Ranks_portIndex8_rank3_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank4_8 = SEQ_OF(name='rank4-8', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank4_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank4_8._cont = ___PortIndexFor8Ranks_portIndex8_rank4_8__item_
    __PortIndexFor8Ranks_portIndex8_rank4_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank5_8 = SEQ_OF(name='rank5-8', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank5_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank5_8._cont = ___PortIndexFor8Ranks_portIndex8_rank5_8__item_
    __PortIndexFor8Ranks_portIndex8_rank5_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank6_8 = SEQ_OF(name='rank6-8', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank6_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank6_8._cont = ___PortIndexFor8Ranks_portIndex8_rank6_8__item_
    __PortIndexFor8Ranks_portIndex8_rank6_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank7_8 = SEQ_OF(name='rank7-8', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank7_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank7_8._cont = ___PortIndexFor8Ranks_portIndex8_rank7_8__item_
    __PortIndexFor8Ranks_portIndex8_rank7_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex8_rank8_8 = SEQ_OF(name='rank8-8', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex8_rank8_8__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex8')))
    __PortIndexFor8Ranks_portIndex8_rank8_8._cont = ___PortIndexFor8Ranks_portIndex8_rank8_8__item_
    __PortIndexFor8Ranks_portIndex8_rank8_8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PortIndexFor8Ranks_portIndex8._cont = ASN1Dict([
        ('rank1-8', __PortIndexFor8Ranks_portIndex8_rank1_8),
        ('rank2-8', __PortIndexFor8Ranks_portIndex8_rank2_8),
        ('rank3-8', __PortIndexFor8Ranks_portIndex8_rank3_8),
        ('rank4-8', __PortIndexFor8Ranks_portIndex8_rank4_8),
        ('rank5-8', __PortIndexFor8Ranks_portIndex8_rank5_8),
        ('rank6-8', __PortIndexFor8Ranks_portIndex8_rank6_8),
        ('rank7-8', __PortIndexFor8Ranks_portIndex8_rank7_8),
        ('rank8-8', __PortIndexFor8Ranks_portIndex8_rank8_8),
        ])
    _PortIndexFor8Ranks_portIndex8._ext = []
    _PortIndexFor8Ranks_portIndex4 = SEQ(name='portIndex4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PortIndexFor8Ranks_portIndex4_rank1_4 = INT(name='rank1-4', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex4')))
    __PortIndexFor8Ranks_portIndex4_rank2_4 = SEQ_OF(name='rank2-4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex4_rank2_4__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex4')))
    __PortIndexFor8Ranks_portIndex4_rank2_4._cont = ___PortIndexFor8Ranks_portIndex4_rank2_4__item_
    __PortIndexFor8Ranks_portIndex4_rank2_4._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex4_rank3_4 = SEQ_OF(name='rank3-4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex4_rank3_4__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex4')))
    __PortIndexFor8Ranks_portIndex4_rank3_4._cont = ___PortIndexFor8Ranks_portIndex4_rank3_4__item_
    __PortIndexFor8Ranks_portIndex4_rank3_4._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    __PortIndexFor8Ranks_portIndex4_rank4_4 = SEQ_OF(name='rank4-4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex4_rank4_4__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex4')))
    __PortIndexFor8Ranks_portIndex4_rank4_4._cont = ___PortIndexFor8Ranks_portIndex4_rank4_4__item_
    __PortIndexFor8Ranks_portIndex4_rank4_4._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PortIndexFor8Ranks_portIndex4._cont = ASN1Dict([
        ('rank1-4', __PortIndexFor8Ranks_portIndex4_rank1_4),
        ('rank2-4', __PortIndexFor8Ranks_portIndex4_rank2_4),
        ('rank3-4', __PortIndexFor8Ranks_portIndex4_rank3_4),
        ('rank4-4', __PortIndexFor8Ranks_portIndex4_rank4_4),
        ])
    _PortIndexFor8Ranks_portIndex4._ext = []
    _PortIndexFor8Ranks_portIndex2 = SEQ(name='portIndex2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PortIndexFor8Ranks_portIndex2_rank1_2 = INT(name='rank1-2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex2')))
    __PortIndexFor8Ranks_portIndex2_rank2_2 = SEQ_OF(name='rank2-2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PortIndexFor8Ranks_portIndex2_rank2_2__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PortIndex2')))
    __PortIndexFor8Ranks_portIndex2_rank2_2._cont = ___PortIndexFor8Ranks_portIndex2_rank2_2__item_
    __PortIndexFor8Ranks_portIndex2_rank2_2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PortIndexFor8Ranks_portIndex2._cont = ASN1Dict([
        ('rank1-2', __PortIndexFor8Ranks_portIndex2_rank1_2),
        ('rank2-2', __PortIndexFor8Ranks_portIndex2_rank2_2),
        ])
    _PortIndexFor8Ranks_portIndex2._ext = []
    _PortIndexFor8Ranks_portIndex1 = NULL(name='portIndex1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PortIndexFor8Ranks._cont = ASN1Dict([
        ('portIndex8', _PortIndexFor8Ranks_portIndex8),
        ('portIndex4', _PortIndexFor8Ranks_portIndex4),
        ('portIndex2', _PortIndexFor8Ranks_portIndex2),
        ('portIndex1', _PortIndexFor8Ranks_portIndex1),
        ])
    PortIndexFor8Ranks._ext = []
    
    #-----< PortIndex8 >-----#
    PortIndex8 = INT(name='PortIndex8', mode=MODE_TYPE)
    PortIndex8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< PortIndex4 >-----#
    PortIndex4 = INT(name='PortIndex4', mode=MODE_TYPE)
    PortIndex4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< PortIndex2 >-----#
    PortIndex2 = INT(name='PortIndex2', mode=MODE_TYPE)
    PortIndex2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    
    #-----< maxNrofNZP-CSI-RS-ResourcesPerConfig >-----#
    maxNrofNZP_CSI_RS_ResourcesPerConfig = INT(name='maxNrofNZP-CSI-RS-ResourcesPerConfig', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_ResourcesPerConfig._val = 128
    
    #-----< CSI-ReportConfigId >-----#
    CSI_ReportConfigId = INT(name='CSI-ReportConfigId', mode=MODE_TYPE)
    CSI_ReportConfigId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=47)], ev=None, er=[])
    
    #-----< CSI-ResourceConfig >-----#
    CSI_ResourceConfig = SEQ(name='CSI-ResourceConfig', mode=MODE_TYPE)
    _CSI_ResourceConfig_csi_ResourceConfigId = INT(name='csi-ResourceConfigId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourceConfigId')))
    _CSI_ResourceConfig_csi_RS_ResourceSetList = CHOICE(name='csi-RS-ResourceSetList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB = SEQ(name='nzp-CSI-RS-SSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList = SEQ_OF(name='nzp-CSI-RS-ResourceSetList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceSetId')))
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList._cont = ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList__item_
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList = SEQ_OF(name='csi-SSB-ResourceSetList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SSB-ResourceSetId')))
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList._cont = ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList__item_
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1)], ev=None, er=[])
    __CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB._cont = ASN1Dict([
        ('nzp-CSI-RS-ResourceSetList', ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList),
        ('csi-SSB-ResourceSetList', ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList),
        ])
    __CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB._ext = []
    __CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList = SEQ_OF(name='csi-IM-ResourceSetList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-IM-ResourceSetId')))
    __CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList._cont = ___CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList__item_
    __CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _CSI_ResourceConfig_csi_RS_ResourceSetList._cont = ASN1Dict([
        ('nzp-CSI-RS-SSB', __CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB),
        ('csi-IM-ResourceSetList', __CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList),
        ])
    _CSI_ResourceConfig_csi_RS_ResourceSetList._ext = []
    _CSI_ResourceConfig_bwp_Id = INT(name='bwp-Id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _CSI_ResourceConfig_resourceType = ENUM(name='resourceType', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourceConfig_resourceType._cont = ASN1Dict([('aperiodic', 0), ('semiPersistent', 1), ('periodic', 2)])
    _CSI_ResourceConfig_resourceType._ext = []
    CSI_ResourceConfig._cont = ASN1Dict([
        ('csi-ResourceConfigId', _CSI_ResourceConfig_csi_ResourceConfigId),
        ('csi-RS-ResourceSetList', _CSI_ResourceConfig_csi_RS_ResourceSetList),
        ('bwp-Id', _CSI_ResourceConfig_bwp_Id),
        ('resourceType', _CSI_ResourceConfig_resourceType),
        ])
    CSI_ResourceConfig._ext = []
    
    #-----< CSI-ResourceConfigId >-----#
    CSI_ResourceConfigId = INT(name='CSI-ResourceConfigId', mode=MODE_TYPE)
    CSI_ResourceConfigId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=111)], ev=None, er=[])
    
    #-----< CSI-ResourcePeriodicityAndOffset >-----#
    CSI_ResourcePeriodicityAndOffset = CHOICE(name='CSI-ResourcePeriodicityAndOffset', mode=MODE_TYPE)
    _CSI_ResourcePeriodicityAndOffset_slots4 = INT(name='slots4', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots5 = INT(name='slots5', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots8 = INT(name='slots8', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots10 = INT(name='slots10', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots16 = INT(name='slots16', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots20 = INT(name='slots20', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots32 = INT(name='slots32', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots32._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots40 = INT(name='slots40', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots64 = INT(name='slots64', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots64._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots80 = INT(name='slots80', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots160 = INT(name='slots160', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots320 = INT(name='slots320', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    _CSI_ResourcePeriodicityAndOffset_slots640 = INT(name='slots640', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_ResourcePeriodicityAndOffset_slots640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    CSI_ResourcePeriodicityAndOffset._cont = ASN1Dict([
        ('slots4', _CSI_ResourcePeriodicityAndOffset_slots4),
        ('slots5', _CSI_ResourcePeriodicityAndOffset_slots5),
        ('slots8', _CSI_ResourcePeriodicityAndOffset_slots8),
        ('slots10', _CSI_ResourcePeriodicityAndOffset_slots10),
        ('slots16', _CSI_ResourcePeriodicityAndOffset_slots16),
        ('slots20', _CSI_ResourcePeriodicityAndOffset_slots20),
        ('slots32', _CSI_ResourcePeriodicityAndOffset_slots32),
        ('slots40', _CSI_ResourcePeriodicityAndOffset_slots40),
        ('slots64', _CSI_ResourcePeriodicityAndOffset_slots64),
        ('slots80', _CSI_ResourcePeriodicityAndOffset_slots80),
        ('slots160', _CSI_ResourcePeriodicityAndOffset_slots160),
        ('slots320', _CSI_ResourcePeriodicityAndOffset_slots320),
        ('slots640', _CSI_ResourcePeriodicityAndOffset_slots640),
        ])
    CSI_ResourcePeriodicityAndOffset._ext = []
    
    #-----< CSI-RS-ResourceMapping >-----#
    CSI_RS_ResourceMapping = SEQ(name='CSI-RS-ResourceMapping', mode=MODE_TYPE)
    _CSI_RS_ResourceMapping_frequencyDomainAllocation = CHOICE(name='frequencyDomainAllocation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row1 = BIT_STR(name='row1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row1._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row2 = BIT_STR(name='row2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row2._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row4 = BIT_STR(name='row4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_row4._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_other = BIT_STR(name='other', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_frequencyDomainAllocation_other._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _CSI_RS_ResourceMapping_frequencyDomainAllocation._cont = ASN1Dict([
        ('row1', __CSI_RS_ResourceMapping_frequencyDomainAllocation_row1),
        ('row2', __CSI_RS_ResourceMapping_frequencyDomainAllocation_row2),
        ('row4', __CSI_RS_ResourceMapping_frequencyDomainAllocation_row4),
        ('other', __CSI_RS_ResourceMapping_frequencyDomainAllocation_other),
        ])
    _CSI_RS_ResourceMapping_frequencyDomainAllocation._ext = []
    _CSI_RS_ResourceMapping_nrofPorts = ENUM(name='nrofPorts', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_ResourceMapping_nrofPorts._cont = ASN1Dict([('p1', 0), ('p2', 1), ('p4', 2), ('p8', 3), ('p12', 4), ('p16', 5), ('p24', 6), ('p32', 7)])
    _CSI_RS_ResourceMapping_nrofPorts._ext = []
    _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain = INT(name='firstOFDMSymbolInTimeDomain', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain2 = INT(name='firstOFDMSymbolInTimeDomain2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    _CSI_RS_ResourceMapping_cdm_Type = ENUM(name='cdm-Type', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_ResourceMapping_cdm_Type._cont = ASN1Dict([('noCDM', 0), ('fd-CDM2', 1), ('cdm4-FD2-TD2', 2), ('cdm8-FD2-TD4', 3)])
    _CSI_RS_ResourceMapping_cdm_Type._ext = []
    _CSI_RS_ResourceMapping_density = CHOICE(name='density', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_RS_ResourceMapping_density_dot5 = ENUM(name='dot5', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_density_dot5._cont = ASN1Dict([('evenPRBs', 0), ('oddPRBs', 1)])
    __CSI_RS_ResourceMapping_density_dot5._ext = []
    __CSI_RS_ResourceMapping_density_one = NULL(name='one', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_density_three = NULL(name='three', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceMapping_density_spare = NULL(name='spare', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_ResourceMapping_density._cont = ASN1Dict([
        ('dot5', __CSI_RS_ResourceMapping_density_dot5),
        ('one', __CSI_RS_ResourceMapping_density_one),
        ('three', __CSI_RS_ResourceMapping_density_three),
        ('spare', __CSI_RS_ResourceMapping_density_spare),
        ])
    _CSI_RS_ResourceMapping_density._ext = []
    _CSI_RS_ResourceMapping_freqBand = SEQ(name='freqBand', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-FrequencyOccupation')))
    CSI_RS_ResourceMapping._cont = ASN1Dict([
        ('frequencyDomainAllocation', _CSI_RS_ResourceMapping_frequencyDomainAllocation),
        ('nrofPorts', _CSI_RS_ResourceMapping_nrofPorts),
        ('firstOFDMSymbolInTimeDomain', _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain),
        ('firstOFDMSymbolInTimeDomain2', _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain2),
        ('cdm-Type', _CSI_RS_ResourceMapping_cdm_Type),
        ('density', _CSI_RS_ResourceMapping_density),
        ('freqBand', _CSI_RS_ResourceMapping_freqBand),
        ])
    CSI_RS_ResourceMapping._ext = []
    
    #-----< CSI-SemiPersistentOnPUSCH-TriggerStateList >-----#
    CSI_SemiPersistentOnPUSCH_TriggerStateList = SEQ_OF(name='CSI-SemiPersistentOnPUSCH-TriggerStateList', mode=MODE_TYPE)
    _CSI_SemiPersistentOnPUSCH_TriggerStateList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SemiPersistentOnPUSCH-TriggerState')))
    CSI_SemiPersistentOnPUSCH_TriggerStateList._cont = _CSI_SemiPersistentOnPUSCH_TriggerStateList__item_
    CSI_SemiPersistentOnPUSCH_TriggerStateList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< CSI-SemiPersistentOnPUSCH-TriggerState >-----#
    CSI_SemiPersistentOnPUSCH_TriggerState = SEQ(name='CSI-SemiPersistentOnPUSCH-TriggerState', mode=MODE_TYPE)
    _CSI_SemiPersistentOnPUSCH_TriggerState_associatedReportConfigInfo = INT(name='associatedReportConfigInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ReportConfigId')))
    CSI_SemiPersistentOnPUSCH_TriggerState._cont = ASN1Dict([
        ('associatedReportConfigInfo', _CSI_SemiPersistentOnPUSCH_TriggerState_associatedReportConfigInfo),
        ])
    CSI_SemiPersistentOnPUSCH_TriggerState._ext = []
    
    #-----< maxNrOfSemiPersistentPUSCH-Triggers >-----#
    maxNrOfSemiPersistentPUSCH_Triggers = INT(name='maxNrOfSemiPersistentPUSCH-Triggers', mode=MODE_VALUE)
    maxNrOfSemiPersistentPUSCH_Triggers._val = 64
    
    #-----< CSI-SSB-ResourceSetId >-----#
    CSI_SSB_ResourceSetId = INT(name='CSI-SSB-ResourceSetId', mode=MODE_TYPE)
    CSI_SSB_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< CSI-SSB-ResourceSet >-----#
    CSI_SSB_ResourceSet = SEQ(name='CSI-SSB-ResourceSet', mode=MODE_TYPE)
    _CSI_SSB_ResourceSet_csi_SSB_ResourceSetId = INT(name='csi-SSB-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-SSB-ResourceSetId')))
    _CSI_SSB_ResourceSet_csi_SSB_ResourceList = SEQ_OF(name='csi-SSB-ResourceList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_SSB_ResourceSet_csi_SSB_ResourceList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    _CSI_SSB_ResourceSet_csi_SSB_ResourceList._cont = __CSI_SSB_ResourceSet_csi_SSB_ResourceList__item_
    _CSI_SSB_ResourceSet_csi_SSB_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    CSI_SSB_ResourceSet._cont = ASN1Dict([
        ('csi-SSB-ResourceSetId', _CSI_SSB_ResourceSet_csi_SSB_ResourceSetId),
        ('csi-SSB-ResourceList', _CSI_SSB_ResourceSet_csi_SSB_ResourceList),
        ])
    CSI_SSB_ResourceSet._ext = []
    
    #-----< DedicatedInfoNAS >-----#
    DedicatedInfoNAS = OCT_STR(name='DedicatedInfoNAS', mode=MODE_TYPE)
    
    #-----< DMRS-DownlinkConfig >-----#
    DMRS_DownlinkConfig = SEQ(name='DMRS-DownlinkConfig', mode=MODE_TYPE)
    _DMRS_DownlinkConfig_dmrs_Type = ENUM(name='dmrs-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_dmrs_Type._cont = ASN1Dict([('type2', 0)])
    _DMRS_DownlinkConfig_dmrs_Type._ext = []
    _DMRS_DownlinkConfig_dmrs_AdditionalPosition = ENUM(name='dmrs-AdditionalPosition', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_dmrs_AdditionalPosition._cont = ASN1Dict([('pos0', 0), ('pos1', 1), ('pos3', 2)])
    _DMRS_DownlinkConfig_dmrs_AdditionalPosition._ext = []
    _DMRS_DownlinkConfig_dmrs_group1 = BIT_STR(name='dmrs-group1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_dmrs_group1._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    _DMRS_DownlinkConfig_dmrs_group2 = BIT_STR(name='dmrs-group2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_dmrs_group2._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    _DMRS_DownlinkConfig_maxLength = ENUM(name='maxLength', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_maxLength._cont = ASN1Dict([('len2', 0)])
    _DMRS_DownlinkConfig_maxLength._ext = []
    _DMRS_DownlinkConfig_scramblingID0 = INT(name='scramblingID0', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_scramblingID0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _DMRS_DownlinkConfig_scramblingID1 = INT(name='scramblingID1', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_DownlinkConfig_scramblingID1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    _DMRS_DownlinkConfig_phaseTrackingRS = CHOICE(name='phaseTrackingRS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __DMRS_DownlinkConfig_phaseTrackingRS_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DMRS_DownlinkConfig_phaseTrackingRS_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PTRS-DownlinkConfig')))
    _DMRS_DownlinkConfig_phaseTrackingRS._cont = ASN1Dict([
        ('release', __DMRS_DownlinkConfig_phaseTrackingRS_release),
        ('setup', __DMRS_DownlinkConfig_phaseTrackingRS_setup),
        ])
    _DMRS_DownlinkConfig_phaseTrackingRS._ext = []
    DMRS_DownlinkConfig._cont = ASN1Dict([
        ('dmrs-Type', _DMRS_DownlinkConfig_dmrs_Type),
        ('dmrs-AdditionalPosition', _DMRS_DownlinkConfig_dmrs_AdditionalPosition),
        ('dmrs-group1', _DMRS_DownlinkConfig_dmrs_group1),
        ('dmrs-group2', _DMRS_DownlinkConfig_dmrs_group2),
        ('maxLength', _DMRS_DownlinkConfig_maxLength),
        ('scramblingID0', _DMRS_DownlinkConfig_scramblingID0),
        ('scramblingID1', _DMRS_DownlinkConfig_scramblingID1),
        ('phaseTrackingRS', _DMRS_DownlinkConfig_phaseTrackingRS),
        ])
    DMRS_DownlinkConfig._ext = []
    
    #-----< DMRS-UplinkConfig >-----#
    DMRS_UplinkConfig = SEQ(name='DMRS-UplinkConfig', mode=MODE_TYPE)
    _DMRS_UplinkConfig_dmrs_Type = ENUM(name='dmrs-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_UplinkConfig_dmrs_Type._cont = ASN1Dict([('type2', 0)])
    _DMRS_UplinkConfig_dmrs_Type._ext = []
    _DMRS_UplinkConfig_dmrs_AdditionalPosition = ENUM(name='dmrs-AdditionalPosition', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_UplinkConfig_dmrs_AdditionalPosition._cont = ASN1Dict([('pos0', 0), ('pos1', 1), ('pos3', 2)])
    _DMRS_UplinkConfig_dmrs_AdditionalPosition._ext = []
    _DMRS_UplinkConfig_phaseTrackingRS = CHOICE(name='phaseTrackingRS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __DMRS_UplinkConfig_phaseTrackingRS_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DMRS_UplinkConfig_phaseTrackingRS_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PTRS-UplinkConfig')))
    _DMRS_UplinkConfig_phaseTrackingRS._cont = ASN1Dict([
        ('release', __DMRS_UplinkConfig_phaseTrackingRS_release),
        ('setup', __DMRS_UplinkConfig_phaseTrackingRS_setup),
        ])
    _DMRS_UplinkConfig_phaseTrackingRS._ext = []
    _DMRS_UplinkConfig_maxLength = ENUM(name='maxLength', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DMRS_UplinkConfig_maxLength._cont = ASN1Dict([('len2', 0)])
    _DMRS_UplinkConfig_maxLength._ext = []
    _DMRS_UplinkConfig_transformPrecoding = CHOICE(name='transformPrecoding', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DMRS_UplinkConfig_transformPrecoding_disabled = SEQ(name='disabled', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID0 = INT(name='scramblingID0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID1 = INT(name='scramblingID1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    __DMRS_UplinkConfig_transformPrecoding_disabled._cont = ASN1Dict([
        ('scramblingID0', ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID0),
        ('scramblingID1', ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID1),
        ])
    __DMRS_UplinkConfig_transformPrecoding_disabled._ext = []
    __DMRS_UplinkConfig_transformPrecoding_enabled = SEQ(name='enabled', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___DMRS_UplinkConfig_transformPrecoding_enabled_nPUSCH_Identity = INT(name='nPUSCH-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DMRS_UplinkConfig_transformPrecoding_enabled_nPUSCH_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1007)], ev=None, er=[])
    ___DMRS_UplinkConfig_transformPrecoding_enabled_disableSequenceGroupHopping = ENUM(name='disableSequenceGroupHopping', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DMRS_UplinkConfig_transformPrecoding_enabled_disableSequenceGroupHopping._cont = ASN1Dict([('disabled', 0)])
    ___DMRS_UplinkConfig_transformPrecoding_enabled_disableSequenceGroupHopping._ext = []
    ___DMRS_UplinkConfig_transformPrecoding_enabled_sequenceHoppingEnabled = ENUM(name='sequenceHoppingEnabled', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___DMRS_UplinkConfig_transformPrecoding_enabled_sequenceHoppingEnabled._cont = ASN1Dict([('enabled', 0)])
    ___DMRS_UplinkConfig_transformPrecoding_enabled_sequenceHoppingEnabled._ext = []
    __DMRS_UplinkConfig_transformPrecoding_enabled._cont = ASN1Dict([
        ('nPUSCH-Identity', ___DMRS_UplinkConfig_transformPrecoding_enabled_nPUSCH_Identity),
        ('disableSequenceGroupHopping', ___DMRS_UplinkConfig_transformPrecoding_enabled_disableSequenceGroupHopping),
        ('sequenceHoppingEnabled', ___DMRS_UplinkConfig_transformPrecoding_enabled_sequenceHoppingEnabled),
        ])
    __DMRS_UplinkConfig_transformPrecoding_enabled._ext = []
    _DMRS_UplinkConfig_transformPrecoding._cont = ASN1Dict([
        ('disabled', __DMRS_UplinkConfig_transformPrecoding_disabled),
        ('enabled', __DMRS_UplinkConfig_transformPrecoding_enabled),
        ])
    _DMRS_UplinkConfig_transformPrecoding._ext = []
    DMRS_UplinkConfig._cont = ASN1Dict([
        ('dmrs-Type', _DMRS_UplinkConfig_dmrs_Type),
        ('dmrs-AdditionalPosition', _DMRS_UplinkConfig_dmrs_AdditionalPosition),
        ('phaseTrackingRS', _DMRS_UplinkConfig_phaseTrackingRS),
        ('maxLength', _DMRS_UplinkConfig_maxLength),
        ('transformPrecoding', _DMRS_UplinkConfig_transformPrecoding),
        ])
    DMRS_UplinkConfig._ext = []
    
    #-----< DownlinkPreemption >-----#
    DownlinkPreemption = SEQ(name='DownlinkPreemption', mode=MODE_TYPE)
    _DownlinkPreemption_int_RNTI = INT(name='int-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _DownlinkPreemption_timeFrequencySet = ENUM(name='timeFrequencySet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DownlinkPreemption_timeFrequencySet._cont = ASN1Dict([('set0', 0), ('set1', 1)])
    _DownlinkPreemption_timeFrequencySet._ext = []
    _DownlinkPreemption_dci_PayloadSize = INT(name='dci-PayloadSize', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DownlinkPreemption_dci_PayloadSize._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=126)], ev=None, er=[])
    _DownlinkPreemption_int_ConfigurationPerServingCell = SEQ_OF(name='int-ConfigurationPerServingCell', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DownlinkPreemption_int_ConfigurationPerServingCell__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'INT-ConfigurationPerServingCell')))
    _DownlinkPreemption_int_ConfigurationPerServingCell._cont = __DownlinkPreemption_int_ConfigurationPerServingCell__item_
    _DownlinkPreemption_int_ConfigurationPerServingCell._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    DownlinkPreemption._cont = ASN1Dict([
        ('int-RNTI', _DownlinkPreemption_int_RNTI),
        ('timeFrequencySet', _DownlinkPreemption_timeFrequencySet),
        ('dci-PayloadSize', _DownlinkPreemption_dci_PayloadSize),
        ('int-ConfigurationPerServingCell', _DownlinkPreemption_int_ConfigurationPerServingCell),
        ])
    DownlinkPreemption._ext = []
    
    #-----< INT-ConfigurationPerServingCell >-----#
    INT_ConfigurationPerServingCell = SEQ(name='INT-ConfigurationPerServingCell', mode=MODE_TYPE)
    _INT_ConfigurationPerServingCell_servingCellId = INT(name='servingCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _INT_ConfigurationPerServingCell_positionInDCI = INT(name='positionInDCI', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _INT_ConfigurationPerServingCell_positionInDCI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=125)], ev=None, er=[])
    INT_ConfigurationPerServingCell._cont = ASN1Dict([
        ('servingCellId', _INT_ConfigurationPerServingCell_servingCellId),
        ('positionInDCI', _INT_ConfigurationPerServingCell_positionInDCI),
        ])
    INT_ConfigurationPerServingCell._ext = []
    
    #-----< DRB-Identity >-----#
    DRB_Identity = INT(name='DRB-Identity', mode=MODE_TYPE)
    DRB_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< EUTRA-MBSFN-SubframeConfigList >-----#
    EUTRA_MBSFN_SubframeConfigList = SEQ_OF(name='EUTRA-MBSFN-SubframeConfigList', mode=MODE_TYPE)
    _EUTRA_MBSFN_SubframeConfigList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'EUTRA-MBSFN-SubframeConfig')))
    EUTRA_MBSFN_SubframeConfigList._cont = _EUTRA_MBSFN_SubframeConfigList__item_
    EUTRA_MBSFN_SubframeConfigList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< EUTRA-MBSFN-SubframeConfig >-----#
    EUTRA_MBSFN_SubframeConfig = SEQ(name='EUTRA-MBSFN-SubframeConfig', mode=MODE_TYPE)
    _EUTRA_MBSFN_SubframeConfig_radioframeAllocationPeriod = ENUM(name='radioframeAllocationPeriod', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUTRA_MBSFN_SubframeConfig_radioframeAllocationPeriod._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3), ('n16', 4), ('n32', 5)])
    _EUTRA_MBSFN_SubframeConfig_radioframeAllocationPeriod._ext = []
    _EUTRA_MBSFN_SubframeConfig_radioframeAllocationOffset = INT(name='radioframeAllocationOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUTRA_MBSFN_SubframeConfig_radioframeAllocationOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation = CHOICE(name='subframeAllocation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_oneFrame = BIT_STR(name='oneFrame', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_oneFrame._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_fourFrames = BIT_STR(name='fourFrames', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_fourFrames._const_sz = ASN1Set(rv=[24], rr=[], ev=None, er=[])
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation._cont = ASN1Dict([
        ('oneFrame', __EUTRA_MBSFN_SubframeConfig_subframeAllocation_oneFrame),
        ('fourFrames', __EUTRA_MBSFN_SubframeConfig_subframeAllocation_fourFrames),
        ])
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation._ext = []
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430 = CHOICE(name='subframeAllocation-v1430', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_oneFrame_v1430 = BIT_STR(name='oneFrame-v1430', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_oneFrame_v1430._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_fourFrames_v1430 = BIT_STR(name='fourFrames-v1430', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_fourFrames_v1430._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430._cont = ASN1Dict([
        ('oneFrame-v1430', __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_oneFrame_v1430),
        ('fourFrames-v1430', __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_fourFrames_v1430),
        ])
    _EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430._ext = []
    EUTRA_MBSFN_SubframeConfig._cont = ASN1Dict([
        ('radioframeAllocationPeriod', _EUTRA_MBSFN_SubframeConfig_radioframeAllocationPeriod),
        ('radioframeAllocationOffset', _EUTRA_MBSFN_SubframeConfig_radioframeAllocationOffset),
        ('subframeAllocation', _EUTRA_MBSFN_SubframeConfig_subframeAllocation),
        ('subframeAllocation-v1430', _EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430),
        ])
    EUTRA_MBSFN_SubframeConfig._ext = []
    
    #-----< FilterCoefficient >-----#
    FilterCoefficient = ENUM(name='FilterCoefficient', mode=MODE_TYPE)
    FilterCoefficient._cont = ASN1Dict([('fc0', 0), ('fc1', 1), ('fc2', 2), ('fc3', 3), ('fc4', 4), ('fc5', 5), ('fc6', 6), ('fc7', 7), ('fc8', 8), ('fc9', 9), ('fc11', 10), ('fc13', 11), ('fc15', 12), ('fc17', 13), ('fc19', 14), ('spare1', 15)])
    FilterCoefficient._ext = []
    
    #-----< FreqBandIndicatorNR >-----#
    FreqBandIndicatorNR = INT(name='FreqBandIndicatorNR', mode=MODE_TYPE)
    FreqBandIndicatorNR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< FrequencyInfoDL >-----#
    FrequencyInfoDL = SEQ(name='FrequencyInfoDL', mode=MODE_TYPE)
    _FrequencyInfoDL_absoluteFrequencySSB = INT(name='absoluteFrequencySSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')))
    _FrequencyInfoDL_ssb_SubcarrierOffset = INT(name='ssb-SubcarrierOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FrequencyInfoDL_ssb_SubcarrierOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    _FrequencyInfoDL_frequencyBandList = SEQ_OF(name='frequencyBandList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MultiFrequencyBandListNR')))
    _FrequencyInfoDL_absoluteFrequencyPointA = INT(name='absoluteFrequencyPointA', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')))
    _FrequencyInfoDL_scs_SpecificCarrierList = SEQ_OF(name='scs-SpecificCarrierList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __FrequencyInfoDL_scs_SpecificCarrierList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SCS-SpecificCarrier')))
    _FrequencyInfoDL_scs_SpecificCarrierList._cont = __FrequencyInfoDL_scs_SpecificCarrierList__item_
    _FrequencyInfoDL_scs_SpecificCarrierList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    FrequencyInfoDL._cont = ASN1Dict([
        ('absoluteFrequencySSB', _FrequencyInfoDL_absoluteFrequencySSB),
        ('ssb-SubcarrierOffset', _FrequencyInfoDL_ssb_SubcarrierOffset),
        ('frequencyBandList', _FrequencyInfoDL_frequencyBandList),
        ('absoluteFrequencyPointA', _FrequencyInfoDL_absoluteFrequencyPointA),
        ('scs-SpecificCarrierList', _FrequencyInfoDL_scs_SpecificCarrierList),
        ])
    FrequencyInfoDL._ext = []
    
    #-----< FrequencyInfoUL >-----#
    FrequencyInfoUL = SEQ(name='FrequencyInfoUL', mode=MODE_TYPE)
    _FrequencyInfoUL_frequencyBandList = SEQ_OF(name='frequencyBandList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MultiFrequencyBandListNR')), opt=True)
    _FrequencyInfoUL_absoluteFrequencyPointA = INT(name='absoluteFrequencyPointA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _FrequencyInfoUL_scs_SpecificCarriers = SEQ_OF(name='scs-SpecificCarriers', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __FrequencyInfoUL_scs_SpecificCarriers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SCS-SpecificCarrier')))
    _FrequencyInfoUL_scs_SpecificCarriers._cont = __FrequencyInfoUL_scs_SpecificCarriers__item_
    _FrequencyInfoUL_scs_SpecificCarriers._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _FrequencyInfoUL_additionalSpectrumEmission = INT(name='additionalSpectrumEmission', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AdditionalSpectrumEmission')), opt=True)
    _FrequencyInfoUL_p_Max = INT(name='p-Max', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P-Max')), opt=True)
    _FrequencyInfoUL_frequencyShift7p5khz = ENUM(name='frequencyShift7p5khz', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _FrequencyInfoUL_frequencyShift7p5khz._cont = ASN1Dict([('true', 0)])
    _FrequencyInfoUL_frequencyShift7p5khz._ext = []
    FrequencyInfoUL._cont = ASN1Dict([
        ('frequencyBandList', _FrequencyInfoUL_frequencyBandList),
        ('absoluteFrequencyPointA', _FrequencyInfoUL_absoluteFrequencyPointA),
        ('scs-SpecificCarriers', _FrequencyInfoUL_scs_SpecificCarriers),
        ('additionalSpectrumEmission', _FrequencyInfoUL_additionalSpectrumEmission),
        ('p-Max', _FrequencyInfoUL_p_Max),
        ('frequencyShift7p5khz', _FrequencyInfoUL_frequencyShift7p5khz),
        ])
    FrequencyInfoUL._ext = []
    
    #-----< GSCN-ValueNR >-----#
    GSCN_ValueNR = INT(name='GSCN-ValueNR', mode=MODE_TYPE)
    GSCN_ValueNR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=28557)], ev=None, er=[])
    
    #-----< Hysteresis >-----#
    Hysteresis = INT(name='Hysteresis', mode=MODE_TYPE)
    Hysteresis._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=30)], ev=None, er=[])
    
    #-----< I-RNTI-Value >-----#
    I_RNTI_Value = BIT_STR(name='I-RNTI-Value', mode=MODE_TYPE)
    I_RNTI_Value._const_sz = ASN1Set(rv=[52], rr=[], ev=None, er=[])
    
    #-----< LogicalChannelConfig >-----#
    LogicalChannelConfig = SEQ(name='LogicalChannelConfig', mode=MODE_TYPE)
    _LogicalChannelConfig_ul_SpecificParameters = SEQ(name='ul-SpecificParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_priority = INT(name='priority', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_priority._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate = ENUM(name='prioritisedBitRate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate._cont = ASN1Dict([('kBps0', 0), ('kBps8', 1), ('kBps16', 2), ('kBps32', 3), ('kBps64', 4), ('kBps128', 5), ('kBps256', 6), ('kBps512', 7), ('kBps1024', 8), ('kBps2048', 9), ('kBps4096', 10), ('kBps8192', 11), ('kBps16384', 12), ('kBps32768', 13), ('kBps65536', 14), ('infinity', 15)])
    __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate._ext = []
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration = ENUM(name='bucketSizeDuration', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration._cont = ASN1Dict([('ms50', 0), ('ms100', 1), ('ms150', 2), ('ms300', 3), ('ms500', 4), ('ms1000', 5), ('spare2', 6), ('spare1', 7)])
    __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration._ext = []
    __LogicalChannelConfig_ul_SpecificParameters_allowedServingCells = SEQ_OF(name='allowedServingCells', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___LogicalChannelConfig_ul_SpecificParameters_allowedServingCells__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    __LogicalChannelConfig_ul_SpecificParameters_allowedServingCells._cont = ___LogicalChannelConfig_ul_SpecificParameters_allowedServingCells__item_
    __LogicalChannelConfig_ul_SpecificParameters_allowedServingCells._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    __LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List = SEQ_OF(name='allowedSCS-List', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List__item_ = ENUM(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    __LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List._cont = ___LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List__item_
    __LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    __LogicalChannelConfig_ul_SpecificParameters_maxPUSCH_Duration = ENUM(name='maxPUSCH-Duration', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_maxPUSCH_Duration._cont = ASN1Dict([('ms0p02', 0), ('ms0p04', 1), ('ms0p0625', 2), ('ms0p125', 3), ('ms0p25', 4), ('ms0p5', 5), ('spare2', 6), ('spare1', 7)])
    __LogicalChannelConfig_ul_SpecificParameters_maxPUSCH_Duration._ext = []
    __LogicalChannelConfig_ul_SpecificParameters_configuredGrantType1Allowed = ENUM(name='configuredGrantType1Allowed', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_configuredGrantType1Allowed._cont = ASN1Dict([('true', 0)])
    __LogicalChannelConfig_ul_SpecificParameters_configuredGrantType1Allowed._ext = []
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup = INT(name='logicalChannelGroup', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    __LogicalChannelConfig_ul_SpecificParameters_schedulingRequestID = INT(name='schedulingRequestID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestId')), opt=True)
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_Mask = BOOL(name='logicalChannelSR-Mask', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_DelayTimerApplied = BOOL(name='logicalChannelSR-DelayTimerApplied', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LogicalChannelConfig_ul_SpecificParameters._cont = ASN1Dict([
        ('priority', __LogicalChannelConfig_ul_SpecificParameters_priority),
        ('prioritisedBitRate', __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate),
        ('bucketSizeDuration', __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration),
        ('allowedServingCells', __LogicalChannelConfig_ul_SpecificParameters_allowedServingCells),
        ('allowedSCS-List', __LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List),
        ('maxPUSCH-Duration', __LogicalChannelConfig_ul_SpecificParameters_maxPUSCH_Duration),
        ('configuredGrantType1Allowed', __LogicalChannelConfig_ul_SpecificParameters_configuredGrantType1Allowed),
        ('logicalChannelGroup', __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup),
        ('schedulingRequestID', __LogicalChannelConfig_ul_SpecificParameters_schedulingRequestID),
        ('logicalChannelSR-Mask', __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_Mask),
        ('logicalChannelSR-DelayTimerApplied', __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_DelayTimerApplied),
        ])
    _LogicalChannelConfig_ul_SpecificParameters._ext = []
    LogicalChannelConfig._cont = ASN1Dict([
        ('ul-SpecificParameters', _LogicalChannelConfig_ul_SpecificParameters),
        ])
    LogicalChannelConfig._ext = []
    
    #-----< MAC-CellGroupConfig >-----#
    MAC_CellGroupConfig = SEQ(name='MAC-CellGroupConfig', mode=MODE_TYPE)
    _MAC_CellGroupConfig_drx_Config = CHOICE(name='drx-Config', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __MAC_CellGroupConfig_drx_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MAC_CellGroupConfig_drx_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRX-Config')))
    _MAC_CellGroupConfig_drx_Config._cont = ASN1Dict([
        ('release', __MAC_CellGroupConfig_drx_Config_release),
        ('setup', __MAC_CellGroupConfig_drx_Config_setup),
        ])
    _MAC_CellGroupConfig_drx_Config._ext = []
    _MAC_CellGroupConfig_schedulingRequestConfig = SEQ(name='schedulingRequestConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestConfig')), opt=True)
    _MAC_CellGroupConfig_bsr_Config = SEQ(name='bsr-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BSR-Config')), opt=True)
    _MAC_CellGroupConfig_tag_Config = SEQ(name='tag-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TAG-Config')), opt=True)
    _MAC_CellGroupConfig_phr_Config = CHOICE(name='phr-Config', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __MAC_CellGroupConfig_phr_Config_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MAC_CellGroupConfig_phr_Config_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PHR-Config')))
    _MAC_CellGroupConfig_phr_Config._cont = ASN1Dict([
        ('release', __MAC_CellGroupConfig_phr_Config_release),
        ('setup', __MAC_CellGroupConfig_phr_Config_setup),
        ])
    _MAC_CellGroupConfig_phr_Config._ext = []
    _MAC_CellGroupConfig_skipUplinkTxDynamic = BOOL(name='skipUplinkTxDynamic', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MAC_CellGroupConfig_cs_RNTI = CHOICE(name='cs-RNTI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __MAC_CellGroupConfig_cs_RNTI_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MAC_CellGroupConfig_cs_RNTI_setup = INT(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _MAC_CellGroupConfig_cs_RNTI._cont = ASN1Dict([
        ('release', __MAC_CellGroupConfig_cs_RNTI_release),
        ('setup', __MAC_CellGroupConfig_cs_RNTI_setup),
        ])
    _MAC_CellGroupConfig_cs_RNTI._ext = []
    MAC_CellGroupConfig._cont = ASN1Dict([
        ('drx-Config', _MAC_CellGroupConfig_drx_Config),
        ('schedulingRequestConfig', _MAC_CellGroupConfig_schedulingRequestConfig),
        ('bsr-Config', _MAC_CellGroupConfig_bsr_Config),
        ('tag-Config', _MAC_CellGroupConfig_tag_Config),
        ('phr-Config', _MAC_CellGroupConfig_phr_Config),
        ('skipUplinkTxDynamic', _MAC_CellGroupConfig_skipUplinkTxDynamic),
        ('cs-RNTI', _MAC_CellGroupConfig_cs_RNTI),
        ])
    MAC_CellGroupConfig._ext = []
    
    #-----< DRX-Config >-----#
    DRX_Config = SEQ(name='DRX-Config', mode=MODE_TYPE)
    _DRX_Config_drx_onDurationTimer = CHOICE(name='drx-onDurationTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DRX_Config_drx_onDurationTimer_subMilliSeconds = INT(name='subMilliSeconds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_onDurationTimer_subMilliSeconds._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    __DRX_Config_drx_onDurationTimer_milliSeconds = ENUM(name='milliSeconds', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_onDurationTimer_milliSeconds._cont = ASN1Dict([('ms1', 0), ('ms2', 1), ('ms3', 2), ('ms4', 3), ('ms5', 4), ('ms6', 5), ('ms8', 6), ('ms10', 7), ('ms20', 8), ('ms30', 9), ('ms40', 10), ('ms50', 11), ('ms60', 12), ('ms80', 13), ('ms100', 14), ('ms200', 15), ('ms300', 16), ('ms400', 17), ('ms500', 18), ('ms600', 19), ('ms800', 20), ('ms1000', 21), ('ms1200', 22), ('ms1600', 23), ('spare9', 24), ('spare8', 25), ('spare7', 26), ('spare6', 27), ('spare5', 28), ('spare4', 29), ('spare3', 30), ('spare2', 31), ('spare1', 32)])
    __DRX_Config_drx_onDurationTimer_milliSeconds._ext = []
    _DRX_Config_drx_onDurationTimer._cont = ASN1Dict([
        ('subMilliSeconds', __DRX_Config_drx_onDurationTimer_subMilliSeconds),
        ('milliSeconds', __DRX_Config_drx_onDurationTimer_milliSeconds),
        ])
    _DRX_Config_drx_onDurationTimer._ext = []
    _DRX_Config_drx_InactivityTimer = ENUM(name='drx-InactivityTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_InactivityTimer._cont = ASN1Dict([('ms0', 0), ('ms1', 1), ('ms2', 2), ('ms3', 3), ('ms4', 4), ('ms5', 5), ('ms6', 6), ('ms8', 7), ('ms10', 8), ('ms20', 9), ('ms30', 10), ('ms40', 11), ('ms50', 12), ('ms60', 13), ('ms80', 14), ('ms100', 15), ('ms200', 16), ('ms300', 17), ('ms500', 18), ('ms750', 19), ('ms1280', 20), ('ms1920', 21), ('ms2560', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    _DRX_Config_drx_InactivityTimer._ext = []
    _DRX_Config_drx_HARQ_RTT_TimerDL = INT(name='drx-HARQ-RTT-TimerDL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_HARQ_RTT_TimerDL._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=56)], ev=None, er=[])
    _DRX_Config_drx_HARQ_RTT_TimerUL = INT(name='drx-HARQ-RTT-TimerUL', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_HARQ_RTT_TimerUL._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=56)], ev=None, er=[])
    _DRX_Config_drx_RetransmissionTimerDL = ENUM(name='drx-RetransmissionTimerDL', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_RetransmissionTimerDL._cont = ASN1Dict([('sl0', 0), ('sl1', 1), ('sl2', 2), ('sl4', 3), ('sl6', 4), ('sl8', 5), ('sl16', 6), ('sl24', 7), ('sl33', 8), ('sl40', 9), ('sl64', 10), ('sl80', 11), ('sl96', 12), ('sl112', 13), ('sl128', 14), ('sl160', 15), ('sl320', 16), ('spare15', 17), ('spare14', 18), ('spare13', 19), ('spare12', 20), ('spare11', 21), ('spare10', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    _DRX_Config_drx_RetransmissionTimerDL._ext = []
    _DRX_Config_drx_RetransmissionTimerUL = ENUM(name='drx-RetransmissionTimerUL', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_RetransmissionTimerUL._cont = ASN1Dict([('sl0', 0), ('sl1', 1), ('sl2', 2), ('sl4', 3), ('sl6', 4), ('sl8', 5), ('sl16', 6), ('sl24', 7), ('sl33', 8), ('sl40', 9), ('sl64', 10), ('sl80', 11), ('sl96', 12), ('sl112', 13), ('sl128', 14), ('sl160', 15), ('sl320', 16), ('spare15', 17), ('spare14', 18), ('spare13', 19), ('spare12', 20), ('spare11', 21), ('spare10', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    _DRX_Config_drx_RetransmissionTimerUL._ext = []
    _DRX_Config_drx_LongCycleStartOffset = CHOICE(name='drx-LongCycleStartOffset', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms10 = INT(name='ms10', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms20 = INT(name='ms20', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms32 = INT(name='ms32', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms32._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms40 = INT(name='ms40', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms60 = INT(name='ms60', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms60._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms64 = INT(name='ms64', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms64._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms70 = INT(name='ms70', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms70._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=69)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms80 = INT(name='ms80', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms128 = INT(name='ms128', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms128._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms160 = INT(name='ms160', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms256 = INT(name='ms256', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms256._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms320 = INT(name='ms320', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms512 = INT(name='ms512', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms512._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms640 = INT(name='ms640', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms1024 = INT(name='ms1024', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms1024._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms1280 = INT(name='ms1280', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms1280._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1279)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms2048 = INT(name='ms2048', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms2048._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms2560 = INT(name='ms2560', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms2560._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2559)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms5120 = INT(name='ms5120', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms5120._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5119)], ev=None, er=[])
    __DRX_Config_drx_LongCycleStartOffset_ms10240 = INT(name='ms10240', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_drx_LongCycleStartOffset_ms10240._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10239)], ev=None, er=[])
    _DRX_Config_drx_LongCycleStartOffset._cont = ASN1Dict([
        ('ms10', __DRX_Config_drx_LongCycleStartOffset_ms10),
        ('ms20', __DRX_Config_drx_LongCycleStartOffset_ms20),
        ('ms32', __DRX_Config_drx_LongCycleStartOffset_ms32),
        ('ms40', __DRX_Config_drx_LongCycleStartOffset_ms40),
        ('ms60', __DRX_Config_drx_LongCycleStartOffset_ms60),
        ('ms64', __DRX_Config_drx_LongCycleStartOffset_ms64),
        ('ms70', __DRX_Config_drx_LongCycleStartOffset_ms70),
        ('ms80', __DRX_Config_drx_LongCycleStartOffset_ms80),
        ('ms128', __DRX_Config_drx_LongCycleStartOffset_ms128),
        ('ms160', __DRX_Config_drx_LongCycleStartOffset_ms160),
        ('ms256', __DRX_Config_drx_LongCycleStartOffset_ms256),
        ('ms320', __DRX_Config_drx_LongCycleStartOffset_ms320),
        ('ms512', __DRX_Config_drx_LongCycleStartOffset_ms512),
        ('ms640', __DRX_Config_drx_LongCycleStartOffset_ms640),
        ('ms1024', __DRX_Config_drx_LongCycleStartOffset_ms1024),
        ('ms1280', __DRX_Config_drx_LongCycleStartOffset_ms1280),
        ('ms2048', __DRX_Config_drx_LongCycleStartOffset_ms2048),
        ('ms2560', __DRX_Config_drx_LongCycleStartOffset_ms2560),
        ('ms5120', __DRX_Config_drx_LongCycleStartOffset_ms5120),
        ('ms10240', __DRX_Config_drx_LongCycleStartOffset_ms10240),
        ])
    _DRX_Config_drx_LongCycleStartOffset._ext = []
    _DRX_Config_shortDRX = SEQ(name='shortDRX', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __DRX_Config_shortDRX_drx_ShortCycle = ENUM(name='drx-ShortCycle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_shortDRX_drx_ShortCycle._cont = ASN1Dict([('ms2', 0), ('ms3', 1), ('ms4', 2), ('ms5', 3), ('ms6', 4), ('ms7', 5), ('ms8', 6), ('ms10', 7), ('ms14', 8), ('ms16', 9), ('ms20', 10), ('ms30', 11), ('ms32', 12), ('ms35', 13), ('ms40', 14), ('ms64', 15), ('ms80', 16), ('ms128', 17), ('ms160', 18), ('ms256', 19), ('ms320', 20), ('ms512', 21), ('ms640', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    __DRX_Config_shortDRX_drx_ShortCycle._ext = []
    __DRX_Config_shortDRX_drx_ShortCycleTimer = INT(name='drx-ShortCycleTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Config_shortDRX_drx_ShortCycleTimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _DRX_Config_shortDRX._cont = ASN1Dict([
        ('drx-ShortCycle', __DRX_Config_shortDRX_drx_ShortCycle),
        ('drx-ShortCycleTimer', __DRX_Config_shortDRX_drx_ShortCycleTimer),
        ])
    _DRX_Config_shortDRX._ext = []
    _DRX_Config_drx_SlotOffset = INT(name='drx-SlotOffset', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DRX_Config_drx_SlotOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    DRX_Config._cont = ASN1Dict([
        ('drx-onDurationTimer', _DRX_Config_drx_onDurationTimer),
        ('drx-InactivityTimer', _DRX_Config_drx_InactivityTimer),
        ('drx-HARQ-RTT-TimerDL', _DRX_Config_drx_HARQ_RTT_TimerDL),
        ('drx-HARQ-RTT-TimerUL', _DRX_Config_drx_HARQ_RTT_TimerUL),
        ('drx-RetransmissionTimerDL', _DRX_Config_drx_RetransmissionTimerDL),
        ('drx-RetransmissionTimerUL', _DRX_Config_drx_RetransmissionTimerUL),
        ('drx-LongCycleStartOffset', _DRX_Config_drx_LongCycleStartOffset),
        ('shortDRX', _DRX_Config_shortDRX),
        ('drx-SlotOffset', _DRX_Config_drx_SlotOffset),
        ])
    DRX_Config._ext = []
    
    #-----< PHR-Config >-----#
    PHR_Config = SEQ(name='PHR-Config', mode=MODE_TYPE)
    _PHR_Config_phr_PeriodicTimer = ENUM(name='phr-PeriodicTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_PeriodicTimer._cont = ASN1Dict([('sf10', 0), ('sf20', 1), ('sf50', 2), ('sf100', 3), ('sf200', 4), ('sf500', 5), ('sf1000', 6), ('infinity', 7)])
    _PHR_Config_phr_PeriodicTimer._ext = []
    _PHR_Config_phr_ProhibitTimer = ENUM(name='phr-ProhibitTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_ProhibitTimer._cont = ASN1Dict([('sf0', 0), ('sf10', 1), ('sf20', 2), ('sf50', 3), ('sf100', 4), ('sf200', 5), ('sf500', 6), ('sf1000', 7)])
    _PHR_Config_phr_ProhibitTimer._ext = []
    _PHR_Config_phr_Tx_PowerFactorChange = ENUM(name='phr-Tx-PowerFactorChange', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_Tx_PowerFactorChange._cont = ASN1Dict([('dB1', 0), ('dB3', 1), ('dB6', 2), ('infinity', 3)])
    _PHR_Config_phr_Tx_PowerFactorChange._ext = []
    _PHR_Config_multiplePHR = BOOL(name='multiplePHR', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_Type2PCell = BOOL(name='phr-Type2PCell', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_Type2OtherCell = BOOL(name='phr-Type2OtherCell', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_ModeOtherCG = ENUM(name='phr-ModeOtherCG', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PHR_Config_phr_ModeOtherCG._cont = ASN1Dict([('real', 0), ('virtual', 1)])
    _PHR_Config_phr_ModeOtherCG._ext = []
    PHR_Config._cont = ASN1Dict([
        ('phr-PeriodicTimer', _PHR_Config_phr_PeriodicTimer),
        ('phr-ProhibitTimer', _PHR_Config_phr_ProhibitTimer),
        ('phr-Tx-PowerFactorChange', _PHR_Config_phr_Tx_PowerFactorChange),
        ('multiplePHR', _PHR_Config_multiplePHR),
        ('phr-Type2PCell', _PHR_Config_phr_Type2PCell),
        ('phr-Type2OtherCell', _PHR_Config_phr_Type2OtherCell),
        ('phr-ModeOtherCG', _PHR_Config_phr_ModeOtherCG),
        ])
    PHR_Config._ext = []
    
    #-----< TAG-Config >-----#
    TAG_Config = SEQ(name='TAG-Config', mode=MODE_TYPE)
    _TAG_Config_tag_ToReleaseList = SEQ_OF(name='tag-ToReleaseList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TAG_Config_tag_ToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TAG-Id')))
    _TAG_Config_tag_ToReleaseList._cont = __TAG_Config_tag_ToReleaseList__item_
    _TAG_Config_tag_ToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _TAG_Config_tag_ToAddModList = SEQ_OF(name='tag-ToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TAG_Config_tag_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TAG-ToAddMod')))
    _TAG_Config_tag_ToAddModList._cont = __TAG_Config_tag_ToAddModList__item_
    _TAG_Config_tag_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    TAG_Config._cont = ASN1Dict([
        ('tag-ToReleaseList', _TAG_Config_tag_ToReleaseList),
        ('tag-ToAddModList', _TAG_Config_tag_ToAddModList),
        ])
    TAG_Config._ext = []
    
    #-----< TAG-ToAddMod >-----#
    TAG_ToAddMod = SEQ(name='TAG-ToAddMod', mode=MODE_TYPE)
    _TAG_ToAddMod_tag_Id = INT(name='tag-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TAG-Id')))
    _TAG_ToAddMod_timeAlignmentTimer = ENUM(name='timeAlignmentTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeAlignmentTimer')))
    TAG_ToAddMod._cont = ASN1Dict([
        ('tag-Id', _TAG_ToAddMod_tag_Id),
        ('timeAlignmentTimer', _TAG_ToAddMod_timeAlignmentTimer),
        ])
    TAG_ToAddMod._ext = []
    
    #-----< TAG-Id >-----#
    TAG_Id = INT(name='TAG-Id', mode=MODE_TYPE)
    TAG_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< TimeAlignmentTimer >-----#
    TimeAlignmentTimer = ENUM(name='TimeAlignmentTimer', mode=MODE_TYPE)
    TimeAlignmentTimer._cont = ASN1Dict([('ms500', 0), ('ms750', 1), ('ms1280', 2), ('ms1920', 3), ('ms2560', 4), ('ms5120', 5), ('ms10240', 6), ('infinity', 7)])
    TimeAlignmentTimer._ext = []
    
    #-----< BSR-Config >-----#
    BSR_Config = SEQ(name='BSR-Config', mode=MODE_TYPE)
    _BSR_Config_periodicBSR_Timer = ENUM(name='periodicBSR-Timer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BSR_Config_periodicBSR_Timer._cont = ASN1Dict([('sf1', 0), ('sf5', 1), ('sf10', 2), ('sf16', 3), ('sf20', 4), ('sf32', 5), ('sf40', 6), ('sf64', 7), ('sf80', 8), ('sf128', 9), ('sf160', 10), ('sf320', 11), ('sf640', 12), ('sf1280', 13), ('sf2560', 14), ('infinity', 15)])
    _BSR_Config_periodicBSR_Timer._ext = []
    _BSR_Config_retxBSR_Timer = ENUM(name='retxBSR-Timer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BSR_Config_retxBSR_Timer._cont = ASN1Dict([('sf10', 0), ('sf20', 1), ('sf40', 2), ('sf80', 3), ('sf160', 4), ('sf320', 5), ('sf640', 6), ('sf1280', 7), ('sf2560', 8), ('sf5120', 9), ('sf10240', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    _BSR_Config_retxBSR_Timer._ext = []
    _BSR_Config_logicalChannelSR_DelayTimer = ENUM(name='logicalChannelSR-DelayTimer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BSR_Config_logicalChannelSR_DelayTimer._cont = ASN1Dict([('sf20', 0), ('sf40', 1), ('sf64', 2), ('sf128', 3), ('sf512', 4), ('sf1024', 5), ('sf2560', 6), ('spare1', 7)])
    _BSR_Config_logicalChannelSR_DelayTimer._ext = []
    BSR_Config._cont = ASN1Dict([
        ('periodicBSR-Timer', _BSR_Config_periodicBSR_Timer),
        ('retxBSR-Timer', _BSR_Config_retxBSR_Timer),
        ('logicalChannelSR-DelayTimer', _BSR_Config_logicalChannelSR_DelayTimer),
        ])
    BSR_Config._ext = []
    
    #-----< MeasConfig >-----#
    MeasConfig = SEQ(name='MeasConfig', mode=MODE_TYPE)
    _MeasConfig_measObjectToRemoveList = SEQ_OF(name='measObjectToRemoveList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectToRemoveList')), opt=True)
    _MeasConfig_measObjectToAddModList = SEQ_OF(name='measObjectToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectToAddModList')), opt=True)
    _MeasConfig_reportConfigToRemoveList = SEQ_OF(name='reportConfigToRemoveList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigToRemoveList')), opt=True)
    _MeasConfig_reportConfigToAddModList = SEQ_OF(name='reportConfigToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigToAddModList')), opt=True)
    _MeasConfig_measIdToRemoveList = SEQ_OF(name='measIdToRemoveList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasIdToRemoveList')), opt=True)
    _MeasConfig_measIdToAddModList = SEQ_OF(name='measIdToAddModList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasIdToAddModList')), opt=True)
    _MeasConfig_s_MeasureConfig = CHOICE(name='s-MeasureConfig', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasConfig_s_MeasureConfig_ssb_RSRP = INT(name='ssb-RSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    __MeasConfig_s_MeasureConfig_csi_RSRP = INT(name='csi-RSRP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    _MeasConfig_s_MeasureConfig._cont = ASN1Dict([
        ('ssb-RSRP', __MeasConfig_s_MeasureConfig_ssb_RSRP),
        ('csi-RSRP', __MeasConfig_s_MeasureConfig_csi_RSRP),
        ])
    _MeasConfig_s_MeasureConfig._ext = []
    _MeasConfig_quantityConfig = SEQ(name='quantityConfig', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfig')), opt=True)
    _MeasConfig_measGapConfig = SEQ(name='measGapConfig', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasGapConfig')), opt=True)
    MeasConfig._cont = ASN1Dict([
        ('measObjectToRemoveList', _MeasConfig_measObjectToRemoveList),
        ('measObjectToAddModList', _MeasConfig_measObjectToAddModList),
        ('reportConfigToRemoveList', _MeasConfig_reportConfigToRemoveList),
        ('reportConfigToAddModList', _MeasConfig_reportConfigToAddModList),
        ('measIdToRemoveList', _MeasConfig_measIdToRemoveList),
        ('measIdToAddModList', _MeasConfig_measIdToAddModList),
        ('s-MeasureConfig', _MeasConfig_s_MeasureConfig),
        ('quantityConfig', _MeasConfig_quantityConfig),
        ('measGapConfig', _MeasConfig_measGapConfig),
        ])
    MeasConfig._ext = []
    
    #-----< MeasObjectToRemoveList >-----#
    MeasObjectToRemoveList = SEQ_OF(name='MeasObjectToRemoveList', mode=MODE_TYPE)
    _MeasObjectToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectId')))
    MeasObjectToRemoveList._cont = _MeasObjectToRemoveList__item_
    MeasObjectToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasIdToRemoveList >-----#
    MeasIdToRemoveList = SEQ_OF(name='MeasIdToRemoveList', mode=MODE_TYPE)
    _MeasIdToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasId')))
    MeasIdToRemoveList._cont = _MeasIdToRemoveList__item_
    MeasIdToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ReportConfigToRemoveList >-----#
    ReportConfigToRemoveList = SEQ_OF(name='ReportConfigToRemoveList', mode=MODE_TYPE)
    _ReportConfigToRemoveList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigId')))
    ReportConfigToRemoveList._cont = _ReportConfigToRemoveList__item_
    ReportConfigToRemoveList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasGapConfig >-----#
    MeasGapConfig = SEQ(name='MeasGapConfig', mode=MODE_TYPE)
    _MeasGapConfig_gapFR2 = CHOICE(name='gapFR2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __MeasGapConfig_gapFR2_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasGapConfig_gapFR2_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'GapConfig')))
    _MeasGapConfig_gapFR2._cont = ASN1Dict([
        ('release', __MeasGapConfig_gapFR2_release),
        ('setup', __MeasGapConfig_gapFR2_setup),
        ])
    _MeasGapConfig_gapFR2._ext = []
    MeasGapConfig._cont = ASN1Dict([
        ('gapFR2', _MeasGapConfig_gapFR2),
        ])
    MeasGapConfig._ext = []
    
    #-----< GapConfig >-----#
    GapConfig = SEQ(name='GapConfig', mode=MODE_TYPE)
    _GapConfig_gapOffset = INT(name='gapOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GapConfig_gapOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    _GapConfig_mgl = ENUM(name='mgl', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GapConfig_mgl._cont = ASN1Dict([('ms1dot5', 0), ('ms3', 1), ('ms3dot5', 2), ('ms4', 3), ('ms5dot5', 4), ('ms6', 5)])
    _GapConfig_mgl._ext = []
    _GapConfig_mgrp = ENUM(name='mgrp', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GapConfig_mgrp._cont = ASN1Dict([('ms20', 0), ('ms40', 1), ('ms80', 2), ('ms160', 3)])
    _GapConfig_mgrp._ext = []
    _GapConfig_mgta = ENUM(name='mgta', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GapConfig_mgta._cont = ASN1Dict([('ms0', 0), ('ms0dot25', 1), ('ms0dot5', 2)])
    _GapConfig_mgta._ext = []
    GapConfig._cont = ASN1Dict([
        ('gapOffset', _GapConfig_gapOffset),
        ('mgl', _GapConfig_mgl),
        ('mgrp', _GapConfig_mgrp),
        ('mgta', _GapConfig_mgta),
        ])
    GapConfig._ext = []
    
    #-----< MeasId >-----#
    MeasId = INT(name='MeasId', mode=MODE_TYPE)
    MeasId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasIdToAddModList >-----#
    MeasIdToAddModList = SEQ_OF(name='MeasIdToAddModList', mode=MODE_TYPE)
    _MeasIdToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasIdToAddMod')))
    MeasIdToAddModList._cont = _MeasIdToAddModList__item_
    MeasIdToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasIdToAddMod >-----#
    MeasIdToAddMod = SEQ(name='MeasIdToAddMod', mode=MODE_TYPE)
    _MeasIdToAddMod_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasId')))
    _MeasIdToAddMod_measObjectId = INT(name='measObjectId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectId')))
    _MeasIdToAddMod_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigId')))
    MeasIdToAddMod._cont = ASN1Dict([
        ('measId', _MeasIdToAddMod_measId),
        ('measObjectId', _MeasIdToAddMod_measObjectId),
        ('reportConfigId', _MeasIdToAddMod_reportConfigId),
        ])
    MeasIdToAddMod._ext = []
    
    #-----< MeasObjectId >-----#
    MeasObjectId = INT(name='MeasObjectId', mode=MODE_TYPE)
    MeasObjectId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasObjectNR >-----#
    MeasObjectNR = SEQ(name='MeasObjectNR', mode=MODE_TYPE)
    _MeasObjectNR_ssbFrequency = INT(name='ssbFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasObjectNR_refFreqCSI_RS = INT(name='refFreqCSI-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasObjectNR_referenceSignalConfig = SEQ(name='referenceSignalConfig', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReferenceSignalConfig')))
    _MeasObjectNR_absThreshSS_BlocksConsolidation = SEQ(name='absThreshSS-BlocksConsolidation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ThresholdNR')), opt=True)
    _MeasObjectNR_absThreshCSI_RS_Consolidation = SEQ(name='absThreshCSI-RS-Consolidation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ThresholdNR')), opt=True)
    _MeasObjectNR_nrofSS_BlocksToAverage = INT(name='nrofSS-BlocksToAverage', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasObjectNR_nrofSS_BlocksToAverage._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    _MeasObjectNR_nrofCSI_RS_ResourcesToAverage = INT(name='nrofCSI-RS-ResourcesToAverage', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasObjectNR_nrofCSI_RS_ResourcesToAverage._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=16)], ev=None, er=[])
    _MeasObjectNR_quantityConfigIndex = INT(name='quantityConfigIndex', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasObjectNR_quantityConfigIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _MeasObjectNR_offsetFreq = SEQ(name='offsetFreq', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRangeList')))
    _MeasObjectNR_cellsToRemoveList = SEQ_OF(name='cellsToRemoveList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-List')), opt=True)
    _MeasObjectNR_cellsToAddModList = SEQ_OF(name='cellsToAddModList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellsToAddModList')), opt=True)
    _MeasObjectNR_blackCellsToRemoveList = SEQ_OF(name='blackCellsToRemoveList', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-RangeIndexList')), opt=True)
    _MeasObjectNR_blackCellsToAddModList = SEQ_OF(name='blackCellsToAddModList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BlackCellsToAddModList')), opt=True)
    _MeasObjectNR_whiteCellsToRemoveList = SEQ_OF(name='whiteCellsToRemoveList', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-RangeIndexList')), opt=True)
    _MeasObjectNR_whiteCellsToAddModList = SEQ_OF(name='whiteCellsToAddModList', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'WhiteCellsToAddModList')), opt=True)
    MeasObjectNR._cont = ASN1Dict([
        ('ssbFrequency', _MeasObjectNR_ssbFrequency),
        ('refFreqCSI-RS', _MeasObjectNR_refFreqCSI_RS),
        ('referenceSignalConfig', _MeasObjectNR_referenceSignalConfig),
        ('absThreshSS-BlocksConsolidation', _MeasObjectNR_absThreshSS_BlocksConsolidation),
        ('absThreshCSI-RS-Consolidation', _MeasObjectNR_absThreshCSI_RS_Consolidation),
        ('nrofSS-BlocksToAverage', _MeasObjectNR_nrofSS_BlocksToAverage),
        ('nrofCSI-RS-ResourcesToAverage', _MeasObjectNR_nrofCSI_RS_ResourcesToAverage),
        ('quantityConfigIndex', _MeasObjectNR_quantityConfigIndex),
        ('offsetFreq', _MeasObjectNR_offsetFreq),
        ('cellsToRemoveList', _MeasObjectNR_cellsToRemoveList),
        ('cellsToAddModList', _MeasObjectNR_cellsToAddModList),
        ('blackCellsToRemoveList', _MeasObjectNR_blackCellsToRemoveList),
        ('blackCellsToAddModList', _MeasObjectNR_blackCellsToAddModList),
        ('whiteCellsToRemoveList', _MeasObjectNR_whiteCellsToRemoveList),
        ('whiteCellsToAddModList', _MeasObjectNR_whiteCellsToAddModList),
        ])
    MeasObjectNR._ext = []
    
    #-----< ReferenceSignalConfig >-----#
    ReferenceSignalConfig = SEQ(name='ReferenceSignalConfig', mode=MODE_TYPE)
    _ReferenceSignalConfig_ssb_ConfigMobility = SEQ(name='ssb-ConfigMobility', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-ConfigMobility')), opt=True)
    _ReferenceSignalConfig_csi_rs_ResourceConfigMobility = CHOICE(name='csi-rs-ResourceConfigMobility', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-ResourceConfigMobility')))
    _ReferenceSignalConfig_csi_rs_ResourceConfigMobility._cont = ASN1Dict([
        ('release', __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_release),
        ('setup', __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_setup),
        ])
    _ReferenceSignalConfig_csi_rs_ResourceConfigMobility._ext = []
    ReferenceSignalConfig._cont = ASN1Dict([
        ('ssb-ConfigMobility', _ReferenceSignalConfig_ssb_ConfigMobility),
        ('csi-rs-ResourceConfigMobility', _ReferenceSignalConfig_csi_rs_ResourceConfigMobility),
        ])
    ReferenceSignalConfig._ext = []
    
    #-----< SSB-ConfigMobility >-----#
    SSB_ConfigMobility = SEQ(name='SSB-ConfigMobility', mode=MODE_TYPE)
    _SSB_ConfigMobility_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _SSB_ConfigMobility_ssb_ToMeasure = CHOICE(name='ssb-ToMeasure', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __SSB_ConfigMobility_ssb_ToMeasure_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SSB_ConfigMobility_ssb_ToMeasure_setup = CHOICE(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-ToMeasure')))
    _SSB_ConfigMobility_ssb_ToMeasure._cont = ASN1Dict([
        ('release', __SSB_ConfigMobility_ssb_ToMeasure_release),
        ('setup', __SSB_ConfigMobility_ssb_ToMeasure_setup),
        ])
    _SSB_ConfigMobility_ssb_ToMeasure._ext = []
    _SSB_ConfigMobility_useServingCellTimingForSync = BOOL(name='useServingCellTimingForSync', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SSB_ConfigMobility_smtc1 = SEQ(name='smtc1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SSB_ConfigMobility_smtc1_periodicityAndOffset = CHOICE(name='periodicityAndOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf5 = INT(name='sf5', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf10 = INT(name='sf10', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf20 = INT(name='sf20', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf40 = INT(name='sf40', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf80 = INT(name='sf80', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf160 = INT(name='sf160', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    __SSB_ConfigMobility_smtc1_periodicityAndOffset._cont = ASN1Dict([
        ('sf5', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf5),
        ('sf10', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf10),
        ('sf20', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf20),
        ('sf40', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf40),
        ('sf80', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf80),
        ('sf160', ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf160),
        ])
    __SSB_ConfigMobility_smtc1_periodicityAndOffset._ext = []
    __SSB_ConfigMobility_smtc1_duration = ENUM(name='duration', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SSB_ConfigMobility_smtc1_duration._cont = ASN1Dict([('sf1', 0), ('sf2', 1), ('sf3', 2), ('sf4', 3), ('sf5', 4)])
    __SSB_ConfigMobility_smtc1_duration._ext = []
    _SSB_ConfigMobility_smtc1._cont = ASN1Dict([
        ('periodicityAndOffset', __SSB_ConfigMobility_smtc1_periodicityAndOffset),
        ('duration', __SSB_ConfigMobility_smtc1_duration),
        ])
    _SSB_ConfigMobility_smtc1._ext = []
    _SSB_ConfigMobility_smtc2 = SEQ(name='smtc2', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SSB_ConfigMobility_smtc2_pci_List = SEQ_OF(name='pci-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SSB_ConfigMobility_smtc2_pci_List__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    __SSB_ConfigMobility_smtc2_pci_List._cont = ___SSB_ConfigMobility_smtc2_pci_List__item_
    __SSB_ConfigMobility_smtc2_pci_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    __SSB_ConfigMobility_smtc2_periodicity = ENUM(name='periodicity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SSB_ConfigMobility_smtc2_periodicity._cont = ASN1Dict([('sf5', 0), ('sf10', 1), ('sf20', 2), ('sf40', 3), ('sf80', 4), ('sf160', 5), ('spare2', 6), ('spare1', 7)])
    __SSB_ConfigMobility_smtc2_periodicity._ext = []
    _SSB_ConfigMobility_smtc2._cont = ASN1Dict([
        ('pci-List', __SSB_ConfigMobility_smtc2_pci_List),
        ('periodicity', __SSB_ConfigMobility_smtc2_periodicity),
        ])
    _SSB_ConfigMobility_smtc2._ext = []
    _SSB_ConfigMobility_ss_RSSI_Measurement = SEQ(name='ss-RSSI-Measurement', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots = CHOICE(name='measurementSlots', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz15 = BIT_STR(name='kHz15', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz15._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz30 = BIT_STR(name='kHz30', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz30._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz60 = BIT_STR(name='kHz60', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz60._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz120 = BIT_STR(name='kHz120', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz120._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots._cont = ASN1Dict([
        ('kHz15', ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz15),
        ('kHz30', ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz30),
        ('kHz60', ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz60),
        ('kHz120', ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz120),
        ])
    __SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots._ext = []
    __SSB_ConfigMobility_ss_RSSI_Measurement_endSymbol = INT(name='endSymbol', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SSB_ConfigMobility_ss_RSSI_Measurement_endSymbol._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    _SSB_ConfigMobility_ss_RSSI_Measurement._cont = ASN1Dict([
        ('measurementSlots', __SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots),
        ('endSymbol', __SSB_ConfigMobility_ss_RSSI_Measurement_endSymbol),
        ])
    _SSB_ConfigMobility_ss_RSSI_Measurement._ext = []
    SSB_ConfigMobility._cont = ASN1Dict([
        ('subcarrierSpacing', _SSB_ConfigMobility_subcarrierSpacing),
        ('ssb-ToMeasure', _SSB_ConfigMobility_ssb_ToMeasure),
        ('useServingCellTimingForSync', _SSB_ConfigMobility_useServingCellTimingForSync),
        ('smtc1', _SSB_ConfigMobility_smtc1),
        ('smtc2', _SSB_ConfigMobility_smtc2),
        ('ss-RSSI-Measurement', _SSB_ConfigMobility_ss_RSSI_Measurement),
        ])
    SSB_ConfigMobility._ext = []
    
    #-----< CSI-RS-ResourceConfigMobility >-----#
    CSI_RS_ResourceConfigMobility = SEQ(name='CSI-RS-ResourceConfigMobility', mode=MODE_TYPE)
    _CSI_RS_ResourceConfigMobility_isServingCellMO = BOOL(name='isServingCellMO', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_ResourceConfigMobility_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility = SEQ_OF(name='csi-RS-CellList-Mobility', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-CellMobility')))
    _CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility._cont = __CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility__item_
    _CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=96)], ev=None, er=[])
    CSI_RS_ResourceConfigMobility._cont = ASN1Dict([
        ('isServingCellMO', _CSI_RS_ResourceConfigMobility_isServingCellMO),
        ('subcarrierSpacing', _CSI_RS_ResourceConfigMobility_subcarrierSpacing),
        ('csi-RS-CellList-Mobility', _CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility),
        ])
    CSI_RS_ResourceConfigMobility._ext = []
    
    #-----< CSI-RS-CellMobility >-----#
    CSI_RS_CellMobility = SEQ(name='CSI-RS-CellMobility', mode=MODE_TYPE)
    _CSI_RS_CellMobility_cellId = INT(name='cellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _CSI_RS_CellMobility_csi_rs_MeasurementBW = SEQ(name='csi-rs-MeasurementBW', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_CellMobility_csi_rs_MeasurementBW_nrofPRBs = ENUM(name='nrofPRBs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_CellMobility_csi_rs_MeasurementBW_nrofPRBs._cont = ASN1Dict([('size24', 0), ('size48', 1), ('size96', 2), ('size192', 3), ('size264', 4)])
    __CSI_RS_CellMobility_csi_rs_MeasurementBW_nrofPRBs._ext = []
    __CSI_RS_CellMobility_csi_rs_MeasurementBW_startPRB = INT(name='startPRB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_CellMobility_csi_rs_MeasurementBW_startPRB._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2169)], ev=None, er=[])
    _CSI_RS_CellMobility_csi_rs_MeasurementBW._cont = ASN1Dict([
        ('nrofPRBs', __CSI_RS_CellMobility_csi_rs_MeasurementBW_nrofPRBs),
        ('startPRB', __CSI_RS_CellMobility_csi_rs_MeasurementBW_startPRB),
        ])
    _CSI_RS_CellMobility_csi_rs_MeasurementBW._ext = []
    _CSI_RS_CellMobility_density = ENUM(name='density', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CSI_RS_CellMobility_density._cont = ASN1Dict([('d1', 0), ('d3', 1)])
    _CSI_RS_CellMobility_density._ext = []
    _CSI_RS_CellMobility_csi_rs_ResourceList_Mobility = SEQ_OF(name='csi-rs-ResourceList-Mobility', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_CellMobility_csi_rs_ResourceList_Mobility__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-Resource-Mobility')))
    _CSI_RS_CellMobility_csi_rs_ResourceList_Mobility._cont = __CSI_RS_CellMobility_csi_rs_ResourceList_Mobility__item_
    _CSI_RS_CellMobility_csi_rs_ResourceList_Mobility._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=96)], ev=None, er=[])
    CSI_RS_CellMobility._cont = ASN1Dict([
        ('cellId', _CSI_RS_CellMobility_cellId),
        ('csi-rs-MeasurementBW', _CSI_RS_CellMobility_csi_rs_MeasurementBW),
        ('density', _CSI_RS_CellMobility_density),
        ('csi-rs-ResourceList-Mobility', _CSI_RS_CellMobility_csi_rs_ResourceList_Mobility),
        ])
    CSI_RS_CellMobility._ext = []
    
    #-----< CSI-RS-Resource-Mobility >-----#
    CSI_RS_Resource_Mobility = SEQ(name='CSI-RS-Resource-Mobility', mode=MODE_TYPE)
    _CSI_RS_Resource_Mobility_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-Index')))
    _CSI_RS_Resource_Mobility_slotConfig = CHOICE(name='slotConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms4 = INT(name='ms4', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __CSI_RS_Resource_Mobility_slotConfig_ms5 = INT(name='ms5', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    __CSI_RS_Resource_Mobility_slotConfig_ms10 = INT(name='ms10', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    __CSI_RS_Resource_Mobility_slotConfig_ms20 = INT(name='ms20', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    __CSI_RS_Resource_Mobility_slotConfig_ms40 = INT(name='ms40', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_slotConfig_ms40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    _CSI_RS_Resource_Mobility_slotConfig._cont = ASN1Dict([
        ('ms4', __CSI_RS_Resource_Mobility_slotConfig_ms4),
        ('ms5', __CSI_RS_Resource_Mobility_slotConfig_ms5),
        ('ms10', __CSI_RS_Resource_Mobility_slotConfig_ms10),
        ('ms20', __CSI_RS_Resource_Mobility_slotConfig_ms20),
        ('ms40', __CSI_RS_Resource_Mobility_slotConfig_ms40),
        ])
    _CSI_RS_Resource_Mobility_slotConfig._ext = []
    _CSI_RS_Resource_Mobility_associatedSSB = SEQ(name='associatedSSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CSI_RS_Resource_Mobility_associatedSSB_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __CSI_RS_Resource_Mobility_associatedSSB_isQuasiColocated = BOOL(name='isQuasiColocated', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_Resource_Mobility_associatedSSB._cont = ASN1Dict([
        ('ssb-Index', __CSI_RS_Resource_Mobility_associatedSSB_ssb_Index),
        ('isQuasiColocated', __CSI_RS_Resource_Mobility_associatedSSB_isQuasiColocated),
        ])
    _CSI_RS_Resource_Mobility_associatedSSB._ext = []
    _CSI_RS_Resource_Mobility_frequencyDomainAllocation = CHOICE(name='frequencyDomainAllocation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row1 = BIT_STR(name='row1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row1._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row2 = BIT_STR(name='row2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row2._const_sz = ASN1Set(rv=[12], rr=[], ev=None, er=[])
    _CSI_RS_Resource_Mobility_frequencyDomainAllocation._cont = ASN1Dict([
        ('row1', __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row1),
        ('row2', __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row2),
        ])
    _CSI_RS_Resource_Mobility_frequencyDomainAllocation._ext = []
    _CSI_RS_Resource_Mobility_firstOFDMSymbolInTimeDomain = INT(name='firstOFDMSymbolInTimeDomain', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_Resource_Mobility_firstOFDMSymbolInTimeDomain._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    _CSI_RS_Resource_Mobility_sequenceGenerationConfig = INT(name='sequenceGenerationConfig', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CSI_RS_Resource_Mobility_sequenceGenerationConfig._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    CSI_RS_Resource_Mobility._cont = ASN1Dict([
        ('csi-RS-Index', _CSI_RS_Resource_Mobility_csi_RS_Index),
        ('slotConfig', _CSI_RS_Resource_Mobility_slotConfig),
        ('associatedSSB', _CSI_RS_Resource_Mobility_associatedSSB),
        ('frequencyDomainAllocation', _CSI_RS_Resource_Mobility_frequencyDomainAllocation),
        ('firstOFDMSymbolInTimeDomain', _CSI_RS_Resource_Mobility_firstOFDMSymbolInTimeDomain),
        ('sequenceGenerationConfig', _CSI_RS_Resource_Mobility_sequenceGenerationConfig),
        ])
    CSI_RS_Resource_Mobility._ext = []
    
    #-----< CSI-RS-Index >-----#
    CSI_RS_Index = INT(name='CSI-RS-Index', mode=MODE_TYPE)
    CSI_RS_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=95)], ev=None, er=[])
    
    #-----< Q-OffsetRangeList >-----#
    Q_OffsetRangeList = SEQ(name='Q-OffsetRangeList', mode=MODE_TYPE)
    _Q_OffsetRangeList_rsrpOffsetSSB = ENUM(name='rsrpOffsetSSB', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    _Q_OffsetRangeList_rsrqOffsetSSB = ENUM(name='rsrqOffsetSSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    _Q_OffsetRangeList_sinrOffsetSSB = ENUM(name='sinrOffsetSSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    _Q_OffsetRangeList_rsrpOffsetCSI_RS = ENUM(name='rsrpOffsetCSI-RS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    _Q_OffsetRangeList_rsrqOffsetCSI_RS = ENUM(name='rsrqOffsetCSI-RS', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    _Q_OffsetRangeList_sinrOffsetCSI_RS = ENUM(name='sinrOffsetCSI-RS', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRange')), default='dB0')
    Q_OffsetRangeList._cont = ASN1Dict([
        ('rsrpOffsetSSB', _Q_OffsetRangeList_rsrpOffsetSSB),
        ('rsrqOffsetSSB', _Q_OffsetRangeList_rsrqOffsetSSB),
        ('sinrOffsetSSB', _Q_OffsetRangeList_sinrOffsetSSB),
        ('rsrpOffsetCSI-RS', _Q_OffsetRangeList_rsrpOffsetCSI_RS),
        ('rsrqOffsetCSI-RS', _Q_OffsetRangeList_rsrqOffsetCSI_RS),
        ('sinrOffsetCSI-RS', _Q_OffsetRangeList_sinrOffsetCSI_RS),
        ])
    Q_OffsetRangeList._ext = []
    
    #-----< SSB-ToMeasure >-----#
    SSB_ToMeasure = CHOICE(name='SSB-ToMeasure', mode=MODE_TYPE)
    _SSB_ToMeasure_shortBitmap = BIT_STR(name='shortBitmap', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SSB_ToMeasure_shortBitmap._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _SSB_ToMeasure_mediumBitmap = BIT_STR(name='mediumBitmap', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SSB_ToMeasure_mediumBitmap._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _SSB_ToMeasure_longBitmap = BIT_STR(name='longBitmap', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SSB_ToMeasure_longBitmap._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    SSB_ToMeasure._cont = ASN1Dict([
        ('shortBitmap', _SSB_ToMeasure_shortBitmap),
        ('mediumBitmap', _SSB_ToMeasure_mediumBitmap),
        ('longBitmap', _SSB_ToMeasure_longBitmap),
        ])
    SSB_ToMeasure._ext = []
    
    #-----< ThresholdNR >-----#
    ThresholdNR = SEQ(name='ThresholdNR', mode=MODE_TYPE)
    _ThresholdNR_thresholdRSRP = INT(name='thresholdRSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    _ThresholdNR_thresholdRSRQ = INT(name='thresholdRSRQ', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRQ-Range')), opt=True)
    _ThresholdNR_thresholdSINR = INT(name='thresholdSINR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SINR-Range')), opt=True)
    ThresholdNR._cont = ASN1Dict([
        ('thresholdRSRP', _ThresholdNR_thresholdRSRP),
        ('thresholdRSRQ', _ThresholdNR_thresholdRSRQ),
        ('thresholdSINR', _ThresholdNR_thresholdSINR),
        ])
    ThresholdNR._ext = []
    
    #-----< CellsToAddModList >-----#
    CellsToAddModList = SEQ_OF(name='CellsToAddModList', mode=MODE_TYPE)
    _CellsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellsToAddMod')))
    CellsToAddModList._cont = _CellsToAddModList__item_
    CellsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CellsToAddMod >-----#
    CellsToAddMod = SEQ(name='CellsToAddMod', mode=MODE_TYPE)
    _CellsToAddMod_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _CellsToAddMod_cellIndividualOffset = SEQ(name='cellIndividualOffset', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Q-OffsetRangeList')))
    CellsToAddMod._cont = ASN1Dict([
        ('physCellId', _CellsToAddMod_physCellId),
        ('cellIndividualOffset', _CellsToAddMod_cellIndividualOffset),
        ])
    CellsToAddMod._ext = []
    
    #-----< BlackCellsToAddModList >-----#
    BlackCellsToAddModList = SEQ_OF(name='BlackCellsToAddModList', mode=MODE_TYPE)
    _BlackCellsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BlackCellsToAddMod')))
    BlackCellsToAddModList._cont = _BlackCellsToAddModList__item_
    BlackCellsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< BlackCellsToAddMod >-----#
    BlackCellsToAddMod = SEQ(name='BlackCellsToAddMod', mode=MODE_TYPE)
    _BlackCellsToAddMod_pci_RangeIndex = INT(name='pci-RangeIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-RangeIndex')))
    _BlackCellsToAddMod_pci_Range = SEQ(name='pci-Range', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-Range')))
    BlackCellsToAddMod._cont = ASN1Dict([
        ('pci-RangeIndex', _BlackCellsToAddMod_pci_RangeIndex),
        ('pci-Range', _BlackCellsToAddMod_pci_Range),
        ])
    BlackCellsToAddMod._ext = []
    
    #-----< WhiteCellsToAddModList >-----#
    WhiteCellsToAddModList = SEQ_OF(name='WhiteCellsToAddModList', mode=MODE_TYPE)
    _WhiteCellsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'WhiteCellsToAddMod')))
    WhiteCellsToAddModList._cont = _WhiteCellsToAddModList__item_
    WhiteCellsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< WhiteCellsToAddMod >-----#
    WhiteCellsToAddMod = SEQ(name='WhiteCellsToAddMod', mode=MODE_TYPE)
    _WhiteCellsToAddMod_pci_RangeIndex = INT(name='pci-RangeIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-RangeIndex')))
    _WhiteCellsToAddMod_pci_Range = SEQ(name='pci-Range', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-Range')))
    WhiteCellsToAddMod._cont = ASN1Dict([
        ('pci-RangeIndex', _WhiteCellsToAddMod_pci_RangeIndex),
        ('pci-Range', _WhiteCellsToAddMod_pci_Range),
        ])
    WhiteCellsToAddMod._ext = []
    
    #-----< MeasObjectToAddModList >-----#
    MeasObjectToAddModList = SEQ_OF(name='MeasObjectToAddModList', mode=MODE_TYPE)
    _MeasObjectToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectToAddMod')))
    MeasObjectToAddModList._cont = _MeasObjectToAddModList__item_
    MeasObjectToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< MeasObjectToAddMod >-----#
    MeasObjectToAddMod = SEQ(name='MeasObjectToAddMod', mode=MODE_TYPE)
    _MeasObjectToAddMod_measObjectId = INT(name='measObjectId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectId')))
    _MeasObjectToAddMod_measObject = CHOICE(name='measObject', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasObjectToAddMod_measObject_measObjectNR = SEQ(name='measObjectNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectNR')))
    _MeasObjectToAddMod_measObject._cont = ASN1Dict([
        ('measObjectNR', __MeasObjectToAddMod_measObject_measObjectNR),
        ])
    _MeasObjectToAddMod_measObject._ext = []
    MeasObjectToAddMod._cont = ASN1Dict([
        ('measObjectId', _MeasObjectToAddMod_measObjectId),
        ('measObject', _MeasObjectToAddMod_measObject),
        ])
    MeasObjectToAddMod._ext = []
    
    #-----< MeasResults >-----#
    MeasResults = SEQ(name='MeasResults', mode=MODE_TYPE)
    _MeasResults_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasId')))
    _MeasResults_measResultServingFreqList = SEQ_OF(name='measResultServingFreqList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultServFreqList')))
    _MeasResults_measResultNeighCells = CHOICE(name='measResultNeighCells', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __MeasResults_measResultNeighCells_measResultListNR = SEQ_OF(name='measResultListNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultListNR')))
    _MeasResults_measResultNeighCells._cont = ASN1Dict([
        ('measResultListNR', __MeasResults_measResultNeighCells_measResultListNR),
        ])
    _MeasResults_measResultNeighCells._ext = []
    MeasResults._cont = ASN1Dict([
        ('measId', _MeasResults_measId),
        ('measResultServingFreqList', _MeasResults_measResultServingFreqList),
        ('measResultNeighCells', _MeasResults_measResultNeighCells),
        ])
    MeasResults._ext = []
    
    #-----< MeasResultServFreqList >-----#
    MeasResultServFreqList = SEQ_OF(name='MeasResultServFreqList', mode=MODE_TYPE)
    _MeasResultServFreqList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultServFreq')))
    MeasResultServFreqList._cont = _MeasResultServFreqList__item_
    MeasResultServFreqList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasResultServFreq >-----#
    MeasResultServFreq = SEQ(name='MeasResultServFreq', mode=MODE_TYPE)
    _MeasResultServFreq_servFreqId = INT(name='servFreqId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _MeasResultServFreq_measResultServingCell = SEQ(name='measResultServingCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultNR')))
    _MeasResultServFreq_measResultBestNeighCell = SEQ(name='measResultBestNeighCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultNR')))
    MeasResultServFreq._cont = ASN1Dict([
        ('servFreqId', _MeasResultServFreq_servFreqId),
        ('measResultServingCell', _MeasResultServFreq_measResultServingCell),
        ('measResultBestNeighCell', _MeasResultServFreq_measResultBestNeighCell),
        ])
    MeasResultServFreq._ext = []
    
    #-----< MeasResultListNR >-----#
    MeasResultListNR = SEQ_OF(name='MeasResultListNR', mode=MODE_TYPE)
    _MeasResultListNR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultNR')))
    MeasResultListNR._cont = _MeasResultListNR__item_
    MeasResultListNR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResultNR >-----#
    MeasResultNR = SEQ(name='MeasResultNR', mode=MODE_TYPE)
    _MeasResultNR_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')), opt=True)
    _MeasResultNR_cgi_Info = ENUM(name='cgi-Info', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasResultNR_cgi_Info._cont = ASN1Dict([('ffsTypeAndValue', 0)])
    _MeasResultNR_cgi_Info._ext = []
    _MeasResultNR_measResult = SEQ(name='measResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasResultNR_measResult_cellResults = SEQ(name='cellResults', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasResultNR_measResult_cellResults_resultsSSB_Cell = SEQ(name='resultsSSB-Cell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    ___MeasResultNR_measResult_cellResults_resultsCSI_RS_Cell = SEQ(name='resultsCSI-RS-Cell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    __MeasResultNR_measResult_cellResults._cont = ASN1Dict([
        ('resultsSSB-Cell', ___MeasResultNR_measResult_cellResults_resultsSSB_Cell),
        ('resultsCSI-RS-Cell', ___MeasResultNR_measResult_cellResults_resultsCSI_RS_Cell),
        ])
    __MeasResultNR_measResult_cellResults._ext = []
    __MeasResultNR_measResult_rsIndexResults = SEQ(name='rsIndexResults', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___MeasResultNR_measResult_rsIndexResults_resultsSSB_Indexes = SEQ_OF(name='resultsSSB-Indexes', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ResultsPerSSB-IndexList')), opt=True)
    ___MeasResultNR_measResult_rsIndexResults_resultsCSI_RS_Indexes = SEQ_OF(name='resultsCSI-RS-Indexes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ResultsPerCSI-RS-IndexList')), opt=True)
    __MeasResultNR_measResult_rsIndexResults._cont = ASN1Dict([
        ('resultsSSB-Indexes', ___MeasResultNR_measResult_rsIndexResults_resultsSSB_Indexes),
        ('resultsCSI-RS-Indexes', ___MeasResultNR_measResult_rsIndexResults_resultsCSI_RS_Indexes),
        ])
    __MeasResultNR_measResult_rsIndexResults._ext = []
    _MeasResultNR_measResult._cont = ASN1Dict([
        ('cellResults', __MeasResultNR_measResult_cellResults),
        ('rsIndexResults', __MeasResultNR_measResult_rsIndexResults),
        ])
    _MeasResultNR_measResult._ext = []
    MeasResultNR._cont = ASN1Dict([
        ('physCellId', _MeasResultNR_physCellId),
        ('cgi-Info', _MeasResultNR_cgi_Info),
        ('measResult', _MeasResultNR_measResult),
        ])
    MeasResultNR._ext = []
    
    #-----< MeasQuantityResults >-----#
    MeasQuantityResults = SEQ(name='MeasQuantityResults', mode=MODE_TYPE)
    _MeasQuantityResults_rsrp = INT(name='rsrp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    _MeasQuantityResults_rsrq = INT(name='rsrq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRQ-Range')), opt=True)
    _MeasQuantityResults_sinr = INT(name='sinr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SINR-Range')), opt=True)
    MeasQuantityResults._cont = ASN1Dict([
        ('rsrp', _MeasQuantityResults_rsrp),
        ('rsrq', _MeasQuantityResults_rsrq),
        ('sinr', _MeasQuantityResults_sinr),
        ])
    MeasQuantityResults._ext = []
    
    #-----< ResultsPerSSB-IndexList >-----#
    ResultsPerSSB_IndexList = SEQ_OF(name='ResultsPerSSB-IndexList', mode=MODE_TYPE)
    _ResultsPerSSB_IndexList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ResultsPerSSB-Index')))
    ResultsPerSSB_IndexList._cont = _ResultsPerSSB_IndexList__item_
    ResultsPerSSB_IndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ResultsPerSSB-Index >-----#
    ResultsPerSSB_Index = SEQ(name='ResultsPerSSB-Index', mode=MODE_TYPE)
    _ResultsPerSSB_Index_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    _ResultsPerSSB_Index_ssb_Results = SEQ(name='ssb-Results', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    ResultsPerSSB_Index._cont = ASN1Dict([
        ('ssb-Index', _ResultsPerSSB_Index_ssb_Index),
        ('ssb-Results', _ResultsPerSSB_Index_ssb_Results),
        ])
    ResultsPerSSB_Index._ext = []
    
    #-----< ResultsPerCSI-RS-IndexList >-----#
    ResultsPerCSI_RS_IndexList = SEQ_OF(name='ResultsPerCSI-RS-IndexList', mode=MODE_TYPE)
    _ResultsPerCSI_RS_IndexList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ResultsPerCSI-RS-Index')))
    ResultsPerCSI_RS_IndexList._cont = _ResultsPerCSI_RS_IndexList__item_
    ResultsPerCSI_RS_IndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ResultsPerCSI-RS-Index >-----#
    ResultsPerCSI_RS_Index = SEQ(name='ResultsPerCSI-RS-Index', mode=MODE_TYPE)
    _ResultsPerCSI_RS_Index_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-Index')))
    _ResultsPerCSI_RS_Index_csi_RS_Results = SEQ(name='csi-RS-Results', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    ResultsPerCSI_RS_Index._cont = ASN1Dict([
        ('csi-RS-Index', _ResultsPerCSI_RS_Index_csi_RS_Index),
        ('csi-RS-Results', _ResultsPerCSI_RS_Index_csi_RS_Results),
        ])
    ResultsPerCSI_RS_Index._ext = []
    
    #-----< MeasResultSCG-Failure >-----#
    MeasResultSCG_Failure = SEQ(name='MeasResultSCG-Failure', mode=MODE_TYPE)
    _MeasResultSCG_Failure_measResultServFreqList = SEQ_OF(name='measResultServFreqList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultServFreqList2NR')))
    _MeasResultSCG_Failure_measResultNeighCells = SEQ_OF(name='measResultNeighCells', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultList2NR')))
    MeasResultSCG_Failure._cont = ASN1Dict([
        ('measResultServFreqList', _MeasResultSCG_Failure_measResultServFreqList),
        ('measResultNeighCells', _MeasResultSCG_Failure_measResultNeighCells),
        ])
    MeasResultSCG_Failure._ext = []
    
    #-----< MeasResultServFreqList2NR >-----#
    MeasResultServFreqList2NR = SEQ_OF(name='MeasResultServFreqList2NR', mode=MODE_TYPE)
    _MeasResultServFreqList2NR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultServFreq2NR')))
    MeasResultServFreqList2NR._cont = _MeasResultServFreqList2NR__item_
    MeasResultServFreqList2NR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasResultServFreq2NR >-----#
    MeasResultServFreq2NR = SEQ(name='MeasResultServFreq2NR', mode=MODE_TYPE)
    _MeasResultServFreq2NR_ssbFrequency = INT(name='ssbFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasResultServFreq2NR_refFreqCSI_RS = INT(name='refFreqCSI-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasResultServFreq2NR_measResultServingCell = SEQ(name='measResultServingCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultNR')))
    _MeasResultServFreq2NR_measResultBestNeighCell = SEQ(name='measResultBestNeighCell', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultNR')), opt=True)
    MeasResultServFreq2NR._cont = ASN1Dict([
        ('ssbFrequency', _MeasResultServFreq2NR_ssbFrequency),
        ('refFreqCSI-RS', _MeasResultServFreq2NR_refFreqCSI_RS),
        ('measResultServingCell', _MeasResultServFreq2NR_measResultServingCell),
        ('measResultBestNeighCell', _MeasResultServFreq2NR_measResultBestNeighCell),
        ])
    MeasResultServFreq2NR._ext = []
    
    #-----< MeasResultList2NR >-----#
    MeasResultList2NR = SEQ_OF(name='MeasResultList2NR', mode=MODE_TYPE)
    _MeasResultList2NR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResult2NR')))
    MeasResultList2NR._cont = _MeasResultList2NR__item_
    MeasResultList2NR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< MeasResult2NR >-----#
    MeasResult2NR = SEQ(name='MeasResult2NR', mode=MODE_TYPE)
    _MeasResult2NR_ssbFrequency = INT(name='ssbFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasResult2NR_refFreqCSI_RS = INT(name='refFreqCSI-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasResult2NR_measResultListNR = SEQ_OF(name='measResultListNR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultListNR')))
    MeasResult2NR._cont = ASN1Dict([
        ('ssbFrequency', _MeasResult2NR_ssbFrequency),
        ('refFreqCSI-RS', _MeasResult2NR_refFreqCSI_RS),
        ('measResultListNR', _MeasResult2NR_measResultListNR),
        ])
    MeasResult2NR._ext = []
    
    #-----< MeasResultCellListSFTD >-----#
    MeasResultCellListSFTD = SEQ_OF(name='MeasResultCellListSFTD', mode=MODE_TYPE)
    _MeasResultCellListSFTD__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultCellSFTD')))
    MeasResultCellListSFTD._cont = _MeasResultCellListSFTD__item_
    MeasResultCellListSFTD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< MeasResultCellSFTD >-----#
    MeasResultCellSFTD = SEQ(name='MeasResultCellSFTD', mode=MODE_TYPE)
    _MeasResultCellSFTD_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _MeasResultCellSFTD_sfn_OffsetResult = INT(name='sfn-OffsetResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasResultCellSFTD_sfn_OffsetResult._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    _MeasResultCellSFTD_frameBoundaryOffsetResult = INT(name='frameBoundaryOffsetResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasResultCellSFTD_frameBoundaryOffsetResult._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30720, ub=30719)], ev=None, er=[])
    _MeasResultCellSFTD_rsrp_Result = INT(name='rsrp-Result', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    MeasResultCellSFTD._cont = ASN1Dict([
        ('physCellId', _MeasResultCellSFTD_physCellId),
        ('sfn-OffsetResult', _MeasResultCellSFTD_sfn_OffsetResult),
        ('frameBoundaryOffsetResult', _MeasResultCellSFTD_frameBoundaryOffsetResult),
        ('rsrp-Result', _MeasResultCellSFTD_rsrp_Result),
        ])
    MeasResultCellSFTD._ext = []
    
    #-----< MultiFrequencyBandListNR >-----#
    MultiFrequencyBandListNR = SEQ_OF(name='MultiFrequencyBandListNR', mode=MODE_TYPE)
    _MultiFrequencyBandListNR__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorNR')))
    MultiFrequencyBandListNR._cont = _MultiFrequencyBandListNR__item_
    MultiFrequencyBandListNR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< NextHopChainingCount >-----#
    NextHopChainingCount = INT(name='NextHopChainingCount', mode=MODE_TYPE)
    NextHopChainingCount._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< NG-5G-S-TMSI >-----#
    NG_5G_S_TMSI = SEQ(name='NG-5G-S-TMSI', mode=MODE_TYPE)
    _NG_5G_S_TMSI_amf_SetId = BIT_STR(name='amf-SetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AMF-SetID')))
    _NG_5G_S_TMSI_amf_Pointer = BIT_STR(name='amf-Pointer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'AMF-Pointer')))
    _NG_5G_S_TMSI_ng_5g_TMSI = BIT_STR(name='ng-5g-TMSI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NG_5G_S_TMSI_ng_5g_TMSI._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    NG_5G_S_TMSI._cont = ASN1Dict([
        ('amf-SetId', _NG_5G_S_TMSI_amf_SetId),
        ('amf-Pointer', _NG_5G_S_TMSI_amf_Pointer),
        ('ng-5g-TMSI', _NG_5G_S_TMSI_ng_5g_TMSI),
        ])
    NG_5G_S_TMSI._ext = []
    
    #-----< NZP-CSI-RS-ResourceSet >-----#
    NZP_CSI_RS_ResourceSet = SEQ(name='NZP-CSI-RS-ResourceSet', mode=MODE_TYPE)
    _NZP_CSI_RS_ResourceSet_nzp_CSI_ResourceSetId = INT(name='nzp-CSI-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceSetId')))
    _NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources = SEQ_OF(name='nzp-CSI-RS-Resources', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources._cont = __NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources__item_
    _NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _NZP_CSI_RS_ResourceSet_repetition = ENUM(name='repetition', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NZP_CSI_RS_ResourceSet_repetition._cont = ASN1Dict([('on', 0), ('off', 1)])
    _NZP_CSI_RS_ResourceSet_repetition._ext = []
    _NZP_CSI_RS_ResourceSet_aperiodicTriggeringOffset = INT(name='aperiodicTriggeringOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NZP_CSI_RS_ResourceSet_aperiodicTriggeringOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    _NZP_CSI_RS_ResourceSet_trs_Info = ENUM(name='trs-Info', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NZP_CSI_RS_ResourceSet_trs_Info._cont = ASN1Dict([('true', 0)])
    _NZP_CSI_RS_ResourceSet_trs_Info._ext = []
    NZP_CSI_RS_ResourceSet._cont = ASN1Dict([
        ('nzp-CSI-ResourceSetId', _NZP_CSI_RS_ResourceSet_nzp_CSI_ResourceSetId),
        ('nzp-CSI-RS-Resources', _NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources),
        ('repetition', _NZP_CSI_RS_ResourceSet_repetition),
        ('aperiodicTriggeringOffset', _NZP_CSI_RS_ResourceSet_aperiodicTriggeringOffset),
        ('trs-Info', _NZP_CSI_RS_ResourceSet_trs_Info),
        ])
    NZP_CSI_RS_ResourceSet._ext = []
    
    #-----< NZP-CSI-RS-ResourceSetId >-----#
    NZP_CSI_RS_ResourceSetId = INT(name='NZP-CSI-RS-ResourceSetId', mode=MODE_TYPE)
    NZP_CSI_RS_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< NZP-CSI-RS-Resource >-----#
    NZP_CSI_RS_Resource = SEQ(name='NZP-CSI-RS-Resource', mode=MODE_TYPE)
    _NZP_CSI_RS_Resource_nzp_CSI_RS_ResourceId = INT(name='nzp-CSI-RS-ResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _NZP_CSI_RS_Resource_resourceMapping = SEQ(name='resourceMapping', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-ResourceMapping')))
    _NZP_CSI_RS_Resource_powerControlOffset = INT(name='powerControlOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NZP_CSI_RS_Resource_powerControlOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-8, ub=15)], ev=None, er=[])
    _NZP_CSI_RS_Resource_powerControlOffsetSS = ENUM(name='powerControlOffsetSS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _NZP_CSI_RS_Resource_powerControlOffsetSS._cont = ASN1Dict([('db-3', 0), ('db0', 1), ('db3', 2), ('db6', 3)])
    _NZP_CSI_RS_Resource_powerControlOffsetSS._ext = []
    _NZP_CSI_RS_Resource_scramblingID = INT(name='scramblingID', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ScramblingId')))
    _NZP_CSI_RS_Resource_periodicityAndOffset = CHOICE(name='periodicityAndOffset', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourcePeriodicityAndOffset')), opt=True)
    _NZP_CSI_RS_Resource_qcl_InfoPeriodicCSI_RS = INT(name='qcl-InfoPeriodicCSI-RS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-StateId')), opt=True)
    NZP_CSI_RS_Resource._cont = ASN1Dict([
        ('nzp-CSI-RS-ResourceId', _NZP_CSI_RS_Resource_nzp_CSI_RS_ResourceId),
        ('resourceMapping', _NZP_CSI_RS_Resource_resourceMapping),
        ('powerControlOffset', _NZP_CSI_RS_Resource_powerControlOffset),
        ('powerControlOffsetSS', _NZP_CSI_RS_Resource_powerControlOffsetSS),
        ('scramblingID', _NZP_CSI_RS_Resource_scramblingID),
        ('periodicityAndOffset', _NZP_CSI_RS_Resource_periodicityAndOffset),
        ('qcl-InfoPeriodicCSI-RS', _NZP_CSI_RS_Resource_qcl_InfoPeriodicCSI_RS),
        ])
    NZP_CSI_RS_Resource._ext = []
    
    #-----< NZP-CSI-RS-ResourceId >-----#
    NZP_CSI_RS_ResourceId = INT(name='NZP-CSI-RS-ResourceId', mode=MODE_TYPE)
    NZP_CSI_RS_ResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=191)], ev=None, er=[])
    
    #-----< P-Max >-----#
    P_Max = INT(name='P-Max', mode=MODE_TYPE)
    P_Max._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=33)], ev=None, er=[])
    
    #-----< PCI-List >-----#
    PCI_List = SEQ_OF(name='PCI-List', mode=MODE_TYPE)
    _PCI_List__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    PCI_List._cont = _PCI_List__item_
    PCI_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< PCI-Range >-----#
    PCI_Range = SEQ(name='PCI-Range', mode=MODE_TYPE)
    _PCI_Range_start = INT(name='start', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _PCI_Range_range = ENUM(name='range', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PCI_Range_range._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n24', 4), ('n32', 5), ('n48', 6), ('n64', 7), ('n84', 8), ('n96', 9), ('n128', 10), ('n168', 11), ('n252', 12), ('n504', 13), ('n1008', 14), ('spare1', 15)])
    _PCI_Range_range._ext = []
    PCI_Range._cont = ASN1Dict([
        ('start', _PCI_Range_start),
        ('range', _PCI_Range_range),
        ])
    PCI_Range._ext = []
    
    #-----< PCI-RangeIndex >-----#
    PCI_RangeIndex = INT(name='PCI-RangeIndex', mode=MODE_TYPE)
    PCI_RangeIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< PCI-RangeIndexList >-----#
    PCI_RangeIndexList = SEQ_OF(name='PCI-RangeIndexList', mode=MODE_TYPE)
    _PCI_RangeIndexList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PCI-RangeIndex')))
    PCI_RangeIndexList._cont = _PCI_RangeIndexList__item_
    PCI_RangeIndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< PDCCH-Config >-----#
    PDCCH_Config = SEQ(name='PDCCH-Config', mode=MODE_TYPE)
    _PDCCH_Config_controlResourceSetToAddModList = SEQ_OF(name='controlResourceSetToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_Config_controlResourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSet')))
    _PDCCH_Config_controlResourceSetToAddModList._cont = __PDCCH_Config_controlResourceSetToAddModList__item_
    _PDCCH_Config_controlResourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _PDCCH_Config_controlResourceSetToReleaseList = SEQ_OF(name='controlResourceSetToReleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_Config_controlResourceSetToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')))
    _PDCCH_Config_controlResourceSetToReleaseList._cont = __PDCCH_Config_controlResourceSetToReleaseList__item_
    _PDCCH_Config_controlResourceSetToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _PDCCH_Config_searchSpacesToAddModList = SEQ_OF(name='searchSpacesToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_Config_searchSpacesToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpace')))
    _PDCCH_Config_searchSpacesToAddModList._cont = __PDCCH_Config_searchSpacesToAddModList__item_
    _PDCCH_Config_searchSpacesToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _PDCCH_Config_searchSpacesToReleaseList = SEQ_OF(name='searchSpacesToReleaseList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_Config_searchSpacesToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')))
    _PDCCH_Config_searchSpacesToReleaseList._cont = __PDCCH_Config_searchSpacesToReleaseList__item_
    _PDCCH_Config_searchSpacesToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _PDCCH_Config_downlinkPreemption = CHOICE(name='downlinkPreemption', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDCCH_Config_downlinkPreemption_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCCH_Config_downlinkPreemption_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DownlinkPreemption')))
    _PDCCH_Config_downlinkPreemption._cont = ASN1Dict([
        ('release', __PDCCH_Config_downlinkPreemption_release),
        ('setup', __PDCCH_Config_downlinkPreemption_setup),
        ])
    _PDCCH_Config_downlinkPreemption._ext = []
    _PDCCH_Config_slotFormatIndicator = CHOICE(name='slotFormatIndicator', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDCCH_Config_slotFormatIndicator_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCCH_Config_slotFormatIndicator_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SlotFormatIndicator')))
    _PDCCH_Config_slotFormatIndicator._cont = ASN1Dict([
        ('release', __PDCCH_Config_slotFormatIndicator_release),
        ('setup', __PDCCH_Config_slotFormatIndicator_setup),
        ])
    _PDCCH_Config_slotFormatIndicator._ext = []
    _PDCCH_Config_tpc_PUSCH = CHOICE(name='tpc-PUSCH', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDCCH_Config_tpc_PUSCH_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCCH_Config_tpc_PUSCH_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-TPC-CommandConfig')))
    _PDCCH_Config_tpc_PUSCH._cont = ASN1Dict([
        ('release', __PDCCH_Config_tpc_PUSCH_release),
        ('setup', __PDCCH_Config_tpc_PUSCH_setup),
        ])
    _PDCCH_Config_tpc_PUSCH._ext = []
    _PDCCH_Config_tpc_PUCCH = CHOICE(name='tpc-PUCCH', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDCCH_Config_tpc_PUCCH_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCCH_Config_tpc_PUCCH_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-TPC-CommandConfig')))
    _PDCCH_Config_tpc_PUCCH._cont = ASN1Dict([
        ('release', __PDCCH_Config_tpc_PUCCH_release),
        ('setup', __PDCCH_Config_tpc_PUCCH_setup),
        ])
    _PDCCH_Config_tpc_PUCCH._ext = []
    PDCCH_Config._cont = ASN1Dict([
        ('controlResourceSetToAddModList', _PDCCH_Config_controlResourceSetToAddModList),
        ('controlResourceSetToReleaseList', _PDCCH_Config_controlResourceSetToReleaseList),
        ('searchSpacesToAddModList', _PDCCH_Config_searchSpacesToAddModList),
        ('searchSpacesToReleaseList', _PDCCH_Config_searchSpacesToReleaseList),
        ('downlinkPreemption', _PDCCH_Config_downlinkPreemption),
        ('slotFormatIndicator', _PDCCH_Config_slotFormatIndicator),
        ('tpc-PUSCH', _PDCCH_Config_tpc_PUSCH),
        ('tpc-PUCCH', _PDCCH_Config_tpc_PUCCH),
        ])
    PDCCH_Config._ext = []
    
    #-----< PDCCH-ConfigCommon >-----#
    PDCCH_ConfigCommon = SEQ(name='PDCCH-ConfigCommon', mode=MODE_TYPE)
    _PDCCH_ConfigCommon_commonControlResourcesSets = SEQ_OF(name='commonControlResourcesSets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_ConfigCommon_commonControlResourcesSets__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSet')))
    _PDCCH_ConfigCommon_commonControlResourcesSets._cont = __PDCCH_ConfigCommon_commonControlResourcesSets__item_
    _PDCCH_ConfigCommon_commonControlResourcesSets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PDCCH_ConfigCommon_commonSearchSpaces = SEQ_OF(name='commonSearchSpaces', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCCH_ConfigCommon_commonSearchSpaces__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpace')))
    _PDCCH_ConfigCommon_commonSearchSpaces._cont = __PDCCH_ConfigCommon_commonSearchSpaces__item_
    _PDCCH_ConfigCommon_commonSearchSpaces._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PDCCH_ConfigCommon_searchSpaceSIB1 = INT(name='searchSpaceSIB1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')), opt=True)
    _PDCCH_ConfigCommon_searchSpaceOtherSystemInformation = INT(name='searchSpaceOtherSystemInformation', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')), opt=True)
    _PDCCH_ConfigCommon_pagingSearchSpace = INT(name='pagingSearchSpace', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')), opt=True)
    _PDCCH_ConfigCommon_ra_ControlResourceSet = INT(name='ra-ControlResourceSet', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')), opt=True)
    _PDCCH_ConfigCommon_ra_SearchSpace = INT(name='ra-SearchSpace', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')), opt=True)
    PDCCH_ConfigCommon._cont = ASN1Dict([
        ('commonControlResourcesSets', _PDCCH_ConfigCommon_commonControlResourcesSets),
        ('commonSearchSpaces', _PDCCH_ConfigCommon_commonSearchSpaces),
        ('searchSpaceSIB1', _PDCCH_ConfigCommon_searchSpaceSIB1),
        ('searchSpaceOtherSystemInformation', _PDCCH_ConfigCommon_searchSpaceOtherSystemInformation),
        ('pagingSearchSpace', _PDCCH_ConfigCommon_pagingSearchSpace),
        ('ra-ControlResourceSet', _PDCCH_ConfigCommon_ra_ControlResourceSet),
        ('ra-SearchSpace', _PDCCH_ConfigCommon_ra_SearchSpace),
        ])
    PDCCH_ConfigCommon._ext = []
    
    #-----< PDCP-Config >-----#
    PDCP_Config = SEQ(name='PDCP-Config', mode=MODE_TYPE)
    _PDCP_Config_drb = SEQ(name='drb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_discardTimer = ENUM(name='discardTimer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_discardTimer._cont = ASN1Dict([('ms10', 0), ('ms20', 1), ('ms30', 2), ('ms40', 3), ('ms50', 4), ('ms60', 5), ('ms75', 6), ('ms100', 7), ('ms150', 8), ('ms200', 9), ('ms250', 10), ('ms300', 11), ('ms500', 12), ('ms750', 13), ('ms1500', 14), ('infinity', 15)])
    __PDCP_Config_drb_discardTimer._ext = []
    __PDCP_Config_drb_pdcp_SN_SizeUL = ENUM(name='pdcp-SN-SizeUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_pdcp_SN_SizeUL._cont = ASN1Dict([('len12bits', 0), ('len18bits', 1)])
    __PDCP_Config_drb_pdcp_SN_SizeUL._ext = []
    __PDCP_Config_drb_pdcp_SN_SizeDL = ENUM(name='pdcp-SN-SizeDL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_pdcp_SN_SizeDL._cont = ASN1Dict([('len12bits', 0), ('len18bits', 1)])
    __PDCP_Config_drb_pdcp_SN_SizeDL._ext = []
    __PDCP_Config_drb_headerCompression = CHOICE(name='headerCompression', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___PDCP_Config_drb_headerCompression_notUsed = NULL(name='notUsed', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_drb_headerCompression_rohc = SEQ(name='rohc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_drb_headerCompression_rohc_maxCID = INT(name='maxCID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=15)
    ____PDCP_Config_drb_headerCompression_rohc_maxCID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16383)], ev=None, er=[])
    ____PDCP_Config_drb_headerCompression_rohc_profiles = SEQ(name='profiles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0001 = BOOL(name='profile0x0001', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0002 = BOOL(name='profile0x0002', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0003 = BOOL(name='profile0x0003', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0004 = BOOL(name='profile0x0004', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0006 = BOOL(name='profile0x0006', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0101 = BOOL(name='profile0x0101', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0102 = BOOL(name='profile0x0102', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0103 = BOOL(name='profile0x0103', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0104 = BOOL(name='profile0x0104', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_drb_headerCompression_rohc_profiles._cont = ASN1Dict([
        ('profile0x0001', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0001),
        ('profile0x0002', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0002),
        ('profile0x0003', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0003),
        ('profile0x0004', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0004),
        ('profile0x0006', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0006),
        ('profile0x0101', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0101),
        ('profile0x0102', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0102),
        ('profile0x0103', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0103),
        ('profile0x0104', _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0104),
        ])
    ____PDCP_Config_drb_headerCompression_rohc_profiles._ext = []
    ____PDCP_Config_drb_headerCompression_rohc_drb_ContinueROHC = BOOL(name='drb-ContinueROHC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_drb_headerCompression_rohc._cont = ASN1Dict([
        ('maxCID', ____PDCP_Config_drb_headerCompression_rohc_maxCID),
        ('profiles', ____PDCP_Config_drb_headerCompression_rohc_profiles),
        ('drb-ContinueROHC', ____PDCP_Config_drb_headerCompression_rohc_drb_ContinueROHC),
        ])
    ___PDCP_Config_drb_headerCompression_rohc._ext = []
    ___PDCP_Config_drb_headerCompression_uplinkOnlyROHC = SEQ(name='uplinkOnlyROHC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_maxCID = INT(name='maxCID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=15)
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_maxCID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16383)], ev=None, er=[])
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles = SEQ(name='profiles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles_profile0x0006 = BOOL(name='profile0x0006', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles._cont = ASN1Dict([
        ('profile0x0006', _____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles_profile0x0006),
        ])
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles._ext = []
    ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_drb_ContinueROHC = BOOL(name='drb-ContinueROHC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_drb_headerCompression_uplinkOnlyROHC._cont = ASN1Dict([
        ('maxCID', ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_maxCID),
        ('profiles', ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles),
        ('drb-ContinueROHC', ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_drb_ContinueROHC),
        ])
    ___PDCP_Config_drb_headerCompression_uplinkOnlyROHC._ext = []
    __PDCP_Config_drb_headerCompression._cont = ASN1Dict([
        ('notUsed', ___PDCP_Config_drb_headerCompression_notUsed),
        ('rohc', ___PDCP_Config_drb_headerCompression_rohc),
        ('uplinkOnlyROHC', ___PDCP_Config_drb_headerCompression_uplinkOnlyROHC),
        ])
    __PDCP_Config_drb_headerCompression._ext = []
    __PDCP_Config_drb_integrityProtection = ENUM(name='integrityProtection', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_integrityProtection._cont = ASN1Dict([('enabled', 0)])
    __PDCP_Config_drb_integrityProtection._ext = []
    __PDCP_Config_drb_statusReportRequired = ENUM(name='statusReportRequired', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_drb_statusReportRequired._cont = ASN1Dict([('true', 0)])
    __PDCP_Config_drb_statusReportRequired._ext = []
    __PDCP_Config_drb_outOfOrderDelivery = BOOL(name='outOfOrderDelivery', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDCP_Config_drb._cont = ASN1Dict([
        ('discardTimer', __PDCP_Config_drb_discardTimer),
        ('pdcp-SN-SizeUL', __PDCP_Config_drb_pdcp_SN_SizeUL),
        ('pdcp-SN-SizeDL', __PDCP_Config_drb_pdcp_SN_SizeDL),
        ('headerCompression', __PDCP_Config_drb_headerCompression),
        ('integrityProtection', __PDCP_Config_drb_integrityProtection),
        ('statusReportRequired', __PDCP_Config_drb_statusReportRequired),
        ('outOfOrderDelivery', __PDCP_Config_drb_outOfOrderDelivery),
        ])
    _PDCP_Config_drb._ext = []
    _PDCP_Config_moreThanOneRLC = SEQ(name='moreThanOneRLC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_moreThanOneRLC_primaryPath = SEQ(name='primaryPath', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDCP_Config_moreThanOneRLC_primaryPath_cellGroup = INT(name='cellGroup', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellGroupId')), opt=True)
    ___PDCP_Config_moreThanOneRLC_primaryPath_logicalChannel = INT(name='logicalChannel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'LogicalChannelIdentity')), opt=True)
    __PDCP_Config_moreThanOneRLC_primaryPath._cont = ASN1Dict([
        ('cellGroup', ___PDCP_Config_moreThanOneRLC_primaryPath_cellGroup),
        ('logicalChannel', ___PDCP_Config_moreThanOneRLC_primaryPath_logicalChannel),
        ])
    __PDCP_Config_moreThanOneRLC_primaryPath._ext = []
    __PDCP_Config_moreThanOneRLC_ul_DataSplitThreshold = ENUM(name='ul-DataSplitThreshold', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-DataSplitThreshold')), opt=True)
    __PDCP_Config_moreThanOneRLC_pdcp_Duplication = ENUM(name='pdcp-Duplication', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDCP_Config_moreThanOneRLC_pdcp_Duplication._cont = ASN1Dict([('true', 0)])
    __PDCP_Config_moreThanOneRLC_pdcp_Duplication._ext = []
    _PDCP_Config_moreThanOneRLC._cont = ASN1Dict([
        ('primaryPath', __PDCP_Config_moreThanOneRLC_primaryPath),
        ('ul-DataSplitThreshold', __PDCP_Config_moreThanOneRLC_ul_DataSplitThreshold),
        ('pdcp-Duplication', __PDCP_Config_moreThanOneRLC_pdcp_Duplication),
        ])
    _PDCP_Config_moreThanOneRLC._ext = []
    _PDCP_Config_t_Reordering = ENUM(name='t-Reordering', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Config_t_Reordering._cont = ASN1Dict([('ms0', 0), ('ms1', 1), ('ms2', 2), ('ms4', 3), ('ms5', 4), ('ms8', 5), ('ms10', 6), ('ms15', 7), ('ms20', 8), ('ms30', 9), ('ms40', 10), ('ms50', 11), ('ms60', 12), ('ms80', 13), ('ms100', 14), ('ms120', 15), ('ms140', 16), ('ms160', 17), ('ms180', 18), ('ms200', 19), ('ms220', 20), ('ms240', 21), ('ms260', 22), ('ms280', 23), ('ms300', 24), ('ms500', 25), ('ms750', 26), ('ms1000', 27), ('ms1250', 28), ('ms1500', 29), ('ms1750', 30), ('ms2000', 31), ('ms2250', 32), ('ms2500', 33), ('ms2750', 34), ('ms3000', 35), ('spare28', 36), ('spare27', 37), ('spare26', 38), ('spare25', 39), ('spare24', 40), ('spare23', 41), ('spare22', 42), ('spare21', 43), ('spare20', 44), ('spare19', 45), ('spare18', 46), ('spare17', 47), ('spare16', 48), ('spare15', 49), ('spare14', 50), ('spare13', 51), ('spare12', 52), ('spare11', 53), ('spare10', 54), ('spare09', 55), ('spare08', 56), ('spare07', 57), ('spare06', 58), ('spare05', 59), ('spare04', 60), ('spare03', 61), ('spare02', 62), ('spare01', 63)])
    _PDCP_Config_t_Reordering._ext = []
    PDCP_Config._cont = ASN1Dict([
        ('drb', _PDCP_Config_drb),
        ('moreThanOneRLC', _PDCP_Config_moreThanOneRLC),
        ('t-Reordering', _PDCP_Config_t_Reordering),
        ])
    PDCP_Config._ext = []
    
    #-----< UL-DataSplitThreshold >-----#
    UL_DataSplitThreshold = ENUM(name='UL-DataSplitThreshold', mode=MODE_TYPE)
    UL_DataSplitThreshold._cont = ASN1Dict([('b0', 0), ('b100', 1), ('b200', 2), ('b400', 3), ('b800', 4), ('b1600', 5), ('b3200', 6), ('b6400', 7), ('b12800', 8), ('b25600', 9), ('b51200', 10), ('b102400', 11), ('b204800', 12), ('b409600', 13), ('b819200', 14), ('b1228800', 15), ('b1638400', 16), ('b2457600', 17), ('b3276800', 18), ('b4096000', 19), ('b4915200', 20), ('b5734400', 21), ('b6553600', 22), ('infinity', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    UL_DataSplitThreshold._ext = []
    
    #-----< PDSCH-Config >-----#
    PDSCH_Config = SEQ(name='PDSCH-Config', mode=MODE_TYPE)
    _PDSCH_Config_dataScramblingIdentityPDSCH = INT(name='dataScramblingIdentityPDSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_Config_dataScramblingIdentityPDSCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1007)], ev=None, er=[])
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA = CHOICE(name='dmrs-DownlinkForPDSCH-MappingTypeA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DMRS-DownlinkConfig')))
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA._cont = ASN1Dict([
        ('release', __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_release),
        ('setup', __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_setup),
        ])
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA._ext = []
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB = CHOICE(name='dmrs-DownlinkForPDSCH-MappingTypeB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DMRS-DownlinkConfig')))
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB._cont = ASN1Dict([
        ('release', __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_release),
        ('setup', __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_setup),
        ])
    _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB._ext = []
    _PDSCH_Config_tci_StatesToAddModList = SEQ_OF(name='tci-StatesToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_tci_StatesToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-State')))
    _PDSCH_Config_tci_StatesToAddModList._cont = __PDSCH_Config_tci_StatesToAddModList__item_
    _PDSCH_Config_tci_StatesToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _PDSCH_Config_tci_StatesToReleaseList = SEQ_OF(name='tci-StatesToReleaseList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_tci_StatesToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-StateId')))
    _PDSCH_Config_tci_StatesToReleaseList._cont = __PDSCH_Config_tci_StatesToReleaseList__item_
    _PDSCH_Config_tci_StatesToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _PDSCH_Config_vrb_ToPRB_Interleaver = ENUM(name='vrb-ToPRB-Interleaver', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_Config_vrb_ToPRB_Interleaver._cont = ASN1Dict([('n2', 0), ('n4', 1)])
    _PDSCH_Config_vrb_ToPRB_Interleaver._ext = []
    _PDSCH_Config_resourceAllocation = ENUM(name='resourceAllocation', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_Config_resourceAllocation._cont = ASN1Dict([('resourceAllocationType0', 0), ('resourceAllocationType1', 1), ('dynamicSwitch', 2)])
    _PDSCH_Config_resourceAllocation._ext = []
    _PDSCH_Config_pdsch_AllocationList = SEQ_OF(name='pdsch-AllocationList', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_pdsch_AllocationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-TimeDomainResourceAllocation')))
    _PDSCH_Config_pdsch_AllocationList._cont = __PDSCH_Config_pdsch_AllocationList__item_
    _PDSCH_Config_pdsch_AllocationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PDSCH_Config_pdsch_AggregationFactor = ENUM(name='pdsch-AggregationFactor', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_Config_pdsch_AggregationFactor._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n8', 2)])
    _PDSCH_Config_pdsch_AggregationFactor._ext = []
    _PDSCH_Config_rateMatchPatternToAddModList = SEQ_OF(name='rateMatchPatternToAddModList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_rateMatchPatternToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPattern')))
    _PDSCH_Config_rateMatchPatternToAddModList._cont = __PDSCH_Config_rateMatchPatternToAddModList__item_
    _PDSCH_Config_rateMatchPatternToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PDSCH_Config_rateMatchPatternToReleaseList = SEQ_OF(name='rateMatchPatternToReleaseList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_rateMatchPatternToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternId')))
    _PDSCH_Config_rateMatchPatternToReleaseList._cont = __PDSCH_Config_rateMatchPatternToReleaseList__item_
    _PDSCH_Config_rateMatchPatternToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PDSCH_Config_rateMatchPatternGroup1 = SEQ_OF(name='rateMatchPatternGroup1', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_rateMatchPatternGroup1__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternId')))
    _PDSCH_Config_rateMatchPatternGroup1._cont = __PDSCH_Config_rateMatchPatternGroup1__item_
    _PDSCH_Config_rateMatchPatternGroup1._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PDSCH_Config_rateMatchPatternGroup2 = SEQ_OF(name='rateMatchPatternGroup2', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_rateMatchPatternGroup2__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternId')))
    _PDSCH_Config_rateMatchPatternGroup2._cont = __PDSCH_Config_rateMatchPatternGroup2__item_
    _PDSCH_Config_rateMatchPatternGroup2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PDSCH_Config_rbg_Size = ENUM(name='rbg-Size', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_Config_rbg_Size._cont = ASN1Dict([('config1', 0), ('config2', 1)])
    _PDSCH_Config_rbg_Size._ext = []
    _PDSCH_Config_mcs_Table = ENUM(name='mcs-Table', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_Config_mcs_Table._cont = ASN1Dict([('qam64', 0), ('qam256', 1)])
    _PDSCH_Config_mcs_Table._ext = []
    _PDSCH_Config_maxNrofCodeWordsScheduledByDCI = ENUM(name='maxNrofCodeWordsScheduledByDCI', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_Config_maxNrofCodeWordsScheduledByDCI._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _PDSCH_Config_maxNrofCodeWordsScheduledByDCI._ext = []
    _PDSCH_Config_prb_BundlingType = CHOICE(name='prb-BundlingType', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PDSCH_Config_prb_BundlingType_static = SEQ(name='static', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDSCH_Config_prb_BundlingType_static_bundleSize = ENUM(name='bundleSize', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___PDSCH_Config_prb_BundlingType_static_bundleSize._cont = ASN1Dict([('n4', 0), ('wideband', 1)])
    ___PDSCH_Config_prb_BundlingType_static_bundleSize._ext = []
    __PDSCH_Config_prb_BundlingType_static._cont = ASN1Dict([
        ('bundleSize', ___PDSCH_Config_prb_BundlingType_static_bundleSize),
        ])
    __PDSCH_Config_prb_BundlingType_static._ext = []
    __PDSCH_Config_prb_BundlingType_dynamic = SEQ(name='dynamic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet1 = ENUM(name='bundleSizeSet1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet1._cont = ASN1Dict([('n4', 0), ('wideband', 1), ('n2-wideband', 2), ('n4-wideband', 3)])
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet1._ext = []
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet2 = ENUM(name='bundleSizeSet2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet2._cont = ASN1Dict([('n4', 0), ('wideband', 1)])
    ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet2._ext = []
    __PDSCH_Config_prb_BundlingType_dynamic._cont = ASN1Dict([
        ('bundleSizeSet1', ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet1),
        ('bundleSizeSet2', ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet2),
        ])
    __PDSCH_Config_prb_BundlingType_dynamic._ext = []
    _PDSCH_Config_prb_BundlingType._cont = ASN1Dict([
        ('static', __PDSCH_Config_prb_BundlingType_static),
        ('dynamic', __PDSCH_Config_prb_BundlingType_dynamic),
        ])
    _PDSCH_Config_prb_BundlingType._ext = []
    _PDSCH_Config_zp_CSI_RS_ResourceToAddModList = SEQ_OF(name='zp-CSI-RS-ResourceToAddModList', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_zp_CSI_RS_ResourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-Resource')))
    _PDSCH_Config_zp_CSI_RS_ResourceToAddModList._cont = __PDSCH_Config_zp_CSI_RS_ResourceToAddModList__item_
    _PDSCH_Config_zp_CSI_RS_ResourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _PDSCH_Config_zp_CSI_RS_ResourceToReleaseList = SEQ_OF(name='zp-CSI-RS-ResourceToReleaseList', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_zp_CSI_RS_ResourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceId')))
    _PDSCH_Config_zp_CSI_RS_ResourceToReleaseList._cont = __PDSCH_Config_zp_CSI_RS_ResourceToReleaseList__item_
    _PDSCH_Config_zp_CSI_RS_ResourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList = SEQ_OF(name='aperiodic-ZP-CSI-RS-ResourceSetsToAddModList', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceSet')))
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList._cont = __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList__item_
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList = SEQ_OF(name='aperiodic-ZP-CSI-RS-ResourceSetsToReleaseList', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceSetId')))
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList._cont = __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList__item_
    _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList = SEQ_OF(name='sp-ZP-CSI-RS-ResourceSetsToAddModList', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceSet')))
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList._cont = __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList__item_
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList = SEQ_OF(name='sp-ZP-CSI-RS-ResourceSetsToReleaseList', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceSetId')))
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList._cont = __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList__item_
    _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PDSCH_Config._cont = ASN1Dict([
        ('dataScramblingIdentityPDSCH', _PDSCH_Config_dataScramblingIdentityPDSCH),
        ('dmrs-DownlinkForPDSCH-MappingTypeA', _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA),
        ('dmrs-DownlinkForPDSCH-MappingTypeB', _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB),
        ('tci-StatesToAddModList', _PDSCH_Config_tci_StatesToAddModList),
        ('tci-StatesToReleaseList', _PDSCH_Config_tci_StatesToReleaseList),
        ('vrb-ToPRB-Interleaver', _PDSCH_Config_vrb_ToPRB_Interleaver),
        ('resourceAllocation', _PDSCH_Config_resourceAllocation),
        ('pdsch-AllocationList', _PDSCH_Config_pdsch_AllocationList),
        ('pdsch-AggregationFactor', _PDSCH_Config_pdsch_AggregationFactor),
        ('rateMatchPatternToAddModList', _PDSCH_Config_rateMatchPatternToAddModList),
        ('rateMatchPatternToReleaseList', _PDSCH_Config_rateMatchPatternToReleaseList),
        ('rateMatchPatternGroup1', _PDSCH_Config_rateMatchPatternGroup1),
        ('rateMatchPatternGroup2', _PDSCH_Config_rateMatchPatternGroup2),
        ('rbg-Size', _PDSCH_Config_rbg_Size),
        ('mcs-Table', _PDSCH_Config_mcs_Table),
        ('maxNrofCodeWordsScheduledByDCI', _PDSCH_Config_maxNrofCodeWordsScheduledByDCI),
        ('prb-BundlingType', _PDSCH_Config_prb_BundlingType),
        ('zp-CSI-RS-ResourceToAddModList', _PDSCH_Config_zp_CSI_RS_ResourceToAddModList),
        ('zp-CSI-RS-ResourceToReleaseList', _PDSCH_Config_zp_CSI_RS_ResourceToReleaseList),
        ('aperiodic-ZP-CSI-RS-ResourceSetsToAddModList', _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList),
        ('aperiodic-ZP-CSI-RS-ResourceSetsToReleaseList', _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList),
        ('sp-ZP-CSI-RS-ResourceSetsToAddModList', _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList),
        ('sp-ZP-CSI-RS-ResourceSetsToReleaseList', _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList),
        ])
    PDSCH_Config._ext = []
    
    #-----< PDSCH-ConfigCommon >-----#
    PDSCH_ConfigCommon = SEQ(name='PDSCH-ConfigCommon', mode=MODE_TYPE)
    _PDSCH_ConfigCommon_pdsch_AllocationList = SEQ_OF(name='pdsch-AllocationList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PDSCH_ConfigCommon_pdsch_AllocationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-TimeDomainResourceAllocation')))
    _PDSCH_ConfigCommon_pdsch_AllocationList._cont = __PDSCH_ConfigCommon_pdsch_AllocationList__item_
    _PDSCH_ConfigCommon_pdsch_AllocationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PDSCH_ConfigCommon._cont = ASN1Dict([
        ('pdsch-AllocationList', _PDSCH_ConfigCommon_pdsch_AllocationList),
        ])
    PDSCH_ConfigCommon._ext = []
    
    #-----< PDSCH-ServingCellConfig >-----#
    PDSCH_ServingCellConfig = SEQ(name='PDSCH-ServingCellConfig', mode=MODE_TYPE)
    _PDSCH_ServingCellConfig_codeBlockGroupTransmission = CHOICE(name='codeBlockGroupTransmission', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PDSCH_ServingCellConfig_codeBlockGroupTransmission_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDSCH_ServingCellConfig_codeBlockGroupTransmission_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-CodeBlockGroupTransmission')))
    _PDSCH_ServingCellConfig_codeBlockGroupTransmission._cont = ASN1Dict([
        ('release', __PDSCH_ServingCellConfig_codeBlockGroupTransmission_release),
        ('setup', __PDSCH_ServingCellConfig_codeBlockGroupTransmission_setup),
        ])
    _PDSCH_ServingCellConfig_codeBlockGroupTransmission._ext = []
    _PDSCH_ServingCellConfig_xOverhead = ENUM(name='xOverhead', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_ServingCellConfig_xOverhead._cont = ASN1Dict([('xOh6', 0), ('xOh12', 1), ('xOh18', 2)])
    _PDSCH_ServingCellConfig_xOverhead._ext = []
    _PDSCH_ServingCellConfig_nrofHARQ_ProcessesForPDSCH = ENUM(name='nrofHARQ-ProcessesForPDSCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_ServingCellConfig_nrofHARQ_ProcessesForPDSCH._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n6', 2), ('n10', 3), ('n12', 4), ('n16', 5)])
    _PDSCH_ServingCellConfig_nrofHARQ_ProcessesForPDSCH._ext = []
    _PDSCH_ServingCellConfig_pucch_Cell = INT(name='pucch-Cell', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')), opt=True)
    PDSCH_ServingCellConfig._cont = ASN1Dict([
        ('codeBlockGroupTransmission', _PDSCH_ServingCellConfig_codeBlockGroupTransmission),
        ('xOverhead', _PDSCH_ServingCellConfig_xOverhead),
        ('nrofHARQ-ProcessesForPDSCH', _PDSCH_ServingCellConfig_nrofHARQ_ProcessesForPDSCH),
        ('pucch-Cell', _PDSCH_ServingCellConfig_pucch_Cell),
        ])
    PDSCH_ServingCellConfig._ext = []
    
    #-----< PDSCH-CodeBlockGroupTransmission >-----#
    PDSCH_CodeBlockGroupTransmission = SEQ(name='PDSCH-CodeBlockGroupTransmission', mode=MODE_TYPE)
    _PDSCH_CodeBlockGroupTransmission_maxCodeBlockGroupsPerTransportBlock = ENUM(name='maxCodeBlockGroupsPerTransportBlock', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_CodeBlockGroupTransmission_maxCodeBlockGroupsPerTransportBlock._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n6', 2), ('n8', 3)])
    _PDSCH_CodeBlockGroupTransmission_maxCodeBlockGroupsPerTransportBlock._ext = []
    _PDSCH_CodeBlockGroupTransmission_codeBlockGroupFlushIndicator = BOOL(name='codeBlockGroupFlushIndicator', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PDSCH_CodeBlockGroupTransmission._cont = ASN1Dict([
        ('maxCodeBlockGroupsPerTransportBlock', _PDSCH_CodeBlockGroupTransmission_maxCodeBlockGroupsPerTransportBlock),
        ('codeBlockGroupFlushIndicator', _PDSCH_CodeBlockGroupTransmission_codeBlockGroupFlushIndicator),
        ])
    PDSCH_CodeBlockGroupTransmission._ext = []
    
    #-----< PDSCH-TimeDomainResourceAllocation >-----#
    PDSCH_TimeDomainResourceAllocation = SEQ(name='PDSCH-TimeDomainResourceAllocation', mode=MODE_TYPE)
    _PDSCH_TimeDomainResourceAllocation_k0 = INT(name='k0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDSCH_TimeDomainResourceAllocation_k0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _PDSCH_TimeDomainResourceAllocation_mappingType = ENUM(name='mappingType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_TimeDomainResourceAllocation_mappingType._cont = ASN1Dict([('typeA', 0), ('typeB', 1)])
    _PDSCH_TimeDomainResourceAllocation_mappingType._ext = []
    _PDSCH_TimeDomainResourceAllocation_startSymbolAndLength = BIT_STR(name='startSymbolAndLength', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDSCH_TimeDomainResourceAllocation_startSymbolAndLength._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    PDSCH_TimeDomainResourceAllocation._cont = ASN1Dict([
        ('k0', _PDSCH_TimeDomainResourceAllocation_k0),
        ('mappingType', _PDSCH_TimeDomainResourceAllocation_mappingType),
        ('startSymbolAndLength', _PDSCH_TimeDomainResourceAllocation_startSymbolAndLength),
        ])
    PDSCH_TimeDomainResourceAllocation._ext = []
    
    #-----< PLMN-Identity >-----#
    PLMN_Identity = SEQ(name='PLMN-Identity', mode=MODE_TYPE)
    _PLMN_Identity_mcc = SEQ_OF(name='mcc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MCC')), opt=True)
    _PLMN_Identity_mnc = SEQ_OF(name='mnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MNC')))
    PLMN_Identity._cont = ASN1Dict([
        ('mcc', _PLMN_Identity_mcc),
        ('mnc', _PLMN_Identity_mnc),
        ])
    PLMN_Identity._ext = []
    
    #-----< MCC >-----#
    MCC = SEQ_OF(name='MCC', mode=MODE_TYPE)
    _MCC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MCC-MNC-Digit')))
    MCC._cont = _MCC__item_
    MCC._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< MNC >-----#
    MNC = SEQ_OF(name='MNC', mode=MODE_TYPE)
    _MNC__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MCC-MNC-Digit')))
    MNC._cont = _MNC__item_
    MNC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=3)], ev=None, er=[])
    
    #-----< MCC-MNC-Digit >-----#
    MCC_MNC_Digit = INT(name='MCC-MNC-Digit', mode=MODE_TYPE)
    MCC_MNC_Digit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    
    #-----< PhysCellId >-----#
    PhysCellId = INT(name='PhysCellId', mode=MODE_TYPE)
    PhysCellId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1007)], ev=None, er=[])
    
    #-----< PRB-Id >-----#
    PRB_Id = INT(name='PRB-Id', mode=MODE_TYPE)
    PRB_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=274)], ev=None, er=[])
    
    #-----< PTRS-DownlinkConfig >-----#
    PTRS_DownlinkConfig = SEQ(name='PTRS-DownlinkConfig', mode=MODE_TYPE)
    _PTRS_DownlinkConfig_frequencyDensity = SEQ_OF(name='frequencyDensity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PTRS_DownlinkConfig_frequencyDensity__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PTRS_DownlinkConfig_frequencyDensity__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=276)], ev=None, er=[])
    _PTRS_DownlinkConfig_frequencyDensity._cont = __PTRS_DownlinkConfig_frequencyDensity__item_
    _PTRS_DownlinkConfig_frequencyDensity._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _PTRS_DownlinkConfig_timeDensity = SEQ_OF(name='timeDensity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PTRS_DownlinkConfig_timeDensity__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PTRS_DownlinkConfig_timeDensity__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=29)], ev=None, er=[])
    _PTRS_DownlinkConfig_timeDensity._cont = __PTRS_DownlinkConfig_timeDensity__item_
    _PTRS_DownlinkConfig_timeDensity._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _PTRS_DownlinkConfig_epre_RatioPort1 = INT(name='epre-RatioPort1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTRS_DownlinkConfig_epre_RatioPort1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _PTRS_DownlinkConfig_epre_RatioPort2 = SEQ_OF(name='epre-RatioPort2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PTRS_DownlinkConfig_epre_RatioPort2__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PTRS_DownlinkConfig_epre_RatioPort2__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _PTRS_DownlinkConfig_epre_RatioPort2._cont = __PTRS_DownlinkConfig_epre_RatioPort2__item_
    _PTRS_DownlinkConfig_epre_RatioPort2._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PTRS_DownlinkConfig_resourceElementOffset = ENUM(name='resourceElementOffset', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PTRS_DownlinkConfig_resourceElementOffset._cont = ASN1Dict([('offset01', 0), ('offset10', 1), ('offset11', 2)])
    _PTRS_DownlinkConfig_resourceElementOffset._ext = []
    PTRS_DownlinkConfig._cont = ASN1Dict([
        ('frequencyDensity', _PTRS_DownlinkConfig_frequencyDensity),
        ('timeDensity', _PTRS_DownlinkConfig_timeDensity),
        ('epre-RatioPort1', _PTRS_DownlinkConfig_epre_RatioPort1),
        ('epre-RatioPort2', _PTRS_DownlinkConfig_epre_RatioPort2),
        ('resourceElementOffset', _PTRS_DownlinkConfig_resourceElementOffset),
        ])
    PTRS_DownlinkConfig._ext = []
    
    #-----< PTRS-UplinkConfig >-----#
    PTRS_UplinkConfig = SEQ(name='PTRS-UplinkConfig', mode=MODE_TYPE)
    _PTRS_UplinkConfig_modeSpecificParameters = CHOICE(name='modeSpecificParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM = SEQ(name='cp-OFDM', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity = SEQ_OF(name='frequencyDensity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity__item_ = INT(name='_item_', mode=MODE_TYPE)
    ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=276)], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity._cont = ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity__item_
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity = SEQ_OF(name='timeDensity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity__item_ = INT(name='_item_', mode=MODE_TYPE)
    ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=29)], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity._cont = ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity__item_
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_maxNrofPorts = ENUM(name='maxNrofPorts', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_maxNrofPorts._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_maxNrofPorts._ext = []
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_resourceElementOffset = ENUM(name='resourceElementOffset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_resourceElementOffset._cont = ASN1Dict([('offset01', 0), ('offset10', 1), ('offset11', 2)])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_resourceElementOffset._ext = []
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_ptrs_Power = ENUM(name='ptrs-Power', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_ptrs_Power._cont = ASN1Dict([('p00', 0), ('p01', 1), ('p10', 2), ('p11', 3)])
    ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_ptrs_Power._ext = []
    __PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM._cont = ASN1Dict([
        ('frequencyDensity', ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity),
        ('timeDensity', ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity),
        ('maxNrofPorts', ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_maxNrofPorts),
        ('resourceElementOffset', ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_resourceElementOffset),
        ('ptrs-Power', ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_ptrs_Power),
        ])
    __PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM._ext = []
    __PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM = SEQ(name='dft-S-OFDM', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity = SEQ_OF(name='sampleDensity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity__item_ = INT(name='_item_', mode=MODE_TYPE)
    ____PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=276)], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity._cont = ____PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity__item_
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_timeDensity = ENUM(name='timeDensity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_timeDensity._cont = ASN1Dict([('d2', 0)])
    ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_timeDensity._ext = []
    __PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM._cont = ASN1Dict([
        ('sampleDensity', ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity),
        ('timeDensity', ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_timeDensity),
        ])
    __PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM._ext = []
    _PTRS_UplinkConfig_modeSpecificParameters._cont = ASN1Dict([
        ('cp-OFDM', __PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM),
        ('dft-S-OFDM', __PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM),
        ])
    _PTRS_UplinkConfig_modeSpecificParameters._ext = []
    PTRS_UplinkConfig._cont = ASN1Dict([
        ('modeSpecificParameters', _PTRS_UplinkConfig_modeSpecificParameters),
        ])
    PTRS_UplinkConfig._ext = []
    
    #-----< PUCCH-Config >-----#
    PUCCH_Config = SEQ(name='PUCCH-Config', mode=MODE_TYPE)
    _PUCCH_Config_resourceSetToAddModList = SEQ_OF(name='resourceSetToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_resourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceSet')))
    _PUCCH_Config_resourceSetToAddModList._cont = __PUCCH_Config_resourceSetToAddModList__item_
    _PUCCH_Config_resourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUCCH_Config_resourceSetToReleaseList = SEQ_OF(name='resourceSetToReleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_resourceSetToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceSetId')))
    _PUCCH_Config_resourceSetToReleaseList._cont = __PUCCH_Config_resourceSetToReleaseList__item_
    _PUCCH_Config_resourceSetToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUCCH_Config_resourceToAddModList = SEQ_OF(name='resourceToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_resourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-Resource')))
    _PUCCH_Config_resourceToAddModList._cont = __PUCCH_Config_resourceToAddModList__item_
    _PUCCH_Config_resourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _PUCCH_Config_resourceToReleaseList = SEQ_OF(name='resourceToReleaseList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_resourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceId')))
    _PUCCH_Config_resourceToReleaseList._cont = __PUCCH_Config_resourceToReleaseList__item_
    _PUCCH_Config_resourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _PUCCH_Config_format1 = CHOICE(name='format1', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUCCH_Config_format1_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_Config_format1_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-FormatConfig')))
    _PUCCH_Config_format1._cont = ASN1Dict([
        ('release', __PUCCH_Config_format1_release),
        ('setup', __PUCCH_Config_format1_setup),
        ])
    _PUCCH_Config_format1._ext = []
    _PUCCH_Config_format2 = CHOICE(name='format2', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUCCH_Config_format2_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_Config_format2_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-FormatConfig')))
    _PUCCH_Config_format2._cont = ASN1Dict([
        ('release', __PUCCH_Config_format2_release),
        ('setup', __PUCCH_Config_format2_setup),
        ])
    _PUCCH_Config_format2._ext = []
    _PUCCH_Config_format3 = CHOICE(name='format3', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUCCH_Config_format3_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_Config_format3_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-FormatConfig')))
    _PUCCH_Config_format3._cont = ASN1Dict([
        ('release', __PUCCH_Config_format3_release),
        ('setup', __PUCCH_Config_format3_setup),
        ])
    _PUCCH_Config_format3._ext = []
    _PUCCH_Config_format4 = CHOICE(name='format4', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUCCH_Config_format4_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_Config_format4_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-FormatConfig')))
    _PUCCH_Config_format4._cont = ASN1Dict([
        ('release', __PUCCH_Config_format4_release),
        ('setup', __PUCCH_Config_format4_setup),
        ])
    _PUCCH_Config_format4._ext = []
    _PUCCH_Config_schedulingRequestResourceToAddModList = SEQ_OF(name='schedulingRequestResourceToAddModList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_schedulingRequestResourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestResourceConfig')))
    _PUCCH_Config_schedulingRequestResourceToAddModList._cont = __PUCCH_Config_schedulingRequestResourceToAddModList__item_
    _PUCCH_Config_schedulingRequestResourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PUCCH_Config_schedulingRequestResourceToReleaseList = SEQ_OF(name='schedulingRequestResourceToReleaseList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_schedulingRequestResourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestResourceId')))
    _PUCCH_Config_schedulingRequestResourceToReleaseList._cont = __PUCCH_Config_schedulingRequestResourceToReleaseList__item_
    _PUCCH_Config_schedulingRequestResourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PUCCH_Config_multi_CSI_PUCCH_ResourceList = SEQ_OF(name='multi-CSI-PUCCH-ResourceList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_multi_CSI_PUCCH_ResourceList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceId')))
    _PUCCH_Config_multi_CSI_PUCCH_ResourceList._cont = __PUCCH_Config_multi_CSI_PUCCH_ResourceList__item_
    _PUCCH_Config_multi_CSI_PUCCH_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PUCCH_Config_dl_DataToUL_ACK = SEQ_OF(name='dl-DataToUL-ACK', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_dl_DataToUL_ACK__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PUCCH_Config_dl_DataToUL_ACK__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _PUCCH_Config_dl_DataToUL_ACK._cont = __PUCCH_Config_dl_DataToUL_ACK__item_
    _PUCCH_Config_dl_DataToUL_ACK._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _PUCCH_Config_spatialRelationInfoToAddModList = SEQ_OF(name='spatialRelationInfoToAddModList', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_spatialRelationInfoToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-SpatialRelationInfo')))
    _PUCCH_Config_spatialRelationInfoToAddModList._cont = __PUCCH_Config_spatialRelationInfoToAddModList__item_
    _PUCCH_Config_spatialRelationInfoToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PUCCH_Config_spatialRelationInfoToReleaseList = SEQ_OF(name='spatialRelationInfoToReleaseList', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_Config_spatialRelationInfoToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-SpatialRelationInfoId')))
    _PUCCH_Config_spatialRelationInfoToReleaseList._cont = __PUCCH_Config_spatialRelationInfoToReleaseList__item_
    _PUCCH_Config_spatialRelationInfoToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PUCCH_Config_pucch_PowerControl = SEQ(name='pucch-PowerControl', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-PowerControl')), opt=True)
    PUCCH_Config._cont = ASN1Dict([
        ('resourceSetToAddModList', _PUCCH_Config_resourceSetToAddModList),
        ('resourceSetToReleaseList', _PUCCH_Config_resourceSetToReleaseList),
        ('resourceToAddModList', _PUCCH_Config_resourceToAddModList),
        ('resourceToReleaseList', _PUCCH_Config_resourceToReleaseList),
        ('format1', _PUCCH_Config_format1),
        ('format2', _PUCCH_Config_format2),
        ('format3', _PUCCH_Config_format3),
        ('format4', _PUCCH_Config_format4),
        ('schedulingRequestResourceToAddModList', _PUCCH_Config_schedulingRequestResourceToAddModList),
        ('schedulingRequestResourceToReleaseList', _PUCCH_Config_schedulingRequestResourceToReleaseList),
        ('multi-CSI-PUCCH-ResourceList', _PUCCH_Config_multi_CSI_PUCCH_ResourceList),
        ('dl-DataToUL-ACK', _PUCCH_Config_dl_DataToUL_ACK),
        ('spatialRelationInfoToAddModList', _PUCCH_Config_spatialRelationInfoToAddModList),
        ('spatialRelationInfoToReleaseList', _PUCCH_Config_spatialRelationInfoToReleaseList),
        ('pucch-PowerControl', _PUCCH_Config_pucch_PowerControl),
        ])
    PUCCH_Config._ext = []
    
    #-----< PUCCH-FormatConfig >-----#
    PUCCH_FormatConfig = SEQ(name='PUCCH-FormatConfig', mode=MODE_TYPE)
    _PUCCH_FormatConfig_interslotFrequencyHopping = ENUM(name='interslotFrequencyHopping', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_FormatConfig_interslotFrequencyHopping._cont = ASN1Dict([('enabled', 0)])
    _PUCCH_FormatConfig_interslotFrequencyHopping._ext = []
    _PUCCH_FormatConfig_additionalDMRS = ENUM(name='additionalDMRS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_FormatConfig_additionalDMRS._cont = ASN1Dict([('true', 0)])
    _PUCCH_FormatConfig_additionalDMRS._ext = []
    _PUCCH_FormatConfig_maxCodeRate = ENUM(name='maxCodeRate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-MaxCodeRate')), opt=True)
    _PUCCH_FormatConfig_nrofSlots = ENUM(name='nrofSlots', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_FormatConfig_nrofSlots._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n8', 2)])
    _PUCCH_FormatConfig_nrofSlots._ext = []
    _PUCCH_FormatConfig_pi2PBSK = ENUM(name='pi2PBSK', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_FormatConfig_pi2PBSK._cont = ASN1Dict([('enabled', 0)])
    _PUCCH_FormatConfig_pi2PBSK._ext = []
    _PUCCH_FormatConfig_simultaneousHARQ_ACK_CSI = ENUM(name='simultaneousHARQ-ACK-CSI', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_FormatConfig_simultaneousHARQ_ACK_CSI._cont = ASN1Dict([('true', 0)])
    _PUCCH_FormatConfig_simultaneousHARQ_ACK_CSI._ext = []
    PUCCH_FormatConfig._cont = ASN1Dict([
        ('interslotFrequencyHopping', _PUCCH_FormatConfig_interslotFrequencyHopping),
        ('additionalDMRS', _PUCCH_FormatConfig_additionalDMRS),
        ('maxCodeRate', _PUCCH_FormatConfig_maxCodeRate),
        ('nrofSlots', _PUCCH_FormatConfig_nrofSlots),
        ('pi2PBSK', _PUCCH_FormatConfig_pi2PBSK),
        ('simultaneousHARQ-ACK-CSI', _PUCCH_FormatConfig_simultaneousHARQ_ACK_CSI),
        ])
    PUCCH_FormatConfig._ext = []
    
    #-----< PUCCH-MaxCodeRate >-----#
    PUCCH_MaxCodeRate = ENUM(name='PUCCH-MaxCodeRate', mode=MODE_TYPE)
    PUCCH_MaxCodeRate._cont = ASN1Dict([('zeroDot08', 0), ('zeroDot15', 1), ('zeroDot25', 2), ('zeroDot35', 3), ('zeroDot45', 4), ('zeroDot60', 5), ('zeroDot80', 6)])
    PUCCH_MaxCodeRate._ext = []
    
    #-----< PUCCH-SpatialRelationInfo >-----#
    PUCCH_SpatialRelationInfo = SEQ(name='PUCCH-SpatialRelationInfo', mode=MODE_TYPE)
    _PUCCH_SpatialRelationInfo_pucch_SpatialRelationInfoId = INT(name='pucch-SpatialRelationInfoId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-SpatialRelationInfoId')))
    _PUCCH_SpatialRelationInfo_referenceSignal = CHOICE(name='referenceSignal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PUCCH_SpatialRelationInfo_referenceSignal_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __PUCCH_SpatialRelationInfo_referenceSignal_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    __PUCCH_SpatialRelationInfo_referenceSignal_srs = INT(name='srs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceId')))
    _PUCCH_SpatialRelationInfo_referenceSignal._cont = ASN1Dict([
        ('ssb-Index', __PUCCH_SpatialRelationInfo_referenceSignal_ssb_Index),
        ('csi-RS-Index', __PUCCH_SpatialRelationInfo_referenceSignal_csi_RS_Index),
        ('srs', __PUCCH_SpatialRelationInfo_referenceSignal_srs),
        ])
    _PUCCH_SpatialRelationInfo_referenceSignal._ext = []
    _PUCCH_SpatialRelationInfo_pucch_PathlossReferenceRS_Id = INT(name='pucch-PathlossReferenceRS-Id', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-PathlossReferenceRS-Id')))
    _PUCCH_SpatialRelationInfo_p0_PUCCH_Id = INT(name='p0-PUCCH-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUCCH-Id')))
    _PUCCH_SpatialRelationInfo_closedLoopIndex = ENUM(name='closedLoopIndex', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_SpatialRelationInfo_closedLoopIndex._cont = ASN1Dict([('i0', 0), ('i1', 1)])
    _PUCCH_SpatialRelationInfo_closedLoopIndex._ext = []
    PUCCH_SpatialRelationInfo._cont = ASN1Dict([
        ('pucch-SpatialRelationInfoId', _PUCCH_SpatialRelationInfo_pucch_SpatialRelationInfoId),
        ('referenceSignal', _PUCCH_SpatialRelationInfo_referenceSignal),
        ('pucch-PathlossReferenceRS-Id', _PUCCH_SpatialRelationInfo_pucch_PathlossReferenceRS_Id),
        ('p0-PUCCH-Id', _PUCCH_SpatialRelationInfo_p0_PUCCH_Id),
        ('closedLoopIndex', _PUCCH_SpatialRelationInfo_closedLoopIndex),
        ])
    PUCCH_SpatialRelationInfo._ext = []
    
    #-----< PUCCH-SpatialRelationInfoId >-----#
    PUCCH_SpatialRelationInfoId = INT(name='PUCCH-SpatialRelationInfoId', mode=MODE_TYPE)
    PUCCH_SpatialRelationInfoId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< PUCCH-ResourceSet >-----#
    PUCCH_ResourceSet = SEQ(name='PUCCH-ResourceSet', mode=MODE_TYPE)
    _PUCCH_ResourceSet_pucch_ResourceSetId = INT(name='pucch-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceSetId')))
    _PUCCH_ResourceSet_resources = SEQ_OF(name='resources', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUCCH_ResourceSet_resources__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceId')))
    _PUCCH_ResourceSet_resources._cont = __PUCCH_ResourceSet_resources__item_
    _PUCCH_ResourceSet_resources._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=8, ub=32)], ev=None, er=[])
    _PUCCH_ResourceSet_maxPayloadMinus1 = INT(name='maxPayloadMinus1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_ResourceSet_maxPayloadMinus1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=256)], ev=None, er=[])
    PUCCH_ResourceSet._cont = ASN1Dict([
        ('pucch-ResourceSetId', _PUCCH_ResourceSet_pucch_ResourceSetId),
        ('resources', _PUCCH_ResourceSet_resources),
        ('maxPayloadMinus1', _PUCCH_ResourceSet_maxPayloadMinus1),
        ])
    PUCCH_ResourceSet._ext = []
    
    #-----< PUCCH-ResourceSetId >-----#
    PUCCH_ResourceSetId = INT(name='PUCCH-ResourceSetId', mode=MODE_TYPE)
    PUCCH_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< PUCCH-Resource >-----#
    PUCCH_Resource = SEQ(name='PUCCH-Resource', mode=MODE_TYPE)
    _PUCCH_Resource_pucch_ResourceId = INT(name='pucch-ResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceId')))
    _PUCCH_Resource_startingPRB = INT(name='startingPRB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PRB-Id')))
    _PUCCH_Resource_intraSlotFrequencyHopping = ENUM(name='intraSlotFrequencyHopping', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_Resource_intraSlotFrequencyHopping._cont = ASN1Dict([('enabled', 0)])
    _PUCCH_Resource_intraSlotFrequencyHopping._ext = []
    _PUCCH_Resource_secondHopPRB = INT(name='secondHopPRB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PRB-Id')), opt=True)
    _PUCCH_Resource_format = CHOICE(name='format', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PUCCH_Resource_format_format0 = SEQ(name='format0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-format0')))
    __PUCCH_Resource_format_format1 = SEQ(name='format1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-format1')))
    __PUCCH_Resource_format_format2 = SEQ(name='format2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-format2')))
    __PUCCH_Resource_format_format3 = SEQ(name='format3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-format3')))
    __PUCCH_Resource_format_format4 = SEQ(name='format4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-format4')))
    _PUCCH_Resource_format._cont = ASN1Dict([
        ('format0', __PUCCH_Resource_format_format0),
        ('format1', __PUCCH_Resource_format_format1),
        ('format2', __PUCCH_Resource_format_format2),
        ('format3', __PUCCH_Resource_format_format3),
        ('format4', __PUCCH_Resource_format_format4),
        ])
    _PUCCH_Resource_format._ext = []
    PUCCH_Resource._cont = ASN1Dict([
        ('pucch-ResourceId', _PUCCH_Resource_pucch_ResourceId),
        ('startingPRB', _PUCCH_Resource_startingPRB),
        ('intraSlotFrequencyHopping', _PUCCH_Resource_intraSlotFrequencyHopping),
        ('secondHopPRB', _PUCCH_Resource_secondHopPRB),
        ('format', _PUCCH_Resource_format),
        ])
    PUCCH_Resource._ext = []
    
    #-----< PUCCH-ResourceId >-----#
    PUCCH_ResourceId = INT(name='PUCCH-ResourceId', mode=MODE_TYPE)
    PUCCH_ResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< PUCCH-format0 >-----#
    PUCCH_format0 = SEQ(name='PUCCH-format0', mode=MODE_TYPE)
    _PUCCH_format0_initialCyclicShift = INT(name='initialCyclicShift', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format0_initialCyclicShift._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11)], ev=None, er=[])
    _PUCCH_format0_nrofSymbols = INT(name='nrofSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format0_nrofSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PUCCH_format0_startingSymbolIndex = INT(name='startingSymbolIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format0_startingSymbolIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    PUCCH_format0._cont = ASN1Dict([
        ('initialCyclicShift', _PUCCH_format0_initialCyclicShift),
        ('nrofSymbols', _PUCCH_format0_nrofSymbols),
        ('startingSymbolIndex', _PUCCH_format0_startingSymbolIndex),
        ])
    PUCCH_format0._ext = []
    
    #-----< PUCCH-format1 >-----#
    PUCCH_format1 = SEQ(name='PUCCH-format1', mode=MODE_TYPE)
    _PUCCH_format1_initialCyclicShift = INT(name='initialCyclicShift', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format1_initialCyclicShift._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11)], ev=None, er=[])
    _PUCCH_format1_nrofSymbols = INT(name='nrofSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format1_nrofSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=14)], ev=None, er=[])
    _PUCCH_format1_startingSymbolIndex = INT(name='startingSymbolIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format1_startingSymbolIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    _PUCCH_format1_timeDomainOCC = INT(name='timeDomainOCC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format1_timeDomainOCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=6)], ev=None, er=[])
    PUCCH_format1._cont = ASN1Dict([
        ('initialCyclicShift', _PUCCH_format1_initialCyclicShift),
        ('nrofSymbols', _PUCCH_format1_nrofSymbols),
        ('startingSymbolIndex', _PUCCH_format1_startingSymbolIndex),
        ('timeDomainOCC', _PUCCH_format1_timeDomainOCC),
        ])
    PUCCH_format1._ext = []
    
    #-----< PUCCH-format2 >-----#
    PUCCH_format2 = SEQ(name='PUCCH-format2', mode=MODE_TYPE)
    _PUCCH_format2_nrofPRBs = INT(name='nrofPRBs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format2_nrofPRBs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PUCCH_format2_nrofSymbols = INT(name='nrofSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format2_nrofSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _PUCCH_format2_startingSymbolIndex = INT(name='startingSymbolIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format2_startingSymbolIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    PUCCH_format2._cont = ASN1Dict([
        ('nrofPRBs', _PUCCH_format2_nrofPRBs),
        ('nrofSymbols', _PUCCH_format2_nrofSymbols),
        ('startingSymbolIndex', _PUCCH_format2_startingSymbolIndex),
        ])
    PUCCH_format2._ext = []
    
    #-----< PUCCH-format3 >-----#
    PUCCH_format3 = SEQ(name='PUCCH-format3', mode=MODE_TYPE)
    _PUCCH_format3_nrofPRBs = INT(name='nrofPRBs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format3_nrofPRBs._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PUCCH_format3_nrofSymbols = INT(name='nrofSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format3_nrofSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=14)], ev=None, er=[])
    _PUCCH_format3_startingSymbolIndex = INT(name='startingSymbolIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format3_startingSymbolIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    PUCCH_format3._cont = ASN1Dict([
        ('nrofPRBs', _PUCCH_format3_nrofPRBs),
        ('nrofSymbols', _PUCCH_format3_nrofSymbols),
        ('startingSymbolIndex', _PUCCH_format3_startingSymbolIndex),
        ])
    PUCCH_format3._ext = []
    
    #-----< PUCCH-format4 >-----#
    PUCCH_format4 = SEQ(name='PUCCH-format4', mode=MODE_TYPE)
    _PUCCH_format4_nrofSymbols = INT(name='nrofSymbols', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format4_nrofSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=4, ub=14)], ev=None, er=[])
    _PUCCH_format4_occ_Length = ENUM(name='occ-Length', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format4_occ_Length._cont = ASN1Dict([('n2', 0), ('n4', 1)])
    _PUCCH_format4_occ_Length._ext = []
    _PUCCH_format4_occ_Index = ENUM(name='occ-Index', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format4_occ_Index._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3)])
    _PUCCH_format4_occ_Index._ext = []
    _PUCCH_format4_startingSymbolIndex = INT(name='startingSymbolIndex', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_format4_startingSymbolIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10)], ev=None, er=[])
    PUCCH_format4._cont = ASN1Dict([
        ('nrofSymbols', _PUCCH_format4_nrofSymbols),
        ('occ-Length', _PUCCH_format4_occ_Length),
        ('occ-Index', _PUCCH_format4_occ_Index),
        ('startingSymbolIndex', _PUCCH_format4_startingSymbolIndex),
        ])
    PUCCH_format4._ext = []
    
    #-----< PUCCH-ConfigCommon >-----#
    PUCCH_ConfigCommon = SEQ(name='PUCCH-ConfigCommon', mode=MODE_TYPE)
    _PUCCH_ConfigCommon_pucch_ResourceCommon = BIT_STR(name='pucch-ResourceCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_ConfigCommon_pucch_ResourceCommon._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    _PUCCH_ConfigCommon_pucch_GroupHopping = ENUM(name='pucch-GroupHopping', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUCCH_ConfigCommon_pucch_GroupHopping._cont = ASN1Dict([('neither', 0), ('enable', 1), ('disable', 2)])
    _PUCCH_ConfigCommon_pucch_GroupHopping._ext = []
    _PUCCH_ConfigCommon_hoppingId = BIT_STR(name='hoppingId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_ConfigCommon_hoppingId._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    _PUCCH_ConfigCommon_p0_nominal = INT(name='p0-nominal', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_ConfigCommon_p0_nominal._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-202, ub=24)], ev=None, er=[])
    PUCCH_ConfigCommon._cont = ASN1Dict([
        ('pucch-ResourceCommon', _PUCCH_ConfigCommon_pucch_ResourceCommon),
        ('pucch-GroupHopping', _PUCCH_ConfigCommon_pucch_GroupHopping),
        ('hoppingId', _PUCCH_ConfigCommon_hoppingId),
        ('p0-nominal', _PUCCH_ConfigCommon_p0_nominal),
        ])
    PUCCH_ConfigCommon._ext = []
    
    #-----< PUCCH-PowerControl >-----#
    PUCCH_PowerControl = SEQ(name='PUCCH-PowerControl', mode=MODE_TYPE)
    _PUCCH_PowerControl_deltaF_PUCCH_f0 = INT(name='deltaF-PUCCH-f0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_deltaF_PUCCH_f0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _PUCCH_PowerControl_deltaF_PUCCH_f1 = INT(name='deltaF-PUCCH-f1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_deltaF_PUCCH_f1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _PUCCH_PowerControl_deltaF_PUCCH_f2 = INT(name='deltaF-PUCCH-f2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_deltaF_PUCCH_f2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _PUCCH_PowerControl_deltaF_PUCCH_f3 = INT(name='deltaF-PUCCH-f3', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_deltaF_PUCCH_f3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _PUCCH_PowerControl_deltaF_PUCCH_f4 = INT(name='deltaF-PUCCH-f4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_deltaF_PUCCH_f4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _PUCCH_PowerControl_p0_Set = SEQ_OF(name='p0-Set', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_PowerControl_p0_Set__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUCCH')))
    _PUCCH_PowerControl_p0_Set._cont = __PUCCH_PowerControl_p0_Set__item_
    _PUCCH_PowerControl_p0_Set._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PUCCH_PowerControl_pathlossReferenceRSs = SEQ_OF(name='pathlossReferenceRSs', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUCCH_PowerControl_pathlossReferenceRSs__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-PathlossReferenceRS')))
    _PUCCH_PowerControl_pathlossReferenceRSs._cont = __PUCCH_PowerControl_pathlossReferenceRSs__item_
    _PUCCH_PowerControl_pathlossReferenceRSs._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUCCH_PowerControl_twoPUCCH_PC_AdjustmentStates = ENUM(name='twoPUCCH-PC-AdjustmentStates', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_PowerControl_twoPUCCH_PC_AdjustmentStates._cont = ASN1Dict([('twoStates', 0)])
    _PUCCH_PowerControl_twoPUCCH_PC_AdjustmentStates._ext = []
    PUCCH_PowerControl._cont = ASN1Dict([
        ('deltaF-PUCCH-f0', _PUCCH_PowerControl_deltaF_PUCCH_f0),
        ('deltaF-PUCCH-f1', _PUCCH_PowerControl_deltaF_PUCCH_f1),
        ('deltaF-PUCCH-f2', _PUCCH_PowerControl_deltaF_PUCCH_f2),
        ('deltaF-PUCCH-f3', _PUCCH_PowerControl_deltaF_PUCCH_f3),
        ('deltaF-PUCCH-f4', _PUCCH_PowerControl_deltaF_PUCCH_f4),
        ('p0-Set', _PUCCH_PowerControl_p0_Set),
        ('pathlossReferenceRSs', _PUCCH_PowerControl_pathlossReferenceRSs),
        ('twoPUCCH-PC-AdjustmentStates', _PUCCH_PowerControl_twoPUCCH_PC_AdjustmentStates),
        ])
    PUCCH_PowerControl._ext = []
    
    #-----< P0-PUCCH >-----#
    P0_PUCCH = SEQ(name='P0-PUCCH', mode=MODE_TYPE)
    _P0_PUCCH_p0_PUCCH_Id = INT(name='p0-PUCCH-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUCCH-Id')))
    _P0_PUCCH_p0_PUCCH_Value = INT(name='p0-PUCCH-Value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _P0_PUCCH_p0_PUCCH_Value._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    P0_PUCCH._cont = ASN1Dict([
        ('p0-PUCCH-Id', _P0_PUCCH_p0_PUCCH_Id),
        ('p0-PUCCH-Value', _P0_PUCCH_p0_PUCCH_Value),
        ])
    P0_PUCCH._ext = []
    
    #-----< P0-PUCCH-Id >-----#
    P0_PUCCH_Id = INT(name='P0-PUCCH-Id', mode=MODE_TYPE)
    P0_PUCCH_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< PUCCH-PathlossReferenceRS >-----#
    PUCCH_PathlossReferenceRS = SEQ(name='PUCCH-PathlossReferenceRS', mode=MODE_TYPE)
    _PUCCH_PathlossReferenceRS_pucch_PathlossReferenceRS_Id = INT(name='pucch-PathlossReferenceRS-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-PathlossReferenceRS-Id')))
    _PUCCH_PathlossReferenceRS_referenceSignal = CHOICE(name='referenceSignal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PUCCH_PathlossReferenceRS_referenceSignal_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __PUCCH_PathlossReferenceRS_referenceSignal_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _PUCCH_PathlossReferenceRS_referenceSignal._cont = ASN1Dict([
        ('ssb-Index', __PUCCH_PathlossReferenceRS_referenceSignal_ssb_Index),
        ('csi-RS-Index', __PUCCH_PathlossReferenceRS_referenceSignal_csi_RS_Index),
        ])
    _PUCCH_PathlossReferenceRS_referenceSignal._ext = []
    PUCCH_PathlossReferenceRS._cont = ASN1Dict([
        ('pucch-PathlossReferenceRS-Id', _PUCCH_PathlossReferenceRS_pucch_PathlossReferenceRS_Id),
        ('referenceSignal', _PUCCH_PathlossReferenceRS_referenceSignal),
        ])
    PUCCH_PathlossReferenceRS._ext = []
    
    #-----< PUCCH-PathlossReferenceRS-Id >-----#
    PUCCH_PathlossReferenceRS_Id = INT(name='PUCCH-PathlossReferenceRS-Id', mode=MODE_TYPE)
    PUCCH_PathlossReferenceRS_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< PUCCH-TPC-CommandConfig >-----#
    PUCCH_TPC_CommandConfig = SEQ(name='PUCCH-TPC-CommandConfig', mode=MODE_TYPE)
    _PUCCH_TPC_CommandConfig_tpc_IndexPCell = INT(name='tpc-IndexPCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_TPC_CommandConfig_tpc_IndexPCell._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _PUCCH_TPC_CommandConfig_tpc_IndexPUCCH_SCell = INT(name='tpc-IndexPUCCH-SCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUCCH_TPC_CommandConfig_tpc_IndexPUCCH_SCell._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    PUCCH_TPC_CommandConfig._cont = ASN1Dict([
        ('tpc-IndexPCell', _PUCCH_TPC_CommandConfig_tpc_IndexPCell),
        ('tpc-IndexPUCCH-SCell', _PUCCH_TPC_CommandConfig_tpc_IndexPUCCH_SCell),
        ])
    PUCCH_TPC_CommandConfig._ext = []
    
    #-----< PUSCH-Config >-----#
    PUSCH_Config = SEQ(name='PUSCH-Config', mode=MODE_TYPE)
    _PUSCH_Config_dataScramblingIdentityPUSCH = INT(name='dataScramblingIdentityPUSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_dataScramblingIdentityPUSCH._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1007)], ev=None, er=[])
    _PUSCH_Config_txConfig = ENUM(name='txConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_Config_txConfig._cont = ASN1Dict([('codebook', 0), ('nonCodebook', 1)])
    _PUSCH_Config_txConfig._ext = []
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA = CHOICE(name='dmrs-UplinkForPUSCH-MappingTypeA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DMRS-UplinkConfig')))
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA._cont = ASN1Dict([
        ('release', __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_release),
        ('setup', __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_setup),
        ])
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA._ext = []
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB = CHOICE(name='dmrs-UplinkForPUSCH-MappingTypeB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DMRS-UplinkConfig')))
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB._cont = ASN1Dict([
        ('release', __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_release),
        ('setup', __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_setup),
        ])
    _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB._ext = []
    _PUSCH_Config_pusch_PowerControl = SEQ(name='pusch-PowerControl', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-PowerControl')), opt=True)
    _PUSCH_Config_frequencyHopping = ENUM(name='frequencyHopping', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_frequencyHopping._cont = ASN1Dict([('mode1', 0), ('mode2', 1)])
    _PUSCH_Config_frequencyHopping._ext = []
    _PUSCH_Config_frequencyHoppingOffsetLists = SEQ_OF(name='frequencyHoppingOffsetLists', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_Config_frequencyHoppingOffsetLists__item_ = INT(name='_item_', mode=MODE_TYPE)
    __PUSCH_Config_frequencyHoppingOffsetLists__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=274)], ev=None, er=[])
    _PUSCH_Config_frequencyHoppingOffsetLists._cont = __PUSCH_Config_frequencyHoppingOffsetLists__item_
    _PUSCH_Config_frequencyHoppingOffsetLists._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUSCH_Config_resourceAllocation = ENUM(name='resourceAllocation', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_Config_resourceAllocation._cont = ASN1Dict([('resourceAllocationType0', 0), ('resourceAllocationType1', 1), ('dynamicSwitch', 2)])
    _PUSCH_Config_resourceAllocation._ext = []
    _PUSCH_Config_pusch_AllocationList = SEQ_OF(name='pusch-AllocationList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_Config_pusch_AllocationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-TimeDomainResourceAllocation')))
    _PUSCH_Config_pusch_AllocationList._cont = __PUSCH_Config_pusch_AllocationList__item_
    _PUSCH_Config_pusch_AllocationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PUSCH_Config_pusch_AggregationFactor = ENUM(name='pusch-AggregationFactor', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_pusch_AggregationFactor._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n8', 2)])
    _PUSCH_Config_pusch_AggregationFactor._ext = []
    _PUSCH_Config_mcs_Table = ENUM(name='mcs-Table', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_mcs_Table._cont = ASN1Dict([('qam256', 0)])
    _PUSCH_Config_mcs_Table._ext = []
    _PUSCH_Config_mcs_TableTransformPrecoder = ENUM(name='mcs-TableTransformPrecoder', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_mcs_TableTransformPrecoder._cont = ASN1Dict([('qam256', 0)])
    _PUSCH_Config_mcs_TableTransformPrecoder._ext = []
    _PUSCH_Config_transformPrecoder = ENUM(name='transformPrecoder', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_transformPrecoder._cont = ASN1Dict([('enabled', 0), ('disabled', 1)])
    _PUSCH_Config_transformPrecoder._ext = []
    _PUSCH_Config_codebookSubset = ENUM(name='codebookSubset', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_Config_codebookSubset._cont = ASN1Dict([('fullyAndPartialAndNonCoherent', 0), ('partialAndNonCoherent', 1), ('nonCoherent', 2)])
    _PUSCH_Config_codebookSubset._ext = []
    _PUSCH_Config_maxRank = INT(name='maxRank', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_Config_maxRank._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUSCH_Config_rbg_Size = ENUM(name='rbg-Size', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_Config_rbg_Size._cont = ASN1Dict([('config2', 0)])
    _PUSCH_Config_rbg_Size._ext = []
    _PUSCH_Config_uci_OnPUSCH = CHOICE(name='uci-OnPUSCH', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUSCH_Config_uci_OnPUSCH_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_Config_uci_OnPUSCH_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UCI-OnPUSCH')))
    _PUSCH_Config_uci_OnPUSCH._cont = ASN1Dict([
        ('release', __PUSCH_Config_uci_OnPUSCH_release),
        ('setup', __PUSCH_Config_uci_OnPUSCH_setup),
        ])
    _PUSCH_Config_uci_OnPUSCH._ext = []
    _PUSCH_Config_vrb_ToPRB_Interleaver = ENUM(name='vrb-ToPRB-Interleaver', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_Config_vrb_ToPRB_Interleaver._cont = ASN1Dict([('n2', 0), ('n4', 1)])
    _PUSCH_Config_vrb_ToPRB_Interleaver._ext = []
    PUSCH_Config._cont = ASN1Dict([
        ('dataScramblingIdentityPUSCH', _PUSCH_Config_dataScramblingIdentityPUSCH),
        ('txConfig', _PUSCH_Config_txConfig),
        ('dmrs-UplinkForPUSCH-MappingTypeA', _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA),
        ('dmrs-UplinkForPUSCH-MappingTypeB', _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB),
        ('pusch-PowerControl', _PUSCH_Config_pusch_PowerControl),
        ('frequencyHopping', _PUSCH_Config_frequencyHopping),
        ('frequencyHoppingOffsetLists', _PUSCH_Config_frequencyHoppingOffsetLists),
        ('resourceAllocation', _PUSCH_Config_resourceAllocation),
        ('pusch-AllocationList', _PUSCH_Config_pusch_AllocationList),
        ('pusch-AggregationFactor', _PUSCH_Config_pusch_AggregationFactor),
        ('mcs-Table', _PUSCH_Config_mcs_Table),
        ('mcs-TableTransformPrecoder', _PUSCH_Config_mcs_TableTransformPrecoder),
        ('transformPrecoder', _PUSCH_Config_transformPrecoder),
        ('codebookSubset', _PUSCH_Config_codebookSubset),
        ('maxRank', _PUSCH_Config_maxRank),
        ('rbg-Size', _PUSCH_Config_rbg_Size),
        ('uci-OnPUSCH', _PUSCH_Config_uci_OnPUSCH),
        ('vrb-ToPRB-Interleaver', _PUSCH_Config_vrb_ToPRB_Interleaver),
        ])
    PUSCH_Config._ext = []
    
    #-----< UCI-OnPUSCH >-----#
    UCI_OnPUSCH = SEQ(name='UCI-OnPUSCH', mode=MODE_TYPE)
    _UCI_OnPUSCH_betaOffsets = CHOICE(name='betaOffsets', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __UCI_OnPUSCH_betaOffsets_dynamic = SEQ_OF(name='dynamic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___UCI_OnPUSCH_betaOffsets_dynamic__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BetaOffsets')))
    __UCI_OnPUSCH_betaOffsets_dynamic._cont = ___UCI_OnPUSCH_betaOffsets_dynamic__item_
    __UCI_OnPUSCH_betaOffsets_dynamic._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __UCI_OnPUSCH_betaOffsets_semiStatic = SEQ(name='semiStatic', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BetaOffsets')))
    _UCI_OnPUSCH_betaOffsets._cont = ASN1Dict([
        ('dynamic', __UCI_OnPUSCH_betaOffsets_dynamic),
        ('semiStatic', __UCI_OnPUSCH_betaOffsets_semiStatic),
        ])
    _UCI_OnPUSCH_betaOffsets._ext = []
    _UCI_OnPUSCH_scaling = ENUM(name='scaling', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UCI_OnPUSCH_scaling._cont = ASN1Dict([('f0p5', 0), ('f0p65', 1), ('f0p8', 2), ('f1', 3)])
    _UCI_OnPUSCH_scaling._ext = []
    UCI_OnPUSCH._cont = ASN1Dict([
        ('betaOffsets', _UCI_OnPUSCH_betaOffsets),
        ('scaling', _UCI_OnPUSCH_scaling),
        ])
    UCI_OnPUSCH._ext = []
    
    #-----< PUSCH-ConfigCommon >-----#
    PUSCH_ConfigCommon = SEQ(name='PUSCH-ConfigCommon', mode=MODE_TYPE)
    _PUSCH_ConfigCommon_groupHoppingEnabledTransformPrecoding = ENUM(name='groupHoppingEnabledTransformPrecoding', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_ConfigCommon_groupHoppingEnabledTransformPrecoding._cont = ASN1Dict([('enabled', 0)])
    _PUSCH_ConfigCommon_groupHoppingEnabledTransformPrecoding._ext = []
    _PUSCH_ConfigCommon_pusch_AllocationList = SEQ_OF(name='pusch-AllocationList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_ConfigCommon_pusch_AllocationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-TimeDomainResourceAllocation')))
    _PUSCH_ConfigCommon_pusch_AllocationList._cont = __PUSCH_ConfigCommon_pusch_AllocationList__item_
    _PUSCH_ConfigCommon_pusch_AllocationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PUSCH_ConfigCommon_msg3_DeltaPreamble = INT(name='msg3-DeltaPreamble', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_ConfigCommon_msg3_DeltaPreamble._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=6)], ev=None, er=[])
    _PUSCH_ConfigCommon_p0_NominalWithGrant = INT(name='p0-NominalWithGrant', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_ConfigCommon_p0_NominalWithGrant._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-202, ub=24)], ev=None, er=[])
    PUSCH_ConfigCommon._cont = ASN1Dict([
        ('groupHoppingEnabledTransformPrecoding', _PUSCH_ConfigCommon_groupHoppingEnabledTransformPrecoding),
        ('pusch-AllocationList', _PUSCH_ConfigCommon_pusch_AllocationList),
        ('msg3-DeltaPreamble', _PUSCH_ConfigCommon_msg3_DeltaPreamble),
        ('p0-NominalWithGrant', _PUSCH_ConfigCommon_p0_NominalWithGrant),
        ])
    PUSCH_ConfigCommon._ext = []
    
    #-----< PUSCH-PowerControl >-----#
    PUSCH_PowerControl = SEQ(name='PUSCH-PowerControl', mode=MODE_TYPE)
    _PUSCH_PowerControl_tpc_Accumulation = ENUM(name='tpc-Accumulation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_PowerControl_tpc_Accumulation._cont = ASN1Dict([('disabled', 0)])
    _PUSCH_PowerControl_tpc_Accumulation._ext = []
    _PUSCH_PowerControl_msg3_Alpha = ENUM(name='msg3-Alpha', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Alpha')), opt=True)
    _PUSCH_PowerControl_p0_NominalWithoutGrant = INT(name='p0-NominalWithoutGrant', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_PowerControl_p0_NominalWithoutGrant._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-202, ub=24)], ev=None, er=[])
    _PUSCH_PowerControl_p0_AlphaSets = SEQ_OF(name='p0-AlphaSets', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_PowerControl_p0_AlphaSets__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUSCH-AlphaSet')))
    _PUSCH_PowerControl_p0_AlphaSets._cont = __PUSCH_PowerControl_p0_AlphaSets__item_
    _PUSCH_PowerControl_p0_AlphaSets._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    _PUSCH_PowerControl_pathlossReferenceRSToAddModList = SEQ_OF(name='pathlossReferenceRSToAddModList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_PowerControl_pathlossReferenceRSToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-PathlossReferenceRS')))
    _PUSCH_PowerControl_pathlossReferenceRSToAddModList._cont = __PUSCH_PowerControl_pathlossReferenceRSToAddModList__item_
    _PUSCH_PowerControl_pathlossReferenceRSToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUSCH_PowerControl_pathlossReferenceRSToReleaseList = SEQ_OF(name='pathlossReferenceRSToReleaseList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_PowerControl_pathlossReferenceRSToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-PathlossReferenceRS-Id')))
    _PUSCH_PowerControl_pathlossReferenceRSToReleaseList._cont = __PUSCH_PowerControl_pathlossReferenceRSToReleaseList__item_
    _PUSCH_PowerControl_pathlossReferenceRSToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _PUSCH_PowerControl_twoPUSCH_PC_AdjustmentStates = ENUM(name='twoPUSCH-PC-AdjustmentStates', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_PowerControl_twoPUSCH_PC_AdjustmentStates._cont = ASN1Dict([('twoStates', 0)])
    _PUSCH_PowerControl_twoPUSCH_PC_AdjustmentStates._ext = []
    _PUSCH_PowerControl_deltaMCS = ENUM(name='deltaMCS', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_PowerControl_deltaMCS._cont = ASN1Dict([('enabled', 0)])
    _PUSCH_PowerControl_deltaMCS._ext = []
    _PUSCH_PowerControl_sri_PUSCH_MappingToAddModList = SEQ_OF(name='sri-PUSCH-MappingToAddModList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_PowerControl_sri_PUSCH_MappingToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRI-PUSCH-PowerControl')))
    _PUSCH_PowerControl_sri_PUSCH_MappingToAddModList._cont = __PUSCH_PowerControl_sri_PUSCH_MappingToAddModList__item_
    _PUSCH_PowerControl_sri_PUSCH_MappingToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList = SEQ_OF(name='sri-PUSCH-MappingToReleaseList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRI-PUSCH-PowerControlId')))
    _PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList._cont = __PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList__item_
    _PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PUSCH_PowerControl._cont = ASN1Dict([
        ('tpc-Accumulation', _PUSCH_PowerControl_tpc_Accumulation),
        ('msg3-Alpha', _PUSCH_PowerControl_msg3_Alpha),
        ('p0-NominalWithoutGrant', _PUSCH_PowerControl_p0_NominalWithoutGrant),
        ('p0-AlphaSets', _PUSCH_PowerControl_p0_AlphaSets),
        ('pathlossReferenceRSToAddModList', _PUSCH_PowerControl_pathlossReferenceRSToAddModList),
        ('pathlossReferenceRSToReleaseList', _PUSCH_PowerControl_pathlossReferenceRSToReleaseList),
        ('twoPUSCH-PC-AdjustmentStates', _PUSCH_PowerControl_twoPUSCH_PC_AdjustmentStates),
        ('deltaMCS', _PUSCH_PowerControl_deltaMCS),
        ('sri-PUSCH-MappingToAddModList', _PUSCH_PowerControl_sri_PUSCH_MappingToAddModList),
        ('sri-PUSCH-MappingToReleaseList', _PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList),
        ])
    PUSCH_PowerControl._ext = []
    
    #-----< P0-PUSCH-AlphaSet >-----#
    P0_PUSCH_AlphaSet = SEQ(name='P0-PUSCH-AlphaSet', mode=MODE_TYPE)
    _P0_PUSCH_AlphaSet_p0_PUSCH_AlphaSetId = INT(name='p0-PUSCH-AlphaSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUSCH-AlphaSetId')))
    _P0_PUSCH_AlphaSet_p0 = INT(name='p0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _P0_PUSCH_AlphaSet_p0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-16, ub=15)], ev=None, er=[])
    _P0_PUSCH_AlphaSet_alpha = ENUM(name='alpha', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Alpha')), opt=True)
    P0_PUSCH_AlphaSet._cont = ASN1Dict([
        ('p0-PUSCH-AlphaSetId', _P0_PUSCH_AlphaSet_p0_PUSCH_AlphaSetId),
        ('p0', _P0_PUSCH_AlphaSet_p0),
        ('alpha', _P0_PUSCH_AlphaSet_alpha),
        ])
    P0_PUSCH_AlphaSet._ext = []
    
    #-----< P0-PUSCH-AlphaSetId >-----#
    P0_PUSCH_AlphaSetId = INT(name='P0-PUSCH-AlphaSetId', mode=MODE_TYPE)
    P0_PUSCH_AlphaSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=29)], ev=None, er=[])
    
    #-----< PUSCH-PathlossReferenceRS >-----#
    PUSCH_PathlossReferenceRS = SEQ(name='PUSCH-PathlossReferenceRS', mode=MODE_TYPE)
    _PUSCH_PathlossReferenceRS_pusch_PathlossReferenceRS_Id = INT(name='pusch-PathlossReferenceRS-Id', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-PathlossReferenceRS-Id')))
    _PUSCH_PathlossReferenceRS_referenceSignal = CHOICE(name='referenceSignal', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PUSCH_PathlossReferenceRS_referenceSignal_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __PUSCH_PathlossReferenceRS_referenceSignal_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _PUSCH_PathlossReferenceRS_referenceSignal._cont = ASN1Dict([
        ('ssb-Index', __PUSCH_PathlossReferenceRS_referenceSignal_ssb_Index),
        ('csi-RS-Index', __PUSCH_PathlossReferenceRS_referenceSignal_csi_RS_Index),
        ])
    _PUSCH_PathlossReferenceRS_referenceSignal._ext = []
    PUSCH_PathlossReferenceRS._cont = ASN1Dict([
        ('pusch-PathlossReferenceRS-Id', _PUSCH_PathlossReferenceRS_pusch_PathlossReferenceRS_Id),
        ('referenceSignal', _PUSCH_PathlossReferenceRS_referenceSignal),
        ])
    PUSCH_PathlossReferenceRS._ext = []
    
    #-----< PUSCH-PathlossReferenceRS-Id >-----#
    PUSCH_PathlossReferenceRS_Id = INT(name='PUSCH-PathlossReferenceRS-Id', mode=MODE_TYPE)
    PUSCH_PathlossReferenceRS_Id._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< SRI-PUSCH-PowerControl >-----#
    SRI_PUSCH_PowerControl = SEQ(name='SRI-PUSCH-PowerControl', mode=MODE_TYPE)
    _SRI_PUSCH_PowerControl_sri_PUSCH_PowerControlId = INT(name='sri-PUSCH-PowerControlId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRI-PUSCH-PowerControlId')))
    _SRI_PUSCH_PowerControl_sri_PUSCH_PathlossReferenceRS_Id = INT(name='sri-PUSCH-PathlossReferenceRS-Id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-PathlossReferenceRS-Id')))
    _SRI_PUSCH_PowerControl_sri_P0_PUSCH_AlphaSetId = INT(name='sri-P0-PUSCH-AlphaSetId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P0-PUSCH-AlphaSetId')))
    _SRI_PUSCH_PowerControl_sri_PUSCH_ClosedLoopIndex = ENUM(name='sri-PUSCH-ClosedLoopIndex', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRI_PUSCH_PowerControl_sri_PUSCH_ClosedLoopIndex._cont = ASN1Dict([('i0', 0), ('i1', 1)])
    _SRI_PUSCH_PowerControl_sri_PUSCH_ClosedLoopIndex._ext = []
    SRI_PUSCH_PowerControl._cont = ASN1Dict([
        ('sri-PUSCH-PowerControlId', _SRI_PUSCH_PowerControl_sri_PUSCH_PowerControlId),
        ('sri-PUSCH-PathlossReferenceRS-Id', _SRI_PUSCH_PowerControl_sri_PUSCH_PathlossReferenceRS_Id),
        ('sri-P0-PUSCH-AlphaSetId', _SRI_PUSCH_PowerControl_sri_P0_PUSCH_AlphaSetId),
        ('sri-PUSCH-ClosedLoopIndex', _SRI_PUSCH_PowerControl_sri_PUSCH_ClosedLoopIndex),
        ])
    SRI_PUSCH_PowerControl._ext = []
    
    #-----< SRI-PUSCH-PowerControlId >-----#
    SRI_PUSCH_PowerControlId = INT(name='SRI-PUSCH-PowerControlId', mode=MODE_TYPE)
    SRI_PUSCH_PowerControlId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< BetaOffsets >-----#
    BetaOffsets = SEQ(name='BetaOffsets', mode=MODE_TYPE)
    _BetaOffsets_betaOffsetACK_Index1 = INT(name='betaOffsetACK-Index1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetACK_Index1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetACK_Index2 = INT(name='betaOffsetACK-Index2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetACK_Index2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetACK_Index3 = INT(name='betaOffsetACK-Index3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetACK_Index3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetCSI_Part1_Index1 = INT(name='betaOffsetCSI-Part1-Index1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetCSI_Part1_Index1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetCSI_Part1_Index2 = INT(name='betaOffsetCSI-Part1-Index2', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetCSI_Part1_Index2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetCSI_Part2_Index1 = INT(name='betaOffsetCSI-Part2-Index1', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetCSI_Part2_Index1._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _BetaOffsets_betaOffsetCSI_Part2_Index2 = INT(name='betaOffsetCSI-Part2-Index2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BetaOffsets_betaOffsetCSI_Part2_Index2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    BetaOffsets._cont = ASN1Dict([
        ('betaOffsetACK-Index1', _BetaOffsets_betaOffsetACK_Index1),
        ('betaOffsetACK-Index2', _BetaOffsets_betaOffsetACK_Index2),
        ('betaOffsetACK-Index3', _BetaOffsets_betaOffsetACK_Index3),
        ('betaOffsetCSI-Part1-Index1', _BetaOffsets_betaOffsetCSI_Part1_Index1),
        ('betaOffsetCSI-Part1-Index2', _BetaOffsets_betaOffsetCSI_Part1_Index2),
        ('betaOffsetCSI-Part2-Index1', _BetaOffsets_betaOffsetCSI_Part2_Index1),
        ('betaOffsetCSI-Part2-Index2', _BetaOffsets_betaOffsetCSI_Part2_Index2),
        ])
    BetaOffsets._ext = []
    
    #-----< PUSCH-ServingCellConfig >-----#
    PUSCH_ServingCellConfig = SEQ(name='PUSCH-ServingCellConfig', mode=MODE_TYPE)
    _PUSCH_ServingCellConfig_codeBlockGroupTransmission = CHOICE(name='codeBlockGroupTransmission', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __PUSCH_ServingCellConfig_codeBlockGroupTransmission_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PUSCH_ServingCellConfig_codeBlockGroupTransmission_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-CodeBlockGroupGransmission')))
    _PUSCH_ServingCellConfig_codeBlockGroupTransmission._cont = ASN1Dict([
        ('release', __PUSCH_ServingCellConfig_codeBlockGroupTransmission_release),
        ('setup', __PUSCH_ServingCellConfig_codeBlockGroupTransmission_setup),
        ])
    _PUSCH_ServingCellConfig_codeBlockGroupTransmission._ext = []
    _PUSCH_ServingCellConfig_rateMatching = ENUM(name='rateMatching', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_ServingCellConfig_rateMatching._cont = ASN1Dict([('limitedBufferRM', 0)])
    _PUSCH_ServingCellConfig_rateMatching._ext = []
    _PUSCH_ServingCellConfig_xOverhead = ENUM(name='xOverhead', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_ServingCellConfig_xOverhead._cont = ASN1Dict([('xoh6', 0), ('xoh12', 1), ('xoh18', 2)])
    _PUSCH_ServingCellConfig_xOverhead._ext = []
    PUSCH_ServingCellConfig._cont = ASN1Dict([
        ('codeBlockGroupTransmission', _PUSCH_ServingCellConfig_codeBlockGroupTransmission),
        ('rateMatching', _PUSCH_ServingCellConfig_rateMatching),
        ('xOverhead', _PUSCH_ServingCellConfig_xOverhead),
        ])
    PUSCH_ServingCellConfig._ext = []
    
    #-----< PUSCH-CodeBlockGroupGransmission >-----#
    PUSCH_CodeBlockGroupGransmission = SEQ(name='PUSCH-CodeBlockGroupGransmission', mode=MODE_TYPE)
    _PUSCH_CodeBlockGroupGransmission_maxCodeBlockGroupsPerTransportBlock = ENUM(name='maxCodeBlockGroupsPerTransportBlock', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_CodeBlockGroupGransmission_maxCodeBlockGroupsPerTransportBlock._cont = ASN1Dict([('n2', 0), ('n4', 1), ('n6', 2), ('n8', 3)])
    _PUSCH_CodeBlockGroupGransmission_maxCodeBlockGroupsPerTransportBlock._ext = []
    PUSCH_CodeBlockGroupGransmission._cont = ASN1Dict([
        ('maxCodeBlockGroupsPerTransportBlock', _PUSCH_CodeBlockGroupGransmission_maxCodeBlockGroupsPerTransportBlock),
        ])
    PUSCH_CodeBlockGroupGransmission._ext = []
    
    #-----< PUSCH-TimeDomainResourceAllocation >-----#
    PUSCH_TimeDomainResourceAllocation = SEQ(name='PUSCH-TimeDomainResourceAllocation', mode=MODE_TYPE)
    _PUSCH_TimeDomainResourceAllocation_k2 = INT(name='k2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_TimeDomainResourceAllocation_k2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _PUSCH_TimeDomainResourceAllocation_mappingType = ENUM(name='mappingType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_TimeDomainResourceAllocation_mappingType._cont = ASN1Dict([('typeA', 0), ('typeB', 1)])
    _PUSCH_TimeDomainResourceAllocation_mappingType._ext = []
    _PUSCH_TimeDomainResourceAllocation_startSymbolAndLength = BIT_STR(name='startSymbolAndLength', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUSCH_TimeDomainResourceAllocation_startSymbolAndLength._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    PUSCH_TimeDomainResourceAllocation._cont = ASN1Dict([
        ('k2', _PUSCH_TimeDomainResourceAllocation_k2),
        ('mappingType', _PUSCH_TimeDomainResourceAllocation_mappingType),
        ('startSymbolAndLength', _PUSCH_TimeDomainResourceAllocation_startSymbolAndLength),
        ])
    PUSCH_TimeDomainResourceAllocation._ext = []
    
    #-----< PUSCH-TPC-CommandConfig >-----#
    PUSCH_TPC_CommandConfig = SEQ(name='PUSCH-TPC-CommandConfig', mode=MODE_TYPE)
    _PUSCH_TPC_CommandConfig_tpc_Index = INT(name='tpc-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_TPC_CommandConfig_tpc_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _PUSCH_TPC_CommandConfig_tpc_IndexSUL = INT(name='tpc-IndexSUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PUSCH_TPC_CommandConfig_tpc_IndexSUL._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    _PUSCH_TPC_CommandConfig_targetCell = INT(name='targetCell', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')), opt=True)
    PUSCH_TPC_CommandConfig._cont = ASN1Dict([
        ('tpc-Index', _PUSCH_TPC_CommandConfig_tpc_Index),
        ('tpc-IndexSUL', _PUSCH_TPC_CommandConfig_tpc_IndexSUL),
        ('targetCell', _PUSCH_TPC_CommandConfig_targetCell),
        ])
    PUSCH_TPC_CommandConfig._ext = []
    
    #-----< Q-OffsetRange >-----#
    Q_OffsetRange = ENUM(name='Q-OffsetRange', mode=MODE_TYPE)
    Q_OffsetRange._cont = ASN1Dict([('dB-24', 0), ('dB-22', 1), ('dB-20', 2), ('dB-18', 3), ('dB-16', 4), ('dB-14', 5), ('dB-12', 6), ('dB-10', 7), ('dB-8', 8), ('dB-6', 9), ('dB-5', 10), ('dB-4', 11), ('dB-3', 12), ('dB-2', 13), ('dB-1', 14), ('dB0', 15), ('dB1', 16), ('dB2', 17), ('dB3', 18), ('dB4', 19), ('dB5', 20), ('dB6', 21), ('dB8', 22), ('dB10', 23), ('dB12', 24), ('dB14', 25), ('dB16', 26), ('dB18', 27), ('dB20', 28), ('dB22', 29), ('dB24', 30)])
    Q_OffsetRange._ext = []
    
    #-----< QuantityConfig >-----#
    QuantityConfig = SEQ(name='QuantityConfig', mode=MODE_TYPE)
    _QuantityConfig_quantityConfigNR_List = SEQ_OF(name='quantityConfigNR-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfigNR-List')), opt=True)
    QuantityConfig._cont = ASN1Dict([
        ('quantityConfigNR-List', _QuantityConfig_quantityConfigNR_List),
        ])
    QuantityConfig._ext = []
    
    #-----< QuantityConfigNR-List >-----#
    QuantityConfigNR_List = SEQ_OF(name='QuantityConfigNR-List', mode=MODE_TYPE)
    _QuantityConfigNR_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfigNR')))
    QuantityConfigNR_List._cont = _QuantityConfigNR_List__item_
    QuantityConfigNR_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< QuantityConfigNR >-----#
    QuantityConfigNR = SEQ(name='QuantityConfigNR', mode=MODE_TYPE)
    _QuantityConfigNR_quantityConfigCell = SEQ(name='quantityConfigCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfigRS')))
    _QuantityConfigNR_quantityConfigRS_Index = SEQ(name='quantityConfigRS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfigRS')), opt=True)
    QuantityConfigNR._cont = ASN1Dict([
        ('quantityConfigCell', _QuantityConfigNR_quantityConfigCell),
        ('quantityConfigRS-Index', _QuantityConfigNR_quantityConfigRS_Index),
        ])
    QuantityConfigNR._ext = []
    
    #-----< QuantityConfigRS >-----#
    QuantityConfigRS = SEQ(name='QuantityConfigRS', mode=MODE_TYPE)
    _QuantityConfigRS_ssb_FilterConfig = SEQ(name='ssb-FilterConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FilterConfig')))
    _QuantityConfigRS_cs_RS_FilterConfig = SEQ(name='cs-RS-FilterConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FilterConfig')))
    QuantityConfigRS._cont = ASN1Dict([
        ('ssb-FilterConfig', _QuantityConfigRS_ssb_FilterConfig),
        ('cs-RS-FilterConfig', _QuantityConfigRS_cs_RS_FilterConfig),
        ])
    QuantityConfigRS._ext = []
    
    #-----< FilterConfig >-----#
    FilterConfig = SEQ(name='FilterConfig', mode=MODE_TYPE)
    _FilterConfig_filterCoefficientRSRP = ENUM(name='filterCoefficientRSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FilterCoefficient')), default='fc4')
    _FilterConfig_filterCoefficientRSRQ = ENUM(name='filterCoefficientRSRQ', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FilterCoefficient')), default='fc4')
    _FilterConfig_filterCoefficientRS_SINR = ENUM(name='filterCoefficientRS-SINR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FilterCoefficient')), default='fc4')
    FilterConfig._cont = ASN1Dict([
        ('filterCoefficientRSRP', _FilterConfig_filterCoefficientRSRP),
        ('filterCoefficientRSRQ', _FilterConfig_filterCoefficientRSRQ),
        ('filterCoefficientRS-SINR', _FilterConfig_filterCoefficientRS_SINR),
        ])
    FilterConfig._ext = []
    
    #-----< RACH-ConfigCommon >-----#
    RACH_ConfigCommon = SEQ(name='RACH-ConfigCommon', mode=MODE_TYPE)
    _RACH_ConfigCommon_rach_ConfigGeneric = SEQ(name='rach-ConfigGeneric', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RACH-ConfigGeneric')))
    _RACH_ConfigCommon_totalNumberOfRA_Preambles = INT(name='totalNumberOfRA-Preambles', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RACH_ConfigCommon_totalNumberOfRA_Preambles._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    _RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB = CHOICE(name='ssb-perRACH-OccasionAndCB-PreamblesPerSSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneEighth = ENUM(name='oneEighth', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneEighth._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14), ('n64', 15)])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneEighth._ext = []
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneFourth = ENUM(name='oneFourth', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneFourth._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14), ('n64', 15)])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneFourth._ext = []
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneHalf = ENUM(name='oneHalf', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneHalf._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14), ('n64', 15)])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneHalf._ext = []
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_one = ENUM(name='one', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_one._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7), ('n36', 8), ('n40', 9), ('n44', 10), ('n48', 11), ('n52', 12), ('n56', 13), ('n60', 14), ('n64', 15)])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_one._ext = []
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_two = ENUM(name='two', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_two._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n12', 2), ('n16', 3), ('n20', 4), ('n24', 5), ('n28', 6), ('n32', 7)])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_two._ext = []
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_four = INT(name='four', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_four._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_eight = INT(name='eight', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_eight._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_sixteen = INT(name='sixteen', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_sixteen._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB._cont = ASN1Dict([
        ('oneEighth', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneEighth),
        ('oneFourth', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneFourth),
        ('oneHalf', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneHalf),
        ('one', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_one),
        ('two', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_two),
        ('four', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_four),
        ('eight', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_eight),
        ('sixteen', __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_sixteen),
        ])
    _RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB._ext = []
    _RACH_ConfigCommon_groupBconfigured = SEQ(name='groupBconfigured', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA = ENUM(name='ra-Msg3SizeGroupA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA._cont = ASN1Dict([('b56', 0), ('b144', 1), ('b208', 2), ('b256', 3), ('b282', 4), ('b480', 5), ('b640', 6), ('b800', 7), ('b1000', 8), ('spare7', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    __RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA._ext = []
    __RACH_ConfigCommon_groupBconfigured_messagePowerOffsetGroupB = ENUM(name='messagePowerOffsetGroupB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_groupBconfigured_messagePowerOffsetGroupB._cont = ASN1Dict([('minusinfinity', 0), ('dB0', 1), ('dB5', 2), ('dB8', 3), ('dB10', 4), ('dB12', 5), ('dB15', 6), ('dB18', 7)])
    __RACH_ConfigCommon_groupBconfigured_messagePowerOffsetGroupB._ext = []
    __RACH_ConfigCommon_groupBconfigured_numberOfRA_PreamblesGroupA = INT(name='numberOfRA-PreamblesGroupA', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_groupBconfigured_numberOfRA_PreamblesGroupA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _RACH_ConfigCommon_groupBconfigured._cont = ASN1Dict([
        ('ra-Msg3SizeGroupA', __RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA),
        ('messagePowerOffsetGroupB', __RACH_ConfigCommon_groupBconfigured_messagePowerOffsetGroupB),
        ('numberOfRA-PreamblesGroupA', __RACH_ConfigCommon_groupBconfigured_numberOfRA_PreamblesGroupA),
        ])
    _RACH_ConfigCommon_groupBconfigured._ext = []
    _RACH_ConfigCommon_ra_ContentionResolutionTimer = ENUM(name='ra-ContentionResolutionTimer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigCommon_ra_ContentionResolutionTimer._cont = ASN1Dict([('sf8', 0), ('sf16', 1), ('sf24', 2), ('sf32', 3), ('sf40', 4), ('sf48', 5), ('sf56', 6), ('sf64', 7)])
    _RACH_ConfigCommon_ra_ContentionResolutionTimer._ext = []
    _RACH_ConfigCommon_rsrp_ThresholdSSB = INT(name='rsrp-ThresholdSSB', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    _RACH_ConfigCommon_rsrp_ThresholdSSB_SUL = INT(name='rsrp-ThresholdSSB-SUL', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')), opt=True)
    _RACH_ConfigCommon_prach_RootSequenceIndex = CHOICE(name='prach-RootSequenceIndex', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RACH_ConfigCommon_prach_RootSequenceIndex_l839 = INT(name='l839', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_prach_RootSequenceIndex_l839._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=837)], ev=None, er=[])
    __RACH_ConfigCommon_prach_RootSequenceIndex_l139 = INT(name='l139', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RACH_ConfigCommon_prach_RootSequenceIndex_l139._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=137)], ev=None, er=[])
    _RACH_ConfigCommon_prach_RootSequenceIndex._cont = ASN1Dict([
        ('l839', __RACH_ConfigCommon_prach_RootSequenceIndex_l839),
        ('l139', __RACH_ConfigCommon_prach_RootSequenceIndex_l139),
        ])
    _RACH_ConfigCommon_prach_RootSequenceIndex._ext = []
    _RACH_ConfigCommon_msg1_SubcarrierSpacing = ENUM(name='msg1-SubcarrierSpacing', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _RACH_ConfigCommon_restrictedSetConfig = ENUM(name='restrictedSetConfig', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigCommon_restrictedSetConfig._cont = ASN1Dict([('unrestrictedSet', 0), ('restrictedSetTypeA', 1), ('restrictedSetTypeB', 2)])
    _RACH_ConfigCommon_restrictedSetConfig._ext = []
    _RACH_ConfigCommon_msg3_transformPrecoding = ENUM(name='msg3-transformPrecoding', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RACH_ConfigCommon_msg3_transformPrecoding._cont = ASN1Dict([('enabled', 0)])
    _RACH_ConfigCommon_msg3_transformPrecoding._ext = []
    RACH_ConfigCommon._cont = ASN1Dict([
        ('rach-ConfigGeneric', _RACH_ConfigCommon_rach_ConfigGeneric),
        ('totalNumberOfRA-Preambles', _RACH_ConfigCommon_totalNumberOfRA_Preambles),
        ('ssb-perRACH-OccasionAndCB-PreamblesPerSSB', _RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB),
        ('groupBconfigured', _RACH_ConfigCommon_groupBconfigured),
        ('ra-ContentionResolutionTimer', _RACH_ConfigCommon_ra_ContentionResolutionTimer),
        ('rsrp-ThresholdSSB', _RACH_ConfigCommon_rsrp_ThresholdSSB),
        ('rsrp-ThresholdSSB-SUL', _RACH_ConfigCommon_rsrp_ThresholdSSB_SUL),
        ('prach-RootSequenceIndex', _RACH_ConfigCommon_prach_RootSequenceIndex),
        ('msg1-SubcarrierSpacing', _RACH_ConfigCommon_msg1_SubcarrierSpacing),
        ('restrictedSetConfig', _RACH_ConfigCommon_restrictedSetConfig),
        ('msg3-transformPrecoding', _RACH_ConfigCommon_msg3_transformPrecoding),
        ])
    RACH_ConfigCommon._ext = []
    
    #-----< RACH-ConfigGeneric >-----#
    RACH_ConfigGeneric = SEQ(name='RACH-ConfigGeneric', mode=MODE_TYPE)
    _RACH_ConfigGeneric_prach_ConfigurationIndex = INT(name='prach-ConfigurationIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_prach_ConfigurationIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _RACH_ConfigGeneric_msg1_FDM = ENUM(name='msg1-FDM', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_msg1_FDM._cont = ASN1Dict([('one', 0), ('two', 1), ('four', 2), ('eight', 3)])
    _RACH_ConfigGeneric_msg1_FDM._ext = []
    _RACH_ConfigGeneric_msg1_FrequencyStart = INT(name='msg1-FrequencyStart', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_msg1_FrequencyStart._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=274)], ev=None, er=[])
    _RACH_ConfigGeneric_zeroCorrelationZoneConfig = INT(name='zeroCorrelationZoneConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_zeroCorrelationZoneConfig._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _RACH_ConfigGeneric_preambleReceivedTargetPower = INT(name='preambleReceivedTargetPower', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_preambleReceivedTargetPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-200, ub=-74)], ev=None, er=[])
    _RACH_ConfigGeneric_preambleTransMax = ENUM(name='preambleTransMax', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_preambleTransMax._cont = ASN1Dict([('n3', 0), ('n4', 1), ('n5', 2), ('n6', 3), ('n7', 4), ('n8', 5), ('n10', 6), ('n20', 7), ('n50', 8), ('n100', 9), ('n200', 10)])
    _RACH_ConfigGeneric_preambleTransMax._ext = []
    _RACH_ConfigGeneric_powerRampingStep = ENUM(name='powerRampingStep', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_powerRampingStep._cont = ASN1Dict([('dB0', 0), ('dB2', 1), ('dB4', 2), ('dB6', 3)])
    _RACH_ConfigGeneric_powerRampingStep._ext = []
    _RACH_ConfigGeneric_ra_ResponseWindow = ENUM(name='ra-ResponseWindow', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RACH_ConfigGeneric_ra_ResponseWindow._cont = ASN1Dict([('sl1', 0), ('sl2', 1), ('sl4', 2), ('sl8', 3), ('sl10', 4), ('sl20', 5), ('sl40', 6), ('sl80', 7)])
    _RACH_ConfigGeneric_ra_ResponseWindow._ext = []
    RACH_ConfigGeneric._cont = ASN1Dict([
        ('prach-ConfigurationIndex', _RACH_ConfigGeneric_prach_ConfigurationIndex),
        ('msg1-FDM', _RACH_ConfigGeneric_msg1_FDM),
        ('msg1-FrequencyStart', _RACH_ConfigGeneric_msg1_FrequencyStart),
        ('zeroCorrelationZoneConfig', _RACH_ConfigGeneric_zeroCorrelationZoneConfig),
        ('preambleReceivedTargetPower', _RACH_ConfigGeneric_preambleReceivedTargetPower),
        ('preambleTransMax', _RACH_ConfigGeneric_preambleTransMax),
        ('powerRampingStep', _RACH_ConfigGeneric_powerRampingStep),
        ('ra-ResponseWindow', _RACH_ConfigGeneric_ra_ResponseWindow),
        ])
    RACH_ConfigGeneric._ext = []
    
    #-----< RACH-ConfigDedicated >-----#
    RACH_ConfigDedicated = SEQ(name='RACH-ConfigDedicated', mode=MODE_TYPE)
    _RACH_ConfigDedicated_cfra_Resources = CHOICE(name='cfra-Resources', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CFRA-Resources')))
    RACH_ConfigDedicated._cont = ASN1Dict([
        ('cfra-Resources', _RACH_ConfigDedicated_cfra_Resources),
        ])
    RACH_ConfigDedicated._ext = []
    
    #-----< CFRA-Resources >-----#
    CFRA_Resources = CHOICE(name='CFRA-Resources', mode=MODE_TYPE)
    _CFRA_Resources_ssb = SEQ(name='ssb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CFRA_Resources_ssb_ssb_ResourceList = SEQ_OF(name='ssb-ResourceList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CFRA_Resources_ssb_ssb_ResourceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CFRA-SSB-Resource')))
    __CFRA_Resources_ssb_ssb_ResourceList._cont = ___CFRA_Resources_ssb_ssb_ResourceList__item_
    __CFRA_Resources_ssb_ssb_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    __CFRA_Resources_ssb_ra_ssb_OccasionMaskIndex = INT(name='ra-ssb-OccasionMaskIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CFRA_Resources_ssb_ra_ssb_OccasionMaskIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _CFRA_Resources_ssb._cont = ASN1Dict([
        ('ssb-ResourceList', __CFRA_Resources_ssb_ssb_ResourceList),
        ('ra-ssb-OccasionMaskIndex', __CFRA_Resources_ssb_ra_ssb_OccasionMaskIndex),
        ])
    _CFRA_Resources_ssb._ext = []
    _CFRA_Resources_csirs = SEQ(name='csirs', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CFRA_Resources_csirs_csirs_ResourceList = SEQ_OF(name='csirs-ResourceList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CFRA_Resources_csirs_csirs_ResourceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CFRA-CSIRS-Resource')))
    __CFRA_Resources_csirs_csirs_ResourceList._cont = ___CFRA_Resources_csirs_csirs_ResourceList__item_
    __CFRA_Resources_csirs_csirs_ResourceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=96)], ev=None, er=[])
    __CFRA_Resources_csirs_cfra_csirs_DedicatedRACH_Threshold = INT(name='cfra-csirs-DedicatedRACH-Threshold', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    _CFRA_Resources_csirs._cont = ASN1Dict([
        ('csirs-ResourceList', __CFRA_Resources_csirs_csirs_ResourceList),
        ('cfra-csirs-DedicatedRACH-Threshold', __CFRA_Resources_csirs_cfra_csirs_DedicatedRACH_Threshold),
        ])
    _CFRA_Resources_csirs._ext = []
    CFRA_Resources._cont = ASN1Dict([
        ('ssb', _CFRA_Resources_ssb),
        ('csirs', _CFRA_Resources_csirs),
        ])
    CFRA_Resources._ext = []
    
    #-----< CFRA-SSB-Resource >-----#
    CFRA_SSB_Resource = SEQ(name='CFRA-SSB-Resource', mode=MODE_TYPE)
    _CFRA_SSB_Resource_ssb = INT(name='ssb', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    _CFRA_SSB_Resource_ra_PreambleIndex = INT(name='ra-PreambleIndex', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CFRA_SSB_Resource_ra_PreambleIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    CFRA_SSB_Resource._cont = ASN1Dict([
        ('ssb', _CFRA_SSB_Resource_ssb),
        ('ra-PreambleIndex', _CFRA_SSB_Resource_ra_PreambleIndex),
        ])
    CFRA_SSB_Resource._ext = []
    
    #-----< CFRA-CSIRS-Resource >-----#
    CFRA_CSIRS_Resource = SEQ(name='CFRA-CSIRS-Resource', mode=MODE_TYPE)
    _CFRA_CSIRS_Resource_csi_RS = INT(name='csi-RS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-Index')))
    _CFRA_CSIRS_Resource_ra_OccasionList = SEQ_OF(name='ra-OccasionList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CFRA_CSIRS_Resource_ra_OccasionList__item_ = INT(name='_item_', mode=MODE_TYPE)
    __CFRA_CSIRS_Resource_ra_OccasionList__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    _CFRA_CSIRS_Resource_ra_OccasionList._cont = __CFRA_CSIRS_Resource_ra_OccasionList__item_
    _CFRA_CSIRS_Resource_ra_OccasionList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _CFRA_CSIRS_Resource_ra_PreambleIndex = INT(name='ra-PreambleIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CFRA_CSIRS_Resource_ra_PreambleIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    CFRA_CSIRS_Resource._cont = ASN1Dict([
        ('csi-RS', _CFRA_CSIRS_Resource_csi_RS),
        ('ra-OccasionList', _CFRA_CSIRS_Resource_ra_OccasionList),
        ('ra-PreambleIndex', _CFRA_CSIRS_Resource_ra_PreambleIndex),
        ])
    CFRA_CSIRS_Resource._ext = []
    
    #-----< RadioBearerConfig >-----#
    RadioBearerConfig = SEQ(name='RadioBearerConfig', mode=MODE_TYPE)
    _RadioBearerConfig_srb_ToAddModList = SEQ_OF(name='srb-ToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRB-ToAddModList')), opt=True)
    _RadioBearerConfig_srb3_ToRelease = ENUM(name='srb3-ToRelease', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RadioBearerConfig_srb3_ToRelease._cont = ASN1Dict([('true', 0)])
    _RadioBearerConfig_srb3_ToRelease._ext = []
    _RadioBearerConfig_drb_ToAddModList = SEQ_OF(name='drb-ToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-ToAddModList')), opt=True)
    _RadioBearerConfig_drb_ToReleaseList = SEQ_OF(name='drb-ToReleaseList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-ToReleaseList')), opt=True)
    _RadioBearerConfig_securityConfig = SEQ(name='securityConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityConfig')), opt=True)
    RadioBearerConfig._cont = ASN1Dict([
        ('srb-ToAddModList', _RadioBearerConfig_srb_ToAddModList),
        ('srb3-ToRelease', _RadioBearerConfig_srb3_ToRelease),
        ('drb-ToAddModList', _RadioBearerConfig_drb_ToAddModList),
        ('drb-ToReleaseList', _RadioBearerConfig_drb_ToReleaseList),
        ('securityConfig', _RadioBearerConfig_securityConfig),
        ])
    RadioBearerConfig._ext = []
    
    #-----< SRB-ToAddModList >-----#
    SRB_ToAddModList = SEQ_OF(name='SRB-ToAddModList', mode=MODE_TYPE)
    _SRB_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRB-ToAddMod')))
    SRB_ToAddModList._cont = _SRB_ToAddModList__item_
    SRB_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    
    #-----< SRB-ToAddMod >-----#
    SRB_ToAddMod = SEQ(name='SRB-ToAddMod', mode=MODE_TYPE)
    _SRB_ToAddMod_srb_Identity = INT(name='srb-Identity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRB-Identity')))
    _SRB_ToAddMod_reestablishPDCP = ENUM(name='reestablishPDCP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRB_ToAddMod_reestablishPDCP._cont = ASN1Dict([('true', 0)])
    _SRB_ToAddMod_reestablishPDCP._ext = []
    _SRB_ToAddMod_discardOnPDCP = ENUM(name='discardOnPDCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRB_ToAddMod_discardOnPDCP._cont = ASN1Dict([('true', 0)])
    _SRB_ToAddMod_discardOnPDCP._ext = []
    _SRB_ToAddMod_pdcp_Config = SEQ(name='pdcp-Config', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCP-Config')), opt=True)
    SRB_ToAddMod._cont = ASN1Dict([
        ('srb-Identity', _SRB_ToAddMod_srb_Identity),
        ('reestablishPDCP', _SRB_ToAddMod_reestablishPDCP),
        ('discardOnPDCP', _SRB_ToAddMod_discardOnPDCP),
        ('pdcp-Config', _SRB_ToAddMod_pdcp_Config),
        ])
    SRB_ToAddMod._ext = []
    
    #-----< DRB-ToAddModList >-----#
    DRB_ToAddModList = SEQ_OF(name='DRB-ToAddModList', mode=MODE_TYPE)
    _DRB_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-ToAddMod')))
    DRB_ToAddModList._cont = _DRB_ToAddModList__item_
    DRB_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=29)], ev=None, er=[])
    
    #-----< DRB-ToAddMod >-----#
    DRB_ToAddMod = SEQ(name='DRB-ToAddMod', mode=MODE_TYPE)
    _DRB_ToAddMod_cnAssociation = CHOICE(name='cnAssociation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __DRB_ToAddMod_cnAssociation_eps_BearerIdentity = INT(name='eps-BearerIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRB_ToAddMod_cnAssociation_eps_BearerIdentity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    __DRB_ToAddMod_cnAssociation_sdap_Config = SEQ(name='sdap-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SDAP-Config')))
    _DRB_ToAddMod_cnAssociation._cont = ASN1Dict([
        ('eps-BearerIdentity', __DRB_ToAddMod_cnAssociation_eps_BearerIdentity),
        ('sdap-Config', __DRB_ToAddMod_cnAssociation_sdap_Config),
        ])
    _DRB_ToAddMod_cnAssociation._ext = []
    _DRB_ToAddMod_drb_Identity = INT(name='drb-Identity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-Identity')))
    _DRB_ToAddMod_reestablishPDCP = ENUM(name='reestablishPDCP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DRB_ToAddMod_reestablishPDCP._cont = ASN1Dict([('true', 0)])
    _DRB_ToAddMod_reestablishPDCP._ext = []
    _DRB_ToAddMod_recoverPDCP = ENUM(name='recoverPDCP', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DRB_ToAddMod_recoverPDCP._cont = ASN1Dict([('true', 0)])
    _DRB_ToAddMod_recoverPDCP._ext = []
    _DRB_ToAddMod_pdcp_Config = SEQ(name='pdcp-Config', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCP-Config')), opt=True)
    DRB_ToAddMod._cont = ASN1Dict([
        ('cnAssociation', _DRB_ToAddMod_cnAssociation),
        ('drb-Identity', _DRB_ToAddMod_drb_Identity),
        ('reestablishPDCP', _DRB_ToAddMod_reestablishPDCP),
        ('recoverPDCP', _DRB_ToAddMod_recoverPDCP),
        ('pdcp-Config', _DRB_ToAddMod_pdcp_Config),
        ])
    DRB_ToAddMod._ext = []
    
    #-----< DRB-ToReleaseList >-----#
    DRB_ToReleaseList = SEQ_OF(name='DRB-ToReleaseList', mode=MODE_TYPE)
    _DRB_ToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DRB-Identity')))
    DRB_ToReleaseList._cont = _DRB_ToReleaseList__item_
    DRB_ToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=29)], ev=None, er=[])
    
    #-----< SecurityConfig >-----#
    SecurityConfig = SEQ(name='SecurityConfig', mode=MODE_TYPE)
    _SecurityConfig_securityAlgorithmConfig = SEQ(name='securityAlgorithmConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SecurityAlgorithmConfig')), opt=True)
    _SecurityConfig_keyToUse = ENUM(name='keyToUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SecurityConfig_keyToUse._cont = ASN1Dict([('keNB', 0), ('s-KgNB', 1)])
    _SecurityConfig_keyToUse._ext = []
    SecurityConfig._cont = ASN1Dict([
        ('securityAlgorithmConfig', _SecurityConfig_securityAlgorithmConfig),
        ('keyToUse', _SecurityConfig_keyToUse),
        ])
    SecurityConfig._ext = []
    
    #-----< RadioLinkMonitoringConfig >-----#
    RadioLinkMonitoringConfig = SEQ(name='RadioLinkMonitoringConfig', mode=MODE_TYPE)
    _RadioLinkMonitoringConfig_failureDetectionResources = SEQ_OF(name='failureDetectionResources', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __RadioLinkMonitoringConfig_failureDetectionResources__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioLinkMonitoringRS')))
    _RadioLinkMonitoringConfig_failureDetectionResources._cont = __RadioLinkMonitoringConfig_failureDetectionResources__item_
    _RadioLinkMonitoringConfig_failureDetectionResources._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10)], ev=None, er=[])
    _RadioLinkMonitoringConfig_beamFailureInstanceMaxCount = ENUM(name='beamFailureInstanceMaxCount', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RadioLinkMonitoringConfig_beamFailureInstanceMaxCount._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n5', 4), ('n6', 5), ('n8', 6), ('n10', 7)])
    _RadioLinkMonitoringConfig_beamFailureInstanceMaxCount._ext = []
    _RadioLinkMonitoringConfig_beamFailureDetectionTimer = ENUM(name='beamFailureDetectionTimer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RadioLinkMonitoringConfig_beamFailureDetectionTimer._cont = ASN1Dict([('pbfd1', 0), ('pbfd2', 1), ('pbfd3', 2), ('pbfd4', 3), ('pbfd5', 4), ('pbfd6', 5), ('pbfd8', 6), ('pbfd10', 7)])
    _RadioLinkMonitoringConfig_beamFailureDetectionTimer._ext = []
    RadioLinkMonitoringConfig._cont = ASN1Dict([
        ('failureDetectionResources', _RadioLinkMonitoringConfig_failureDetectionResources),
        ('beamFailureInstanceMaxCount', _RadioLinkMonitoringConfig_beamFailureInstanceMaxCount),
        ('beamFailureDetectionTimer', _RadioLinkMonitoringConfig_beamFailureDetectionTimer),
        ])
    RadioLinkMonitoringConfig._ext = []
    
    #-----< RadioLinkMonitoringRS >-----#
    RadioLinkMonitoringRS = SEQ(name='RadioLinkMonitoringRS', mode=MODE_TYPE)
    _RadioLinkMonitoringRS_purpose = ENUM(name='purpose', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RadioLinkMonitoringRS_purpose._cont = ASN1Dict([('beamFailure', 0), ('rlf', 1), ('both', 2)])
    _RadioLinkMonitoringRS_purpose._ext = []
    _RadioLinkMonitoringRS_detectionResource = CHOICE(name='detectionResource', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RadioLinkMonitoringRS_detectionResource_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __RadioLinkMonitoringRS_detectionResource_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _RadioLinkMonitoringRS_detectionResource._cont = ASN1Dict([
        ('ssb-Index', __RadioLinkMonitoringRS_detectionResource_ssb_Index),
        ('csi-RS-Index', __RadioLinkMonitoringRS_detectionResource_csi_RS_Index),
        ])
    _RadioLinkMonitoringRS_detectionResource._ext = []
    RadioLinkMonitoringRS._cont = ASN1Dict([
        ('purpose', _RadioLinkMonitoringRS_purpose),
        ('detectionResource', _RadioLinkMonitoringRS_detectionResource),
        ])
    RadioLinkMonitoringRS._ext = []
    
    #-----< RateMatchPattern >-----#
    RateMatchPattern = SEQ(name='RateMatchPattern', mode=MODE_TYPE)
    _RateMatchPattern_rateMatchPatternId = INT(name='rateMatchPatternId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternId')))
    _RateMatchPattern_patternType = CHOICE(name='patternType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __RateMatchPattern_patternType_bitmaps = SEQ(name='bitmaps', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RateMatchPattern_patternType_bitmaps_resourceBlocks = BIT_STR(name='resourceBlocks', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RateMatchPattern_patternType_bitmaps_resourceBlocks._const_sz = ASN1Set(rv=[275], rr=[], ev=None, er=[])
    ___RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock = CHOICE(name='symbolsInResourceBlock', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_oneSlot = BIT_STR(name='oneSlot', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_oneSlot._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_twoSlots = BIT_STR(name='twoSlots', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_twoSlots._const_sz = ASN1Set(rv=[28], rr=[], ev=None, er=[])
    ___RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock._cont = ASN1Dict([
        ('oneSlot', ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_oneSlot),
        ('twoSlots', ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_twoSlots),
        ])
    ___RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock._ext = []
    ___RateMatchPattern_patternType_bitmaps_periodicityAndPattern = CHOICE(name='periodicityAndPattern', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n2 = BIT_STR(name='n2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n2._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n4 = BIT_STR(name='n4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n4._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n5 = BIT_STR(name='n5', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n5._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n8 = BIT_STR(name='n8', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n8._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n10 = BIT_STR(name='n10', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n10._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n20 = BIT_STR(name='n20', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n20._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n40 = BIT_STR(name='n40', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n40._const_sz = ASN1Set(rv=[40], rr=[], ev=None, er=[])
    ___RateMatchPattern_patternType_bitmaps_periodicityAndPattern._cont = ASN1Dict([
        ('n2', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n2),
        ('n4', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n4),
        ('n5', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n5),
        ('n8', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n8),
        ('n10', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n10),
        ('n20', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n20),
        ('n40', ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n40),
        ])
    ___RateMatchPattern_patternType_bitmaps_periodicityAndPattern._ext = []
    __RateMatchPattern_patternType_bitmaps._cont = ASN1Dict([
        ('resourceBlocks', ___RateMatchPattern_patternType_bitmaps_resourceBlocks),
        ('symbolsInResourceBlock', ___RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock),
        ('periodicityAndPattern', ___RateMatchPattern_patternType_bitmaps_periodicityAndPattern),
        ])
    __RateMatchPattern_patternType_bitmaps._ext = []
    __RateMatchPattern_patternType_controlResourceSet = INT(name='controlResourceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')))
    _RateMatchPattern_patternType._cont = ASN1Dict([
        ('bitmaps', __RateMatchPattern_patternType_bitmaps),
        ('controlResourceSet', __RateMatchPattern_patternType_controlResourceSet),
        ])
    _RateMatchPattern_patternType._ext = []
    _RateMatchPattern_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')), opt=True)
    _RateMatchPattern_mode = ENUM(name='mode', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RateMatchPattern_mode._cont = ASN1Dict([('dynamic', 0), ('semiStatic', 1)])
    _RateMatchPattern_mode._ext = []
    RateMatchPattern._cont = ASN1Dict([
        ('rateMatchPatternId', _RateMatchPattern_rateMatchPatternId),
        ('patternType', _RateMatchPattern_patternType),
        ('subcarrierSpacing', _RateMatchPattern_subcarrierSpacing),
        ('mode', _RateMatchPattern_mode),
        ])
    RateMatchPattern._ext = []
    
    #-----< RateMatchPatternId >-----#
    RateMatchPatternId = INT(name='RateMatchPatternId', mode=MODE_TYPE)
    RateMatchPatternId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< RateMatchPatternLTE-CRS >-----#
    RateMatchPatternLTE_CRS = SEQ(name='RateMatchPatternLTE-CRS', mode=MODE_TYPE)
    _RateMatchPatternLTE_CRS_carrierFreqDL = INT(name='carrierFreqDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RateMatchPatternLTE_CRS_carrierFreqDL._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    _RateMatchPatternLTE_CRS_carrierBandwidthDL = ENUM(name='carrierBandwidthDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RateMatchPatternLTE_CRS_carrierBandwidthDL._cont = ASN1Dict([('n6', 0), ('n15', 1), ('n25', 2), ('n50', 3), ('n75', 4), ('n100', 5), ('spare2', 6), ('spare1', 7)])
    _RateMatchPatternLTE_CRS_carrierBandwidthDL._ext = []
    _RateMatchPatternLTE_CRS_mbsfn_SubframeConfigList = SEQ_OF(name='mbsfn-SubframeConfigList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'EUTRA-MBSFN-SubframeConfigList')), opt=True)
    _RateMatchPatternLTE_CRS_nrofCRS_Ports = ENUM(name='nrofCRS-Ports', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RateMatchPatternLTE_CRS_nrofCRS_Ports._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2)])
    _RateMatchPatternLTE_CRS_nrofCRS_Ports._ext = []
    _RateMatchPatternLTE_CRS_v_Shift = ENUM(name='v-Shift', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RateMatchPatternLTE_CRS_v_Shift._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5)])
    _RateMatchPatternLTE_CRS_v_Shift._ext = []
    RateMatchPatternLTE_CRS._cont = ASN1Dict([
        ('carrierFreqDL', _RateMatchPatternLTE_CRS_carrierFreqDL),
        ('carrierBandwidthDL', _RateMatchPatternLTE_CRS_carrierBandwidthDL),
        ('mbsfn-SubframeConfigList', _RateMatchPatternLTE_CRS_mbsfn_SubframeConfigList),
        ('nrofCRS-Ports', _RateMatchPatternLTE_CRS_nrofCRS_Ports),
        ('v-Shift', _RateMatchPatternLTE_CRS_v_Shift),
        ])
    RateMatchPatternLTE_CRS._ext = []
    
    #-----< ReportConfigId >-----#
    ReportConfigId = INT(name='ReportConfigId', mode=MODE_TYPE)
    ReportConfigId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ReportConfigNR >-----#
    ReportConfigNR = SEQ(name='ReportConfigNR', mode=MODE_TYPE)
    _ReportConfigNR_reportType = CHOICE(name='reportType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ReportConfigNR_reportType_periodical = SEQ(name='periodical', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PeriodicalReportConfig')))
    __ReportConfigNR_reportType_eventTriggered = SEQ(name='eventTriggered', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'EventTriggerConfig')))
    __ReportConfigNR_reportType_reportCGI = ENUM(name='reportCGI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ReportConfigNR_reportType_reportCGI._cont = ASN1Dict([('ffsTypeAndValue', 0)])
    __ReportConfigNR_reportType_reportCGI._ext = []
    _ReportConfigNR_reportType._cont = ASN1Dict([
        ('periodical', __ReportConfigNR_reportType_periodical),
        ('eventTriggered', __ReportConfigNR_reportType_eventTriggered),
        ('reportCGI', __ReportConfigNR_reportType_reportCGI),
        ])
    _ReportConfigNR_reportType._ext = []
    ReportConfigNR._cont = ASN1Dict([
        ('reportType', _ReportConfigNR_reportType),
        ])
    ReportConfigNR._ext = []
    
    #-----< EventTriggerConfig >-----#
    EventTriggerConfig = SEQ(name='EventTriggerConfig', mode=MODE_TYPE)
    _EventTriggerConfig_eventId = CHOICE(name='eventId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EventTriggerConfig_eventId_eventA1 = SEQ(name='eventA1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA1_a1_Threshold = CHOICE(name='a1-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantity')))
    ___EventTriggerConfig_eventId_eventA1_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA1_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA1_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    __EventTriggerConfig_eventId_eventA1._cont = ASN1Dict([
        ('a1-Threshold', ___EventTriggerConfig_eventId_eventA1_a1_Threshold),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA1_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA1_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA1_timeToTrigger),
        ])
    __EventTriggerConfig_eventId_eventA1._ext = []
    __EventTriggerConfig_eventId_eventA2 = SEQ(name='eventA2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA2_a2_Threshold = CHOICE(name='a2-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantity')))
    ___EventTriggerConfig_eventId_eventA2_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA2_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA2_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    __EventTriggerConfig_eventId_eventA2._cont = ASN1Dict([
        ('a2-Threshold', ___EventTriggerConfig_eventId_eventA2_a2_Threshold),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA2_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA2_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA2_timeToTrigger),
        ])
    __EventTriggerConfig_eventId_eventA2._ext = []
    __EventTriggerConfig_eventId_eventA3 = SEQ(name='eventA3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA3_a3_Offset = CHOICE(name='a3-Offset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantityOffset')))
    ___EventTriggerConfig_eventId_eventA3_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA3_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA3_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    ___EventTriggerConfig_eventId_eventA3_useWhiteCellList = BOOL(name='useWhiteCellList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EventTriggerConfig_eventId_eventA3._cont = ASN1Dict([
        ('a3-Offset', ___EventTriggerConfig_eventId_eventA3_a3_Offset),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA3_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA3_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA3_timeToTrigger),
        ('useWhiteCellList', ___EventTriggerConfig_eventId_eventA3_useWhiteCellList),
        ])
    __EventTriggerConfig_eventId_eventA3._ext = []
    __EventTriggerConfig_eventId_eventA4 = SEQ(name='eventA4', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA4_a4_Threshold = CHOICE(name='a4-Threshold', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantity')))
    ___EventTriggerConfig_eventId_eventA4_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA4_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA4_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    ___EventTriggerConfig_eventId_eventA4_useWhiteCellList = BOOL(name='useWhiteCellList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EventTriggerConfig_eventId_eventA4._cont = ASN1Dict([
        ('a4-Threshold', ___EventTriggerConfig_eventId_eventA4_a4_Threshold),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA4_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA4_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA4_timeToTrigger),
        ('useWhiteCellList', ___EventTriggerConfig_eventId_eventA4_useWhiteCellList),
        ])
    __EventTriggerConfig_eventId_eventA4._ext = []
    __EventTriggerConfig_eventId_eventA5 = SEQ(name='eventA5', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA5_a5_Threshold1 = CHOICE(name='a5-Threshold1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantity')))
    ___EventTriggerConfig_eventId_eventA5_a5_Threshold2 = CHOICE(name='a5-Threshold2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantity')))
    ___EventTriggerConfig_eventId_eventA5_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA5_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA5_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    ___EventTriggerConfig_eventId_eventA5_useWhiteCellList = BOOL(name='useWhiteCellList', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EventTriggerConfig_eventId_eventA5._cont = ASN1Dict([
        ('a5-Threshold1', ___EventTriggerConfig_eventId_eventA5_a5_Threshold1),
        ('a5-Threshold2', ___EventTriggerConfig_eventId_eventA5_a5_Threshold2),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA5_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA5_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA5_timeToTrigger),
        ('useWhiteCellList', ___EventTriggerConfig_eventId_eventA5_useWhiteCellList),
        ])
    __EventTriggerConfig_eventId_eventA5._ext = []
    __EventTriggerConfig_eventId_eventA6 = SEQ(name='eventA6', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA6_a6_Offset = CHOICE(name='a6-Offset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasTriggerQuantityOffset')))
    ___EventTriggerConfig_eventId_eventA6_reportOnLeave = BOOL(name='reportOnLeave', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___EventTriggerConfig_eventId_eventA6_hysteresis = INT(name='hysteresis', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Hysteresis')))
    ___EventTriggerConfig_eventId_eventA6_timeToTrigger = ENUM(name='timeToTrigger', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TimeToTrigger')))
    ___EventTriggerConfig_eventId_eventA6_useWhiteCellList = BOOL(name='useWhiteCellList', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EventTriggerConfig_eventId_eventA6._cont = ASN1Dict([
        ('a6-Offset', ___EventTriggerConfig_eventId_eventA6_a6_Offset),
        ('reportOnLeave', ___EventTriggerConfig_eventId_eventA6_reportOnLeave),
        ('hysteresis', ___EventTriggerConfig_eventId_eventA6_hysteresis),
        ('timeToTrigger', ___EventTriggerConfig_eventId_eventA6_timeToTrigger),
        ('useWhiteCellList', ___EventTriggerConfig_eventId_eventA6_useWhiteCellList),
        ])
    __EventTriggerConfig_eventId_eventA6._ext = []
    _EventTriggerConfig_eventId._cont = ASN1Dict([
        ('eventA1', __EventTriggerConfig_eventId_eventA1),
        ('eventA2', __EventTriggerConfig_eventId_eventA2),
        ('eventA3', __EventTriggerConfig_eventId_eventA3),
        ('eventA4', __EventTriggerConfig_eventId_eventA4),
        ('eventA5', __EventTriggerConfig_eventId_eventA5),
        ('eventA6', __EventTriggerConfig_eventId_eventA6),
        ])
    _EventTriggerConfig_eventId._ext = []
    _EventTriggerConfig_rsType = ENUM(name='rsType', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NR-RS-Type')))
    _EventTriggerConfig_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportInterval')))
    _EventTriggerConfig_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EventTriggerConfig_reportAmount._cont = ASN1Dict([('r1', 0), ('r2', 1), ('r4', 2), ('r8', 3), ('r16', 4), ('r32', 5), ('r64', 6), ('infinity', 7)])
    _EventTriggerConfig_reportAmount._ext = []
    _EventTriggerConfig_reportQuantityCell = SEQ(name='reportQuantityCell', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasReportQuantity')))
    _EventTriggerConfig_maxReportCells = INT(name='maxReportCells', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EventTriggerConfig_maxReportCells._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _EventTriggerConfig_reportQuantityRsIndexes = SEQ(name='reportQuantityRsIndexes', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasReportQuantity')), opt=True)
    _EventTriggerConfig_maxNrofRSIndexesToReport = INT(name='maxNrofRSIndexesToReport', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EventTriggerConfig_maxNrofRSIndexesToReport._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _EventTriggerConfig_includeBeamMeasurements = BOOL(name='includeBeamMeasurements', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EventTriggerConfig_reportAddNeighMeas = ENUM(name='reportAddNeighMeas', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EventTriggerConfig_reportAddNeighMeas._cont = ASN1Dict([('setup', 0)])
    _EventTriggerConfig_reportAddNeighMeas._ext = []
    EventTriggerConfig._cont = ASN1Dict([
        ('eventId', _EventTriggerConfig_eventId),
        ('rsType', _EventTriggerConfig_rsType),
        ('reportInterval', _EventTriggerConfig_reportInterval),
        ('reportAmount', _EventTriggerConfig_reportAmount),
        ('reportQuantityCell', _EventTriggerConfig_reportQuantityCell),
        ('maxReportCells', _EventTriggerConfig_maxReportCells),
        ('reportQuantityRsIndexes', _EventTriggerConfig_reportQuantityRsIndexes),
        ('maxNrofRSIndexesToReport', _EventTriggerConfig_maxNrofRSIndexesToReport),
        ('includeBeamMeasurements', _EventTriggerConfig_includeBeamMeasurements),
        ('reportAddNeighMeas', _EventTriggerConfig_reportAddNeighMeas),
        ])
    EventTriggerConfig._ext = []
    
    #-----< PeriodicalReportConfig >-----#
    PeriodicalReportConfig = SEQ(name='PeriodicalReportConfig', mode=MODE_TYPE)
    _PeriodicalReportConfig_rsType = ENUM(name='rsType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NR-RS-Type')))
    _PeriodicalReportConfig_reportInterval = ENUM(name='reportInterval', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportInterval')))
    _PeriodicalReportConfig_reportAmount = ENUM(name='reportAmount', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicalReportConfig_reportAmount._cont = ASN1Dict([('r1', 0), ('r2', 1), ('r4', 2), ('r8', 3), ('r16', 4), ('r32', 5), ('r64', 6), ('infinity', 7)])
    _PeriodicalReportConfig_reportAmount._ext = []
    _PeriodicalReportConfig_reportQuantityCell = SEQ(name='reportQuantityCell', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasReportQuantity')))
    _PeriodicalReportConfig_maxReportCells = INT(name='maxReportCells', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicalReportConfig_maxReportCells._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _PeriodicalReportConfig_reportQuantityRsIndexes = SEQ(name='reportQuantityRsIndexes', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasReportQuantity')), opt=True)
    _PeriodicalReportConfig_maxNrofRsIndexesToReport = INT(name='maxNrofRsIndexesToReport', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PeriodicalReportConfig_maxNrofRsIndexesToReport._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _PeriodicalReportConfig_includeBeamMeasurements = BOOL(name='includeBeamMeasurements', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PeriodicalReportConfig_useWhiteCellList = BOOL(name='useWhiteCellList', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PeriodicalReportConfig._cont = ASN1Dict([
        ('rsType', _PeriodicalReportConfig_rsType),
        ('reportInterval', _PeriodicalReportConfig_reportInterval),
        ('reportAmount', _PeriodicalReportConfig_reportAmount),
        ('reportQuantityCell', _PeriodicalReportConfig_reportQuantityCell),
        ('maxReportCells', _PeriodicalReportConfig_maxReportCells),
        ('reportQuantityRsIndexes', _PeriodicalReportConfig_reportQuantityRsIndexes),
        ('maxNrofRsIndexesToReport', _PeriodicalReportConfig_maxNrofRsIndexesToReport),
        ('includeBeamMeasurements', _PeriodicalReportConfig_includeBeamMeasurements),
        ('useWhiteCellList', _PeriodicalReportConfig_useWhiteCellList),
        ])
    PeriodicalReportConfig._ext = []
    
    #-----< NR-RS-Type >-----#
    NR_RS_Type = ENUM(name='NR-RS-Type', mode=MODE_TYPE)
    NR_RS_Type._cont = ASN1Dict([('ssb', 0), ('csi-rs', 1)])
    NR_RS_Type._ext = []
    
    #-----< MeasTriggerQuantity >-----#
    MeasTriggerQuantity = CHOICE(name='MeasTriggerQuantity', mode=MODE_TYPE)
    _MeasTriggerQuantity_rsrp = INT(name='rsrp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    _MeasTriggerQuantity_rsrq = INT(name='rsrq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRQ-Range')))
    _MeasTriggerQuantity_sinr = INT(name='sinr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SINR-Range')))
    MeasTriggerQuantity._cont = ASN1Dict([
        ('rsrp', _MeasTriggerQuantity_rsrp),
        ('rsrq', _MeasTriggerQuantity_rsrq),
        ('sinr', _MeasTriggerQuantity_sinr),
        ])
    MeasTriggerQuantity._ext = []
    
    #-----< MeasTriggerQuantityOffset >-----#
    MeasTriggerQuantityOffset = CHOICE(name='MeasTriggerQuantityOffset', mode=MODE_TYPE)
    _MeasTriggerQuantityOffset_rsrp = INT(name='rsrp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasTriggerQuantityOffset_rsrp._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=30)], ev=None, er=[])
    _MeasTriggerQuantityOffset_rsrq = INT(name='rsrq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasTriggerQuantityOffset_rsrq._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=30)], ev=None, er=[])
    _MeasTriggerQuantityOffset_sinr = INT(name='sinr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasTriggerQuantityOffset_sinr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-30, ub=30)], ev=None, er=[])
    MeasTriggerQuantityOffset._cont = ASN1Dict([
        ('rsrp', _MeasTriggerQuantityOffset_rsrp),
        ('rsrq', _MeasTriggerQuantityOffset_rsrq),
        ('sinr', _MeasTriggerQuantityOffset_sinr),
        ])
    MeasTriggerQuantityOffset._ext = []
    
    #-----< MeasReportQuantity >-----#
    MeasReportQuantity = SEQ(name='MeasReportQuantity', mode=MODE_TYPE)
    _MeasReportQuantity_rsrp = BOOL(name='rsrp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasReportQuantity_rsrq = BOOL(name='rsrq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MeasReportQuantity_sinr = BOOL(name='sinr', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    MeasReportQuantity._cont = ASN1Dict([
        ('rsrp', _MeasReportQuantity_rsrp),
        ('rsrq', _MeasReportQuantity_rsrq),
        ('sinr', _MeasReportQuantity_sinr),
        ])
    MeasReportQuantity._ext = []
    
    #-----< ReportConfigToAddModList >-----#
    ReportConfigToAddModList = SEQ_OF(name='ReportConfigToAddModList', mode=MODE_TYPE)
    _ReportConfigToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigToAddMod')))
    ReportConfigToAddModList._cont = _ReportConfigToAddModList__item_
    ReportConfigToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< ReportConfigToAddMod >-----#
    ReportConfigToAddMod = SEQ(name='ReportConfigToAddMod', mode=MODE_TYPE)
    _ReportConfigToAddMod_reportConfigId = INT(name='reportConfigId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigId')))
    _ReportConfigToAddMod_reportConfig = CHOICE(name='reportConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __ReportConfigToAddMod_reportConfig_reportConfigNR = SEQ(name='reportConfigNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigNR')))
    _ReportConfigToAddMod_reportConfig._cont = ASN1Dict([
        ('reportConfigNR', __ReportConfigToAddMod_reportConfig_reportConfigNR),
        ])
    _ReportConfigToAddMod_reportConfig._ext = []
    ReportConfigToAddMod._cont = ASN1Dict([
        ('reportConfigId', _ReportConfigToAddMod_reportConfigId),
        ('reportConfig', _ReportConfigToAddMod_reportConfig),
        ])
    ReportConfigToAddMod._ext = []
    
    #-----< ReportInterval >-----#
    ReportInterval = ENUM(name='ReportInterval', mode=MODE_TYPE)
    ReportInterval._cont = ASN1Dict([('ms120', 0), ('ms240', 1), ('ms480', 2), ('ms640', 3), ('ms1024', 4), ('ms2048', 5), ('ms5120', 6), ('ms10240', 7), ('ms20480', 8), ('ms40960', 9), ('min1', 10), ('min6', 11), ('min12', 12), ('min30', 13)])
    ReportInterval._ext = []
    
    #-----< RLC-Config >-----#
    RLC_Config = CHOICE(name='RLC-Config', mode=MODE_TYPE)
    _RLC_Config_am = SEQ(name='am', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_am_ul_AM_RLC = SEQ(name='ul-AM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-AM-RLC')))
    __RLC_Config_am_dl_AM_RLC = SEQ(name='dl-AM-RLC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DL-AM-RLC')))
    _RLC_Config_am._cont = ASN1Dict([
        ('ul-AM-RLC', __RLC_Config_am_ul_AM_RLC),
        ('dl-AM-RLC', __RLC_Config_am_dl_AM_RLC),
        ])
    _RLC_Config_am._ext = []
    _RLC_Config_um_Bi_Directional = SEQ(name='um-Bi-Directional', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Bi_Directional_ul_UM_RLC = SEQ(name='ul-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-UM-RLC')))
    __RLC_Config_um_Bi_Directional_dl_UM_RLC = SEQ(name='dl-UM-RLC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DL-UM-RLC')))
    _RLC_Config_um_Bi_Directional._cont = ASN1Dict([
        ('ul-UM-RLC', __RLC_Config_um_Bi_Directional_ul_UM_RLC),
        ('dl-UM-RLC', __RLC_Config_um_Bi_Directional_dl_UM_RLC),
        ])
    _RLC_Config_um_Bi_Directional._ext = []
    _RLC_Config_um_Uni_Directional_UL = SEQ(name='um-Uni-Directional-UL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC = SEQ(name='ul-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UL-UM-RLC')))
    _RLC_Config_um_Uni_Directional_UL._cont = ASN1Dict([
        ('ul-UM-RLC', __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC),
        ])
    _RLC_Config_um_Uni_Directional_UL._ext = []
    _RLC_Config_um_Uni_Directional_DL = SEQ(name='um-Uni-Directional-DL', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC = SEQ(name='dl-UM-RLC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'DL-UM-RLC')))
    _RLC_Config_um_Uni_Directional_DL._cont = ASN1Dict([
        ('dl-UM-RLC', __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC),
        ])
    _RLC_Config_um_Uni_Directional_DL._ext = []
    RLC_Config._cont = ASN1Dict([
        ('am', _RLC_Config_am),
        ('um-Bi-Directional', _RLC_Config_um_Bi_Directional),
        ('um-Uni-Directional-UL', _RLC_Config_um_Uni_Directional_UL),
        ('um-Uni-Directional-DL', _RLC_Config_um_Uni_Directional_DL),
        ])
    RLC_Config._ext = []
    
    #-----< UL-AM-RLC >-----#
    UL_AM_RLC = SEQ(name='UL-AM-RLC', mode=MODE_TYPE)
    _UL_AM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SN-FieldLengthAM')))
    _UL_AM_RLC_t_PollRetransmit = ENUM(name='t-PollRetransmit', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'T-PollRetransmit')))
    _UL_AM_RLC_pollPDU = ENUM(name='pollPDU', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PollPDU')))
    _UL_AM_RLC_pollByte = ENUM(name='pollByte', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PollByte')))
    _UL_AM_RLC_maxRetxThreshold = ENUM(name='maxRetxThreshold', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UL_AM_RLC_maxRetxThreshold._cont = ASN1Dict([('t1', 0), ('t2', 1), ('t3', 2), ('t4', 3), ('t6', 4), ('t8', 5), ('t16', 6), ('t32', 7)])
    _UL_AM_RLC_maxRetxThreshold._ext = []
    UL_AM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _UL_AM_RLC_sn_FieldLength),
        ('t-PollRetransmit', _UL_AM_RLC_t_PollRetransmit),
        ('pollPDU', _UL_AM_RLC_pollPDU),
        ('pollByte', _UL_AM_RLC_pollByte),
        ('maxRetxThreshold', _UL_AM_RLC_maxRetxThreshold),
        ])
    UL_AM_RLC._ext = []
    
    #-----< DL-AM-RLC >-----#
    DL_AM_RLC = SEQ(name='DL-AM-RLC', mode=MODE_TYPE)
    _DL_AM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SN-FieldLengthAM')))
    _DL_AM_RLC_t_Reassembly = ENUM(name='t-Reassembly', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'T-Reassembly')))
    _DL_AM_RLC_t_StatusProhibit = ENUM(name='t-StatusProhibit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'T-StatusProhibit')))
    DL_AM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _DL_AM_RLC_sn_FieldLength),
        ('t-Reassembly', _DL_AM_RLC_t_Reassembly),
        ('t-StatusProhibit', _DL_AM_RLC_t_StatusProhibit),
        ])
    DL_AM_RLC._ext = []
    
    #-----< UL-UM-RLC >-----#
    UL_UM_RLC = SEQ(name='UL-UM-RLC', mode=MODE_TYPE)
    _UL_UM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SN-FieldLengthUM')))
    UL_UM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _UL_UM_RLC_sn_FieldLength),
        ])
    UL_UM_RLC._ext = []
    
    #-----< DL-UM-RLC >-----#
    DL_UM_RLC = SEQ(name='DL-UM-RLC', mode=MODE_TYPE)
    _DL_UM_RLC_sn_FieldLength = ENUM(name='sn-FieldLength', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SN-FieldLengthUM')))
    _DL_UM_RLC_t_Reassembly = ENUM(name='t-Reassembly', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'T-Reassembly')))
    DL_UM_RLC._cont = ASN1Dict([
        ('sn-FieldLength', _DL_UM_RLC_sn_FieldLength),
        ('t-Reassembly', _DL_UM_RLC_t_Reassembly),
        ])
    DL_UM_RLC._ext = []
    
    #-----< T-PollRetransmit >-----#
    T_PollRetransmit = ENUM(name='T-PollRetransmit', mode=MODE_TYPE)
    T_PollRetransmit._cont = ASN1Dict([('ms5', 0), ('ms10', 1), ('ms15', 2), ('ms20', 3), ('ms25', 4), ('ms30', 5), ('ms35', 6), ('ms40', 7), ('ms45', 8), ('ms50', 9), ('ms55', 10), ('ms60', 11), ('ms65', 12), ('ms70', 13), ('ms75', 14), ('ms80', 15), ('ms85', 16), ('ms90', 17), ('ms95', 18), ('ms100', 19), ('ms105', 20), ('ms110', 21), ('ms115', 22), ('ms120', 23), ('ms125', 24), ('ms130', 25), ('ms135', 26), ('ms140', 27), ('ms145', 28), ('ms150', 29), ('ms155', 30), ('ms160', 31), ('ms165', 32), ('ms170', 33), ('ms175', 34), ('ms180', 35), ('ms185', 36), ('ms190', 37), ('ms195', 38), ('ms200', 39), ('ms205', 40), ('ms210', 41), ('ms215', 42), ('ms220', 43), ('ms225', 44), ('ms230', 45), ('ms235', 46), ('ms240', 47), ('ms245', 48), ('ms250', 49), ('ms300', 50), ('ms350', 51), ('ms400', 52), ('ms450', 53), ('ms500', 54), ('ms800', 55), ('ms1000', 56), ('ms2000', 57), ('ms4000', 58), ('spare5', 59), ('spare4', 60), ('spare3', 61), ('spare2', 62), ('spare1', 63)])
    T_PollRetransmit._ext = []
    
    #-----< PollPDU >-----#
    PollPDU = ENUM(name='PollPDU', mode=MODE_TYPE)
    PollPDU._cont = ASN1Dict([('p4', 0), ('p8', 1), ('p16', 2), ('p32', 3), ('p64', 4), ('p128', 5), ('p256', 6), ('p512', 7), ('p1024', 8), ('p2048', 9), ('p4096', 10), ('p6144', 11), ('p8192', 12), ('p12288', 13), ('p16384', 14), ('p20480', 15), ('p24576', 16), ('p28672', 17), ('p32768', 18), ('p40960', 19), ('p49152', 20), ('p57344', 21), ('p65536', 22), ('infinity', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    PollPDU._ext = []
    
    #-----< PollByte >-----#
    PollByte = ENUM(name='PollByte', mode=MODE_TYPE)
    PollByte._cont = ASN1Dict([('kB1', 0), ('kB2', 1), ('kB5', 2), ('kB8', 3), ('kB10', 4), ('kB15', 5), ('kB25', 6), ('kB50', 7), ('kB75', 8), ('kB100', 9), ('kB125', 10), ('kB250', 11), ('kB375', 12), ('kB500', 13), ('kB750', 14), ('kB1000', 15), ('kB1250', 16), ('kB1500', 17), ('kB2000', 18), ('kB3000', 19), ('kB4000', 20), ('kB4500', 21), ('kB5000', 22), ('kB5500', 23), ('kB6000', 24), ('kB6500', 25), ('kB7000', 26), ('kB7500', 27), ('mB8', 28), ('mB9', 29), ('mB10', 30), ('mB11', 31), ('mB12', 32), ('mB13', 33), ('mB14', 34), ('mB15', 35), ('mB16', 36), ('mB17', 37), ('mB18', 38), ('mB20', 39), ('mB25', 40), ('mB30', 41), ('mB40', 42), ('infinity', 43), ('spare20', 44), ('spare19', 45), ('spare18', 46), ('spare17', 47), ('spare16', 48), ('spare15', 49), ('spare14', 50), ('spare13', 51), ('spare12', 52), ('spare11', 53), ('spare10', 54), ('spare9', 55), ('spare8', 56), ('spare7', 57), ('spare6', 58), ('spare5', 59), ('spare4', 60), ('spare3', 61), ('spare2', 62), ('spare1', 63)])
    PollByte._ext = []
    
    #-----< T-Reassembly >-----#
    T_Reassembly = ENUM(name='T-Reassembly', mode=MODE_TYPE)
    T_Reassembly._cont = ASN1Dict([('ms0', 0), ('ms5', 1), ('ms10', 2), ('ms15', 3), ('ms20', 4), ('ms25', 5), ('ms30', 6), ('ms35', 7), ('ms40', 8), ('ms45', 9), ('ms50', 10), ('ms55', 11), ('ms60', 12), ('ms65', 13), ('ms70', 14), ('ms75', 15), ('ms80', 16), ('ms85', 17), ('ms90', 18), ('ms95', 19), ('ms100', 20), ('ms110', 21), ('ms120', 22), ('ms130', 23), ('ms140', 24), ('ms150', 25), ('ms160', 26), ('ms170', 27), ('ms180', 28), ('ms190', 29), ('ms200', 30), ('spare1', 31)])
    T_Reassembly._ext = []
    
    #-----< T-StatusProhibit >-----#
    T_StatusProhibit = ENUM(name='T-StatusProhibit', mode=MODE_TYPE)
    T_StatusProhibit._cont = ASN1Dict([('ms0', 0), ('ms5', 1), ('ms10', 2), ('ms15', 3), ('ms20', 4), ('ms25', 5), ('ms30', 6), ('ms35', 7), ('ms40', 8), ('ms45', 9), ('ms50', 10), ('ms55', 11), ('ms60', 12), ('ms65', 13), ('ms70', 14), ('ms75', 15), ('ms80', 16), ('ms85', 17), ('ms90', 18), ('ms95', 19), ('ms100', 20), ('ms105', 21), ('ms110', 22), ('ms115', 23), ('ms120', 24), ('ms125', 25), ('ms130', 26), ('ms135', 27), ('ms140', 28), ('ms145', 29), ('ms150', 30), ('ms155', 31), ('ms160', 32), ('ms165', 33), ('ms170', 34), ('ms175', 35), ('ms180', 36), ('ms185', 37), ('ms190', 38), ('ms195', 39), ('ms200', 40), ('ms205', 41), ('ms210', 42), ('ms215', 43), ('ms220', 44), ('ms225', 45), ('ms230', 46), ('ms235', 47), ('ms240', 48), ('ms245', 49), ('ms250', 50), ('ms300', 51), ('ms350', 52), ('ms400', 53), ('ms450', 54), ('ms500', 55), ('ms800', 56), ('ms1000', 57), ('ms1200', 58), ('ms1600', 59), ('ms2000', 60), ('ms2400', 61), ('spare2', 62), ('spare1', 63)])
    T_StatusProhibit._ext = []
    
    #-----< SN-FieldLengthUM >-----#
    SN_FieldLengthUM = ENUM(name='SN-FieldLengthUM', mode=MODE_TYPE)
    SN_FieldLengthUM._cont = ASN1Dict([('size6', 0), ('size12', 1)])
    SN_FieldLengthUM._ext = []
    
    #-----< SN-FieldLengthAM >-----#
    SN_FieldLengthAM = ENUM(name='SN-FieldLengthAM', mode=MODE_TYPE)
    SN_FieldLengthAM._cont = ASN1Dict([('size12', 0), ('size18', 1)])
    SN_FieldLengthAM._ext = []
    
    #-----< RLF-TimersAndConstants >-----#
    RLF_TimersAndConstants = SEQ(name='RLF-TimersAndConstants', mode=MODE_TYPE)
    _RLF_TimersAndConstants_t310 = ENUM(name='t310', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RLF_TimersAndConstants_t310._cont = ASN1Dict([('ms0', 0), ('ms50', 1), ('ms100', 2), ('ms200', 3), ('ms500', 4), ('ms1000', 5), ('ms2000', 6), ('ms4000', 7), ('ms6000', 8)])
    _RLF_TimersAndConstants_t310._ext = []
    _RLF_TimersAndConstants_n310 = ENUM(name='n310', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RLF_TimersAndConstants_n310._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n6', 4), ('n8', 5), ('n10', 6), ('n20', 7)])
    _RLF_TimersAndConstants_n310._ext = []
    _RLF_TimersAndConstants_n311 = ENUM(name='n311', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RLF_TimersAndConstants_n311._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n3', 2), ('n4', 3), ('n5', 4), ('n6', 5), ('n8', 6), ('n10', 7)])
    _RLF_TimersAndConstants_n311._ext = []
    RLF_TimersAndConstants._cont = ASN1Dict([
        ('t310', _RLF_TimersAndConstants_t310),
        ('n310', _RLF_TimersAndConstants_n310),
        ('n311', _RLF_TimersAndConstants_n311),
        ])
    RLF_TimersAndConstants._ext = []
    
    #-----< RNTI-Value >-----#
    RNTI_Value = INT(name='RNTI-Value', mode=MODE_TYPE)
    RNTI_Value._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< RSRP-Range >-----#
    RSRP_Range = INT(name='RSRP-Range', mode=MODE_TYPE)
    RSRP_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=124)], ev=None, er=[])
    
    #-----< RSRQ-Range >-----#
    RSRQ_Range = INT(name='RSRQ-Range', mode=MODE_TYPE)
    RSRQ_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< SCellIndex >-----#
    SCellIndex = INT(name='SCellIndex', mode=MODE_TYPE)
    SCellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    
    #-----< SchedulingRequestConfig >-----#
    SchedulingRequestConfig = SEQ(name='SchedulingRequestConfig', mode=MODE_TYPE)
    _SchedulingRequestConfig_schedulingRequestToAddModList = SEQ_OF(name='schedulingRequestToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SchedulingRequestConfig_schedulingRequestToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestToAddMod')))
    _SchedulingRequestConfig_schedulingRequestToAddModList._cont = __SchedulingRequestConfig_schedulingRequestToAddModList__item_
    _SchedulingRequestConfig_schedulingRequestToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _SchedulingRequestConfig_schedulingRequestToReleaseList = SEQ_OF(name='schedulingRequestToReleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SchedulingRequestConfig_schedulingRequestToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestId')))
    _SchedulingRequestConfig_schedulingRequestToReleaseList._cont = __SchedulingRequestConfig_schedulingRequestToReleaseList__item_
    _SchedulingRequestConfig_schedulingRequestToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    SchedulingRequestConfig._cont = ASN1Dict([
        ('schedulingRequestToAddModList', _SchedulingRequestConfig_schedulingRequestToAddModList),
        ('schedulingRequestToReleaseList', _SchedulingRequestConfig_schedulingRequestToReleaseList),
        ])
    SchedulingRequestConfig._ext = []
    
    #-----< SchedulingRequestToAddMod >-----#
    SchedulingRequestToAddMod = SEQ(name='SchedulingRequestToAddMod', mode=MODE_TYPE)
    _SchedulingRequestToAddMod_sr_ConfigIndex = INT(name='sr-ConfigIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestId')))
    _SchedulingRequestToAddMod_sr_ProhibitTimer = ENUM(name='sr-ProhibitTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SchedulingRequestToAddMod_sr_ProhibitTimer._cont = ASN1Dict([('ms1', 0), ('ms2', 1), ('ms4', 2), ('ms8', 3), ('ms16', 4), ('ms32', 5), ('ms64', 6), ('ms128', 7)])
    _SchedulingRequestToAddMod_sr_ProhibitTimer._ext = []
    _SchedulingRequestToAddMod_sr_TransMax = ENUM(name='sr-TransMax', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SchedulingRequestToAddMod_sr_TransMax._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n16', 2), ('n32', 3), ('n64', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    _SchedulingRequestToAddMod_sr_TransMax._ext = []
    SchedulingRequestToAddMod._cont = ASN1Dict([
        ('sr-ConfigIndex', _SchedulingRequestToAddMod_sr_ConfigIndex),
        ('sr-ProhibitTimer', _SchedulingRequestToAddMod_sr_ProhibitTimer),
        ('sr-TransMax', _SchedulingRequestToAddMod_sr_TransMax),
        ])
    SchedulingRequestToAddMod._ext = []
    
    #-----< SchedulingRequestId >-----#
    SchedulingRequestId = INT(name='SchedulingRequestId', mode=MODE_TYPE)
    SchedulingRequestId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SchedulingRequestResourceConfig >-----#
    SchedulingRequestResourceConfig = SEQ(name='SchedulingRequestResourceConfig', mode=MODE_TYPE)
    _SchedulingRequestResourceConfig_schedulingRequestResourceId = INT(name='schedulingRequestResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestResourceId')))
    _SchedulingRequestResourceConfig_schedulingRequestID = INT(name='schedulingRequestID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SchedulingRequestId')))
    _SchedulingRequestResourceConfig_periodicityAndOffset = CHOICE(name='periodicityAndOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SchedulingRequestResourceConfig_periodicityAndOffset_sym2 = NULL(name='sym2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sym6or7 = NULL(name='sym6or7', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl1 = NULL(name='sl1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl2 = INT(name='sl2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl4 = INT(name='sl4', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl5 = INT(name='sl5', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl8 = INT(name='sl8', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl10 = INT(name='sl10', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl16 = INT(name='sl16', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl20 = INT(name='sl20', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl40 = INT(name='sl40', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl80 = INT(name='sl80', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl160 = INT(name='sl160', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl320 = INT(name='sl320', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl640 = INT(name='sl640', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SchedulingRequestResourceConfig_periodicityAndOffset_sl640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    _SchedulingRequestResourceConfig_periodicityAndOffset._cont = ASN1Dict([
        ('sym2', __SchedulingRequestResourceConfig_periodicityAndOffset_sym2),
        ('sym6or7', __SchedulingRequestResourceConfig_periodicityAndOffset_sym6or7),
        ('sl1', __SchedulingRequestResourceConfig_periodicityAndOffset_sl1),
        ('sl2', __SchedulingRequestResourceConfig_periodicityAndOffset_sl2),
        ('sl4', __SchedulingRequestResourceConfig_periodicityAndOffset_sl4),
        ('sl5', __SchedulingRequestResourceConfig_periodicityAndOffset_sl5),
        ('sl8', __SchedulingRequestResourceConfig_periodicityAndOffset_sl8),
        ('sl10', __SchedulingRequestResourceConfig_periodicityAndOffset_sl10),
        ('sl16', __SchedulingRequestResourceConfig_periodicityAndOffset_sl16),
        ('sl20', __SchedulingRequestResourceConfig_periodicityAndOffset_sl20),
        ('sl40', __SchedulingRequestResourceConfig_periodicityAndOffset_sl40),
        ('sl80', __SchedulingRequestResourceConfig_periodicityAndOffset_sl80),
        ('sl160', __SchedulingRequestResourceConfig_periodicityAndOffset_sl160),
        ('sl320', __SchedulingRequestResourceConfig_periodicityAndOffset_sl320),
        ('sl640', __SchedulingRequestResourceConfig_periodicityAndOffset_sl640),
        ])
    _SchedulingRequestResourceConfig_periodicityAndOffset._ext = []
    _SchedulingRequestResourceConfig_resource = INT(name='resource', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-ResourceId')), opt=True)
    SchedulingRequestResourceConfig._cont = ASN1Dict([
        ('schedulingRequestResourceId', _SchedulingRequestResourceConfig_schedulingRequestResourceId),
        ('schedulingRequestID', _SchedulingRequestResourceConfig_schedulingRequestID),
        ('periodicityAndOffset', _SchedulingRequestResourceConfig_periodicityAndOffset),
        ('resource', _SchedulingRequestResourceConfig_resource),
        ])
    SchedulingRequestResourceConfig._ext = []
    
    #-----< SchedulingRequestResourceId >-----#
    SchedulingRequestResourceId = INT(name='SchedulingRequestResourceId', mode=MODE_TYPE)
    SchedulingRequestResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    
    #-----< ScramblingId >-----#
    ScramblingId = INT(name='ScramblingId', mode=MODE_TYPE)
    ScramblingId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    
    #-----< SCS-SpecificCarrier >-----#
    SCS_SpecificCarrier = SEQ(name='SCS-SpecificCarrier', mode=MODE_TYPE)
    _SCS_SpecificCarrier_offsetToCarrier = INT(name='offsetToCarrier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SCS_SpecificCarrier_offsetToCarrier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2199)], ev=None, er=[])
    _SCS_SpecificCarrier_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _SCS_SpecificCarrier_k0 = ENUM(name='k0', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SCS_SpecificCarrier_k0._cont = ASN1Dict([('n-6', 0), ('n0', 1), ('n6', 2)])
    _SCS_SpecificCarrier_k0._ext = []
    _SCS_SpecificCarrier_carrierBandwidth = INT(name='carrierBandwidth', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SCS_SpecificCarrier_carrierBandwidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=275)], ev=None, er=[])
    SCS_SpecificCarrier._cont = ASN1Dict([
        ('offsetToCarrier', _SCS_SpecificCarrier_offsetToCarrier),
        ('subcarrierSpacing', _SCS_SpecificCarrier_subcarrierSpacing),
        ('k0', _SCS_SpecificCarrier_k0),
        ('carrierBandwidth', _SCS_SpecificCarrier_carrierBandwidth),
        ])
    SCS_SpecificCarrier._ext = []
    
    #-----< SDAP-Config >-----#
    SDAP_Config = SEQ(name='SDAP-Config', mode=MODE_TYPE)
    _SDAP_Config_pdu_Session = INT(name='pdu-Session', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDU-SessionID')))
    _SDAP_Config_sdap_HeaderDL = ENUM(name='sdap-HeaderDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SDAP_Config_sdap_HeaderDL._cont = ASN1Dict([('present', 0), ('absent', 1)])
    _SDAP_Config_sdap_HeaderDL._ext = []
    _SDAP_Config_sdap_HeaderUL = ENUM(name='sdap-HeaderUL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SDAP_Config_sdap_HeaderUL._cont = ASN1Dict([('present', 0), ('absent', 1)])
    _SDAP_Config_sdap_HeaderUL._ext = []
    _SDAP_Config_defaultDRB = BOOL(name='defaultDRB', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SDAP_Config_mappedQoS_FlowsToAdd = SEQ_OF(name='mappedQoS-FlowsToAdd', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SDAP_Config_mappedQoS_FlowsToAdd__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QFI')))
    _SDAP_Config_mappedQoS_FlowsToAdd._cont = __SDAP_Config_mappedQoS_FlowsToAdd__item_
    _SDAP_Config_mappedQoS_FlowsToAdd._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _SDAP_Config_mappedQoS_FlowsToRelease = SEQ_OF(name='mappedQoS-FlowsToRelease', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SDAP_Config_mappedQoS_FlowsToRelease__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QFI')))
    _SDAP_Config_mappedQoS_FlowsToRelease._cont = __SDAP_Config_mappedQoS_FlowsToRelease__item_
    _SDAP_Config_mappedQoS_FlowsToRelease._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    SDAP_Config._cont = ASN1Dict([
        ('pdu-Session', _SDAP_Config_pdu_Session),
        ('sdap-HeaderDL', _SDAP_Config_sdap_HeaderDL),
        ('sdap-HeaderUL', _SDAP_Config_sdap_HeaderUL),
        ('defaultDRB', _SDAP_Config_defaultDRB),
        ('mappedQoS-FlowsToAdd', _SDAP_Config_mappedQoS_FlowsToAdd),
        ('mappedQoS-FlowsToRelease', _SDAP_Config_mappedQoS_FlowsToRelease),
        ])
    SDAP_Config._ext = []
    
    #-----< QFI >-----#
    QFI = INT(name='QFI', mode=MODE_TYPE)
    QFI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< PDU-SessionID >-----#
    PDU_SessionID = INT(name='PDU-SessionID', mode=MODE_TYPE)
    PDU_SessionID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SearchSpace >-----#
    SearchSpace = SEQ(name='SearchSpace', mode=MODE_TYPE)
    _SearchSpace_searchSpaceId = INT(name='searchSpaceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SearchSpaceId')))
    _SearchSpace_controlResourceSetId = INT(name='controlResourceSetId', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ControlResourceSetId')), opt=True)
    _SearchSpace_monitoringSlotPeriodicityAndOffset = CHOICE(name='monitoringSlotPeriodicityAndOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl1 = NULL(name='sl1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl2 = INT(name='sl2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl4 = INT(name='sl4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl5 = INT(name='sl5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl8 = INT(name='sl8', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl10 = INT(name='sl10', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl16 = INT(name='sl16', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl20 = INT(name='sl20', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_monitoringSlotPeriodicityAndOffset_sl20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    _SearchSpace_monitoringSlotPeriodicityAndOffset._cont = ASN1Dict([
        ('sl1', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl1),
        ('sl2', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl2),
        ('sl4', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl4),
        ('sl5', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl5),
        ('sl8', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl8),
        ('sl10', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl10),
        ('sl16', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl16),
        ('sl20', __SearchSpace_monitoringSlotPeriodicityAndOffset_sl20),
        ])
    _SearchSpace_monitoringSlotPeriodicityAndOffset._ext = []
    _SearchSpace_monitoringSymbolsWithinSlot = BIT_STR(name='monitoringSymbolsWithinSlot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SearchSpace_monitoringSymbolsWithinSlot._const_sz = ASN1Set(rv=[14], rr=[], ev=None, er=[])
    _SearchSpace_nrofCandidates = SEQ(name='nrofCandidates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SearchSpace_nrofCandidates_aggregationLevel1 = ENUM(name='aggregationLevel1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_nrofCandidates_aggregationLevel1._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5), ('n6', 6), ('n8', 7)])
    __SearchSpace_nrofCandidates_aggregationLevel1._ext = []
    __SearchSpace_nrofCandidates_aggregationLevel2 = ENUM(name='aggregationLevel2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_nrofCandidates_aggregationLevel2._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5), ('n6', 6), ('n8', 7)])
    __SearchSpace_nrofCandidates_aggregationLevel2._ext = []
    __SearchSpace_nrofCandidates_aggregationLevel4 = ENUM(name='aggregationLevel4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_nrofCandidates_aggregationLevel4._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5), ('n6', 6), ('n8', 7)])
    __SearchSpace_nrofCandidates_aggregationLevel4._ext = []
    __SearchSpace_nrofCandidates_aggregationLevel8 = ENUM(name='aggregationLevel8', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_nrofCandidates_aggregationLevel8._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5), ('n6', 6), ('n8', 7)])
    __SearchSpace_nrofCandidates_aggregationLevel8._ext = []
    __SearchSpace_nrofCandidates_aggregationLevel16 = ENUM(name='aggregationLevel16', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SearchSpace_nrofCandidates_aggregationLevel16._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n3', 3), ('n4', 4), ('n5', 5), ('n6', 6), ('n8', 7)])
    __SearchSpace_nrofCandidates_aggregationLevel16._ext = []
    _SearchSpace_nrofCandidates._cont = ASN1Dict([
        ('aggregationLevel1', __SearchSpace_nrofCandidates_aggregationLevel1),
        ('aggregationLevel2', __SearchSpace_nrofCandidates_aggregationLevel2),
        ('aggregationLevel4', __SearchSpace_nrofCandidates_aggregationLevel4),
        ('aggregationLevel8', __SearchSpace_nrofCandidates_aggregationLevel8),
        ('aggregationLevel16', __SearchSpace_nrofCandidates_aggregationLevel16),
        ])
    _SearchSpace_nrofCandidates._ext = []
    _SearchSpace_searchSpaceType = CHOICE(name='searchSpaceType', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SearchSpace_searchSpaceType_common = SEQ(name='common', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SearchSpace_searchSpaceType_common_dci_Format0_0_AndFormat1_0 = SEQ(name='dci-Format0-0-AndFormat1-0', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SearchSpace_searchSpaceType_common_dci_Format0_0_AndFormat1_0._cont = ASN1Dict([
        ])
    ___SearchSpace_searchSpaceType_common_dci_Format0_0_AndFormat1_0._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_0 = SEQ(name='dci-Format2-0', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI = SEQ(name='nrofCandidates-SFI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel1 = ENUM(name='aggregationLevel1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel1._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel1._ext = []
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel2 = ENUM(name='aggregationLevel2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel2._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel2._ext = []
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel4 = ENUM(name='aggregationLevel4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel4._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel4._ext = []
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel8 = ENUM(name='aggregationLevel8', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel8._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel8._ext = []
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel16 = ENUM(name='aggregationLevel16', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel16._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel16._ext = []
    ____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI._cont = ASN1Dict([
        ('aggregationLevel1', _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel1),
        ('aggregationLevel2', _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel2),
        ('aggregationLevel4', _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel4),
        ('aggregationLevel8', _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel8),
        ('aggregationLevel16', _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel16),
        ])
    ____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_0._cont = ASN1Dict([
        ('nrofCandidates-SFI', ____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI),
        ])
    ___SearchSpace_searchSpaceType_common_dci_Format2_0._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_1 = SEQ(name='dci-Format2-1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SearchSpace_searchSpaceType_common_dci_Format2_1._cont = ASN1Dict([
        ])
    ___SearchSpace_searchSpaceType_common_dci_Format2_1._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_2 = SEQ(name='dci-Format2-2', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SearchSpace_searchSpaceType_common_dci_Format2_2._cont = ASN1Dict([
        ])
    ___SearchSpace_searchSpaceType_common_dci_Format2_2._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_3 = SEQ(name='dci-Format2-3', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_monitoringPeriodicity = ENUM(name='monitoringPeriodicity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_monitoringPeriodicity._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n5', 3), ('n8', 4), ('n10', 5), ('n16', 6), ('n20', 7)])
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_monitoringPeriodicity._ext = []
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_nrofPDCCH_Candidates = ENUM(name='nrofPDCCH-Candidates', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_nrofPDCCH_Candidates._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    ____SearchSpace_searchSpaceType_common_dci_Format2_3_nrofPDCCH_Candidates._ext = []
    ___SearchSpace_searchSpaceType_common_dci_Format2_3._cont = ASN1Dict([
        ('monitoringPeriodicity', ____SearchSpace_searchSpaceType_common_dci_Format2_3_monitoringPeriodicity),
        ('nrofPDCCH-Candidates', ____SearchSpace_searchSpaceType_common_dci_Format2_3_nrofPDCCH_Candidates),
        ])
    ___SearchSpace_searchSpaceType_common_dci_Format2_3._ext = []
    __SearchSpace_searchSpaceType_common._cont = ASN1Dict([
        ('dci-Format0-0-AndFormat1-0', ___SearchSpace_searchSpaceType_common_dci_Format0_0_AndFormat1_0),
        ('dci-Format2-0', ___SearchSpace_searchSpaceType_common_dci_Format2_0),
        ('dci-Format2-1', ___SearchSpace_searchSpaceType_common_dci_Format2_1),
        ('dci-Format2-2', ___SearchSpace_searchSpaceType_common_dci_Format2_2),
        ('dci-Format2-3', ___SearchSpace_searchSpaceType_common_dci_Format2_3),
        ])
    __SearchSpace_searchSpaceType_common._ext = []
    __SearchSpace_searchSpaceType_ue_Specific = SEQ(name='ue-Specific', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SearchSpace_searchSpaceType_ue_Specific_dci_Formats = ENUM(name='dci-Formats', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SearchSpace_searchSpaceType_ue_Specific_dci_Formats._cont = ASN1Dict([('formats0-0-And-1-0', 0), ('formats0-1-And-1-1', 1)])
    ___SearchSpace_searchSpaceType_ue_Specific_dci_Formats._ext = []
    __SearchSpace_searchSpaceType_ue_Specific._cont = ASN1Dict([
        ('dci-Formats', ___SearchSpace_searchSpaceType_ue_Specific_dci_Formats),
        ])
    __SearchSpace_searchSpaceType_ue_Specific._ext = []
    _SearchSpace_searchSpaceType._cont = ASN1Dict([
        ('common', __SearchSpace_searchSpaceType_common),
        ('ue-Specific', __SearchSpace_searchSpaceType_ue_Specific),
        ])
    _SearchSpace_searchSpaceType._ext = []
    SearchSpace._cont = ASN1Dict([
        ('searchSpaceId', _SearchSpace_searchSpaceId),
        ('controlResourceSetId', _SearchSpace_controlResourceSetId),
        ('monitoringSlotPeriodicityAndOffset', _SearchSpace_monitoringSlotPeriodicityAndOffset),
        ('monitoringSymbolsWithinSlot', _SearchSpace_monitoringSymbolsWithinSlot),
        ('nrofCandidates', _SearchSpace_nrofCandidates),
        ('searchSpaceType', _SearchSpace_searchSpaceType),
        ])
    SearchSpace._ext = []
    
    #-----< SearchSpaceId >-----#
    SearchSpaceId = INT(name='SearchSpaceId', mode=MODE_TYPE)
    SearchSpaceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    
    #-----< SecurityAlgorithmConfig >-----#
    SecurityAlgorithmConfig = SEQ(name='SecurityAlgorithmConfig', mode=MODE_TYPE)
    _SecurityAlgorithmConfig_cipheringAlgorithm = ENUM(name='cipheringAlgorithm', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CipheringAlgorithm')))
    _SecurityAlgorithmConfig_integrityProtAlgorithm = ENUM(name='integrityProtAlgorithm', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IntegrityProtAlgorithm')), opt=True)
    SecurityAlgorithmConfig._cont = ASN1Dict([
        ('cipheringAlgorithm', _SecurityAlgorithmConfig_cipheringAlgorithm),
        ('integrityProtAlgorithm', _SecurityAlgorithmConfig_integrityProtAlgorithm),
        ])
    SecurityAlgorithmConfig._ext = []
    
    #-----< IntegrityProtAlgorithm >-----#
    IntegrityProtAlgorithm = ENUM(name='IntegrityProtAlgorithm', mode=MODE_TYPE)
    IntegrityProtAlgorithm._cont = ASN1Dict([('nia0', 0), ('nia1', 1), ('nia2', 2), ('nia3', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    IntegrityProtAlgorithm._ext = []
    
    #-----< CipheringAlgorithm >-----#
    CipheringAlgorithm = ENUM(name='CipheringAlgorithm', mode=MODE_TYPE)
    CipheringAlgorithm._cont = ASN1Dict([('nea0', 0), ('nea1', 1), ('nea2', 2), ('nea3', 3), ('spare4', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    CipheringAlgorithm._ext = []
    
    #-----< ServCellIndex >-----#
    ServCellIndex = INT(name='ServCellIndex', mode=MODE_TYPE)
    ServCellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< ServingCellConfig >-----#
    ServingCellConfig = SEQ(name='ServingCellConfig', mode=MODE_TYPE)
    _ServingCellConfig_tdd_UL_DL_ConfigurationDedicated = SEQ(name='tdd-UL-DL-ConfigurationDedicated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigDedicated')), opt=True)
    _ServingCellConfig_initialDownlinkBWP = SEQ(name='initialDownlinkBWP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-DownlinkDedicated')), opt=True)
    _ServingCellConfig_downlinkBWP_ToReleaseList = SEQ_OF(name='downlinkBWP-ToReleaseList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfig_downlinkBWP_ToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _ServingCellConfig_downlinkBWP_ToReleaseList._cont = __ServingCellConfig_downlinkBWP_ToReleaseList__item_
    _ServingCellConfig_downlinkBWP_ToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _ServingCellConfig_downlinkBWP_ToAddModList = SEQ_OF(name='downlinkBWP-ToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfig_downlinkBWP_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Downlink')))
    _ServingCellConfig_downlinkBWP_ToAddModList._cont = __ServingCellConfig_downlinkBWP_ToAddModList__item_
    _ServingCellConfig_downlinkBWP_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _ServingCellConfig_firstActiveDownlinkBWP_Id = INT(name='firstActiveDownlinkBWP-Id', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')), opt=True)
    _ServingCellConfig_bwp_InactivityTimer = ENUM(name='bwp-InactivityTimer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfig_bwp_InactivityTimer._cont = ASN1Dict([('ms2', 0), ('ms3', 1), ('ms4', 2), ('ms5', 3), ('ms6', 4), ('ms8', 5), ('ms10', 6), ('ms20', 7), ('ms30', 8), ('ms40', 9), ('ms50', 10), ('ms60', 11), ('ms80', 12), ('ms100', 13), ('ms200', 14), ('ms300', 15), ('ms500', 16), ('ms750', 17), ('ms1280', 18), ('ms1920', 19), ('ms2560', 20), ('spare10', 21), ('spare9', 22), ('spare8', 23), ('spare7', 24), ('spare6', 25), ('spare5', 26), ('spare4', 27), ('spare3', 28), ('spare2', 29), ('spare1', 30)])
    _ServingCellConfig_bwp_InactivityTimer._ext = []
    _ServingCellConfig_defaultDownlinkBWP_Id = INT(name='defaultDownlinkBWP-Id', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')), opt=True)
    _ServingCellConfig_uplinkConfig = SEQ(name='uplinkConfig', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfig')), opt=True)
    _ServingCellConfig_supplementaryUplink = SEQ(name='supplementaryUplink', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfig')), opt=True)
    _ServingCellConfig_pdsch_ServingCellConfig = CHOICE(name='pdsch-ServingCellConfig', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __ServingCellConfig_pdsch_ServingCellConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfig_pdsch_ServingCellConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDSCH-ServingCellConfig')))
    _ServingCellConfig_pdsch_ServingCellConfig._cont = ASN1Dict([
        ('release', __ServingCellConfig_pdsch_ServingCellConfig_release),
        ('setup', __ServingCellConfig_pdsch_ServingCellConfig_setup),
        ])
    _ServingCellConfig_pdsch_ServingCellConfig._ext = []
    _ServingCellConfig_csi_MeasConfig = CHOICE(name='csi-MeasConfig', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __ServingCellConfig_csi_MeasConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfig_csi_MeasConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-MeasConfig')))
    _ServingCellConfig_csi_MeasConfig._cont = ASN1Dict([
        ('release', __ServingCellConfig_csi_MeasConfig_release),
        ('setup', __ServingCellConfig_csi_MeasConfig_setup),
        ])
    _ServingCellConfig_csi_MeasConfig._ext = []
    _ServingCellConfig_carrierSwitching = CHOICE(name='carrierSwitching', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __ServingCellConfig_carrierSwitching_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfig_carrierSwitching_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-CarrierSwitching')))
    _ServingCellConfig_carrierSwitching._cont = ASN1Dict([
        ('release', __ServingCellConfig_carrierSwitching_release),
        ('setup', __ServingCellConfig_carrierSwitching_setup),
        ])
    _ServingCellConfig_carrierSwitching._ext = []
    _ServingCellConfig_sCellDeactivationTimer = ENUM(name='sCellDeactivationTimer', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfig_sCellDeactivationTimer._cont = ASN1Dict([('ms20', 0), ('ms40', 1), ('ms80', 2), ('ms160', 3), ('ms200', 4), ('ms240', 5), ('ms320', 6), ('ms400', 7), ('ms480', 8), ('ms520', 9), ('ms640', 10), ('ms720', 11), ('ms840', 12), ('ms1280', 13), ('spare2', 14), ('spare1', 15)])
    _ServingCellConfig_sCellDeactivationTimer._ext = []
    _ServingCellConfig_crossCarrierSchedulingConfig = SEQ(name='crossCarrierSchedulingConfig', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CrossCarrierSchedulingConfig')), opt=True)
    _ServingCellConfig_tag_Id = INT(name='tag-Id', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TAG-Id')))
    _ServingCellConfig_ue_BeamLockFunction = ENUM(name='ue-BeamLockFunction', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfig_ue_BeamLockFunction._cont = ASN1Dict([('enabled', 0)])
    _ServingCellConfig_ue_BeamLockFunction._ext = []
    _ServingCellConfig_pathlossReferenceLinking = ENUM(name='pathlossReferenceLinking', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfig_pathlossReferenceLinking._cont = ASN1Dict([('pCell', 0), ('sCell', 1)])
    _ServingCellConfig_pathlossReferenceLinking._ext = []
    ServingCellConfig._cont = ASN1Dict([
        ('tdd-UL-DL-ConfigurationDedicated', _ServingCellConfig_tdd_UL_DL_ConfigurationDedicated),
        ('initialDownlinkBWP', _ServingCellConfig_initialDownlinkBWP),
        ('downlinkBWP-ToReleaseList', _ServingCellConfig_downlinkBWP_ToReleaseList),
        ('downlinkBWP-ToAddModList', _ServingCellConfig_downlinkBWP_ToAddModList),
        ('firstActiveDownlinkBWP-Id', _ServingCellConfig_firstActiveDownlinkBWP_Id),
        ('bwp-InactivityTimer', _ServingCellConfig_bwp_InactivityTimer),
        ('defaultDownlinkBWP-Id', _ServingCellConfig_defaultDownlinkBWP_Id),
        ('uplinkConfig', _ServingCellConfig_uplinkConfig),
        ('supplementaryUplink', _ServingCellConfig_supplementaryUplink),
        ('pdsch-ServingCellConfig', _ServingCellConfig_pdsch_ServingCellConfig),
        ('csi-MeasConfig', _ServingCellConfig_csi_MeasConfig),
        ('carrierSwitching', _ServingCellConfig_carrierSwitching),
        ('sCellDeactivationTimer', _ServingCellConfig_sCellDeactivationTimer),
        ('crossCarrierSchedulingConfig', _ServingCellConfig_crossCarrierSchedulingConfig),
        ('tag-Id', _ServingCellConfig_tag_Id),
        ('ue-BeamLockFunction', _ServingCellConfig_ue_BeamLockFunction),
        ('pathlossReferenceLinking', _ServingCellConfig_pathlossReferenceLinking),
        ])
    ServingCellConfig._ext = []
    
    #-----< UplinkConfig >-----#
    UplinkConfig = SEQ(name='UplinkConfig', mode=MODE_TYPE)
    _UplinkConfig_initialUplinkBWP = SEQ(name='initialUplinkBWP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-UplinkDedicated')), opt=True)
    _UplinkConfig_uplinkBWP_ToReleaseList = SEQ_OF(name='uplinkBWP-ToReleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __UplinkConfig_uplinkBWP_ToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')))
    _UplinkConfig_uplinkBWP_ToReleaseList._cont = __UplinkConfig_uplinkBWP_ToReleaseList__item_
    _UplinkConfig_uplinkBWP_ToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _UplinkConfig_uplinkBWP_ToAddModList = SEQ_OF(name='uplinkBWP-ToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __UplinkConfig_uplinkBWP_ToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Uplink')))
    _UplinkConfig_uplinkBWP_ToAddModList._cont = __UplinkConfig_uplinkBWP_ToAddModList__item_
    _UplinkConfig_uplinkBWP_ToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _UplinkConfig_firstActiveUplinkBWP_Id = INT(name='firstActiveUplinkBWP-Id', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')), opt=True)
    _UplinkConfig_pusch_ServingCellConfig = CHOICE(name='pusch-ServingCellConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __UplinkConfig_pusch_ServingCellConfig_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __UplinkConfig_pusch_ServingCellConfig_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUSCH-ServingCellConfig')))
    _UplinkConfig_pusch_ServingCellConfig._cont = ASN1Dict([
        ('release', __UplinkConfig_pusch_ServingCellConfig_release),
        ('setup', __UplinkConfig_pusch_ServingCellConfig_setup),
        ])
    _UplinkConfig_pusch_ServingCellConfig._ext = []
    UplinkConfig._cont = ASN1Dict([
        ('initialUplinkBWP', _UplinkConfig_initialUplinkBWP),
        ('uplinkBWP-ToReleaseList', _UplinkConfig_uplinkBWP_ToReleaseList),
        ('uplinkBWP-ToAddModList', _UplinkConfig_uplinkBWP_ToAddModList),
        ('firstActiveUplinkBWP-Id', _UplinkConfig_firstActiveUplinkBWP_Id),
        ('pusch-ServingCellConfig', _UplinkConfig_pusch_ServingCellConfig),
        ])
    UplinkConfig._ext = []
    
    #-----< ServingCellConfigCommon >-----#
    ServingCellConfigCommon = SEQ(name='ServingCellConfigCommon', mode=MODE_TYPE)
    _ServingCellConfigCommon_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')), opt=True)
    _ServingCellConfigCommon_frequencyInfoDL = SEQ(name='frequencyInfoDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FrequencyInfoDL')), opt=True)
    _ServingCellConfigCommon_initialDownlinkBWP = SEQ(name='initialDownlinkBWP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-DownlinkCommon')), opt=True)
    _ServingCellConfigCommon_uplinkConfigCommon = SEQ(name='uplinkConfigCommon', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommon')), opt=True)
    _ServingCellConfigCommon_supplementaryUplinkConfig = SEQ(name='supplementaryUplinkConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UplinkConfigCommon')), opt=True)
    _ServingCellConfigCommon_ssb_PositionsInBurst = CHOICE(name='ssb-PositionsInBurst', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __ServingCellConfigCommon_ssb_PositionsInBurst_shortBitmap = BIT_STR(name='shortBitmap', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommon_ssb_PositionsInBurst_shortBitmap._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    __ServingCellConfigCommon_ssb_PositionsInBurst_mediumBitmap = BIT_STR(name='mediumBitmap', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommon_ssb_PositionsInBurst_mediumBitmap._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    __ServingCellConfigCommon_ssb_PositionsInBurst_longBitmap = BIT_STR(name='longBitmap', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommon_ssb_PositionsInBurst_longBitmap._const_sz = ASN1Set(rv=[64], rr=[], ev=None, er=[])
    _ServingCellConfigCommon_ssb_PositionsInBurst._cont = ASN1Dict([
        ('shortBitmap', __ServingCellConfigCommon_ssb_PositionsInBurst_shortBitmap),
        ('mediumBitmap', __ServingCellConfigCommon_ssb_PositionsInBurst_mediumBitmap),
        ('longBitmap', __ServingCellConfigCommon_ssb_PositionsInBurst_longBitmap),
        ])
    _ServingCellConfigCommon_ssb_PositionsInBurst._ext = []
    _ServingCellConfigCommon_ssb_periodicityServingCell = ENUM(name='ssb-periodicityServingCell', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServingCellConfigCommon_ssb_periodicityServingCell._cont = ASN1Dict([('ms5', 0), ('ms10', 1), ('ms20', 2), ('ms40', 3), ('ms80', 4), ('ms160', 5), ('spare2', 6), ('spare1', 7)])
    _ServingCellConfigCommon_ssb_periodicityServingCell._ext = []
    _ServingCellConfigCommon_dmrs_TypeA_Position = ENUM(name='dmrs-TypeA-Position', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServingCellConfigCommon_dmrs_TypeA_Position._cont = ASN1Dict([('pos2', 0), ('pos3', 1)])
    _ServingCellConfigCommon_dmrs_TypeA_Position._ext = []
    _ServingCellConfigCommon_lte_CRS_ToMatchAround = CHOICE(name='lte-CRS-ToMatchAround', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SetupRelease')), opt=True)
    __ServingCellConfigCommon_lte_CRS_ToMatchAround_release = NULL(name='release', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ServingCellConfigCommon_lte_CRS_ToMatchAround_setup = SEQ(name='setup', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternLTE-CRS')))
    _ServingCellConfigCommon_lte_CRS_ToMatchAround._cont = ASN1Dict([
        ('release', __ServingCellConfigCommon_lte_CRS_ToMatchAround_release),
        ('setup', __ServingCellConfigCommon_lte_CRS_ToMatchAround_setup),
        ])
    _ServingCellConfigCommon_lte_CRS_ToMatchAround._ext = []
    _ServingCellConfigCommon_rateMatchPatternToAddModList = SEQ_OF(name='rateMatchPatternToAddModList', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfigCommon_rateMatchPatternToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPattern')))
    _ServingCellConfigCommon_rateMatchPatternToAddModList._cont = __ServingCellConfigCommon_rateMatchPatternToAddModList__item_
    _ServingCellConfigCommon_rateMatchPatternToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _ServingCellConfigCommon_rateMatchPatternToReleaseList = SEQ_OF(name='rateMatchPatternToReleaseList', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ServingCellConfigCommon_rateMatchPatternToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RateMatchPatternId')))
    _ServingCellConfigCommon_rateMatchPatternToReleaseList._cont = __ServingCellConfigCommon_rateMatchPatternToReleaseList__item_
    _ServingCellConfigCommon_rateMatchPatternToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _ServingCellConfigCommon_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')), opt=True)
    _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon = SEQ(name='tdd-UL-DL-ConfigurationCommon', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon2 = SEQ(name='tdd-UL-DL-ConfigurationCommon2', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-ConfigCommon')), opt=True)
    _ServingCellConfigCommon_ss_PBCH_BlockPower = INT(name='ss-PBCH-BlockPower', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServingCellConfigCommon_ss_PBCH_BlockPower._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=50)], ev=None, er=[])
    ServingCellConfigCommon._cont = ASN1Dict([
        ('physCellId', _ServingCellConfigCommon_physCellId),
        ('frequencyInfoDL', _ServingCellConfigCommon_frequencyInfoDL),
        ('initialDownlinkBWP', _ServingCellConfigCommon_initialDownlinkBWP),
        ('uplinkConfigCommon', _ServingCellConfigCommon_uplinkConfigCommon),
        ('supplementaryUplinkConfig', _ServingCellConfigCommon_supplementaryUplinkConfig),
        ('ssb-PositionsInBurst', _ServingCellConfigCommon_ssb_PositionsInBurst),
        ('ssb-periodicityServingCell', _ServingCellConfigCommon_ssb_periodicityServingCell),
        ('dmrs-TypeA-Position', _ServingCellConfigCommon_dmrs_TypeA_Position),
        ('lte-CRS-ToMatchAround', _ServingCellConfigCommon_lte_CRS_ToMatchAround),
        ('rateMatchPatternToAddModList', _ServingCellConfigCommon_rateMatchPatternToAddModList),
        ('rateMatchPatternToReleaseList', _ServingCellConfigCommon_rateMatchPatternToReleaseList),
        ('subcarrierSpacing', _ServingCellConfigCommon_subcarrierSpacing),
        ('tdd-UL-DL-ConfigurationCommon', _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon),
        ('tdd-UL-DL-ConfigurationCommon2', _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon2),
        ('ss-PBCH-BlockPower', _ServingCellConfigCommon_ss_PBCH_BlockPower),
        ])
    ServingCellConfigCommon._ext = []
    
    #-----< UplinkConfigCommon >-----#
    UplinkConfigCommon = SEQ(name='UplinkConfigCommon', mode=MODE_TYPE)
    _UplinkConfigCommon_frequencyInfoUL = SEQ(name='frequencyInfoUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FrequencyInfoUL')), opt=True)
    _UplinkConfigCommon_initialUplinkBWP = SEQ(name='initialUplinkBWP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-UplinkCommon')), opt=True)
    UplinkConfigCommon._cont = ASN1Dict([
        ('frequencyInfoUL', _UplinkConfigCommon_frequencyInfoUL),
        ('initialUplinkBWP', _UplinkConfigCommon_initialUplinkBWP),
        ])
    UplinkConfigCommon._ext = []
    
    #-----< SINR-Range >-----#
    SINR_Range = INT(name='SINR-Range', mode=MODE_TYPE)
    SINR_Range._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< SlotFormatCombinationsPerCell >-----#
    SlotFormatCombinationsPerCell = SEQ(name='SlotFormatCombinationsPerCell', mode=MODE_TYPE)
    _SlotFormatCombinationsPerCell_servingCellId = INT(name='servingCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _SlotFormatCombinationsPerCell_subcarrierSpacing = ENUM(name='subcarrierSpacing', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _SlotFormatCombinationsPerCell_subcarrierSpacing2 = ENUM(name='subcarrierSpacing2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')), opt=True)
    _SlotFormatCombinationsPerCell_slotFormatCombinations = SEQ_OF(name='slotFormatCombinations', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SlotFormatCombinationsPerCell_slotFormatCombinations__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SlotFormatCombination')))
    _SlotFormatCombinationsPerCell_slotFormatCombinations._cont = __SlotFormatCombinationsPerCell_slotFormatCombinations__item_
    _SlotFormatCombinationsPerCell_slotFormatCombinations._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4096)], ev=None, er=[])
    _SlotFormatCombinationsPerCell_positionInDCI = INT(name='positionInDCI', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SlotFormatCombinationsPerCell_positionInDCI._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    SlotFormatCombinationsPerCell._cont = ASN1Dict([
        ('servingCellId', _SlotFormatCombinationsPerCell_servingCellId),
        ('subcarrierSpacing', _SlotFormatCombinationsPerCell_subcarrierSpacing),
        ('subcarrierSpacing2', _SlotFormatCombinationsPerCell_subcarrierSpacing2),
        ('slotFormatCombinations', _SlotFormatCombinationsPerCell_slotFormatCombinations),
        ('positionInDCI', _SlotFormatCombinationsPerCell_positionInDCI),
        ])
    SlotFormatCombinationsPerCell._ext = []
    
    #-----< SlotFormatCombination >-----#
    SlotFormatCombination = SEQ(name='SlotFormatCombination', mode=MODE_TYPE)
    _SlotFormatCombination_slotFormatCombinationId = INT(name='slotFormatCombinationId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SlotFormatCombinationId')))
    _SlotFormatCombination_slotFormats = SEQ_OF(name='slotFormats', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SlotFormatCombination_slotFormats__item_ = INT(name='_item_', mode=MODE_TYPE)
    __SlotFormatCombination_slotFormats__item_._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _SlotFormatCombination_slotFormats._cont = __SlotFormatCombination_slotFormats__item_
    _SlotFormatCombination_slotFormats._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    SlotFormatCombination._cont = ASN1Dict([
        ('slotFormatCombinationId', _SlotFormatCombination_slotFormatCombinationId),
        ('slotFormats', _SlotFormatCombination_slotFormats),
        ])
    SlotFormatCombination._ext = []
    
    #-----< SlotFormatCombinationId >-----#
    SlotFormatCombinationId = INT(name='SlotFormatCombinationId', mode=MODE_TYPE)
    SlotFormatCombinationId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< SlotFormatIndicator >-----#
    SlotFormatIndicator = SEQ(name='SlotFormatIndicator', mode=MODE_TYPE)
    _SlotFormatIndicator_sfi_RNTI = INT(name='sfi-RNTI', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _SlotFormatIndicator_dci_PayloadSize = INT(name='dci-PayloadSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SlotFormatIndicator_dci_PayloadSize._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _SlotFormatIndicator_slotFormatCombToAddModList = SEQ_OF(name='slotFormatCombToAddModList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SlotFormatIndicator_slotFormatCombToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SlotFormatCombinationsPerCell')))
    _SlotFormatIndicator_slotFormatCombToAddModList._cont = __SlotFormatIndicator_slotFormatCombToAddModList__item_
    _SlotFormatIndicator_slotFormatCombToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _SlotFormatIndicator_slotFormatCombToReleaseList = SEQ_OF(name='slotFormatCombToReleaseList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SlotFormatIndicator_slotFormatCombToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _SlotFormatIndicator_slotFormatCombToReleaseList._cont = __SlotFormatIndicator_slotFormatCombToReleaseList__item_
    _SlotFormatIndicator_slotFormatCombToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    SlotFormatIndicator._cont = ASN1Dict([
        ('sfi-RNTI', _SlotFormatIndicator_sfi_RNTI),
        ('dci-PayloadSize', _SlotFormatIndicator_dci_PayloadSize),
        ('slotFormatCombToAddModList', _SlotFormatIndicator_slotFormatCombToAddModList),
        ('slotFormatCombToReleaseList', _SlotFormatIndicator_slotFormatCombToReleaseList),
        ])
    SlotFormatIndicator._ext = []
    
    #-----< S-NSSAI >-----#
    S_NSSAI = BIT_STR(name='S-NSSAI', mode=MODE_TYPE)
    S_NSSAI._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< SPS-Config >-----#
    SPS_Config = SEQ(name='SPS-Config', mode=MODE_TYPE)
    _SPS_Config_periodicity = ENUM(name='periodicity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPS_Config_periodicity._cont = ASN1Dict([('ms10', 0), ('ms20', 1), ('ms32', 2), ('ms40', 3), ('ms64', 4), ('ms80', 5), ('ms128', 6), ('ms160', 7), ('ms320', 8), ('ms640', 9), ('spare6', 10), ('spare5', 11), ('spare4', 12), ('spare3', 13), ('spare2', 14), ('spare1', 15)])
    _SPS_Config_periodicity._ext = []
    _SPS_Config_nrofHARQ_Processes = INT(name='nrofHARQ-Processes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SPS_Config_nrofHARQ_Processes._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _SPS_Config_n1PUCCH_AN = SEQ(name='n1PUCCH-AN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PUCCH-Resource')), opt=True)
    SPS_Config._cont = ASN1Dict([
        ('periodicity', _SPS_Config_periodicity),
        ('nrofHARQ-Processes', _SPS_Config_nrofHARQ_Processes),
        ('n1PUCCH-AN', _SPS_Config_n1PUCCH_AN),
        ])
    SPS_Config._ext = []
    
    #-----< SRB-Identity >-----#
    SRB_Identity = INT(name='SRB-Identity', mode=MODE_TYPE)
    SRB_Identity._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< SRS-Config >-----#
    SRS_Config = SEQ(name='SRS-Config', mode=MODE_TYPE)
    _SRS_Config_srs_ResourceSetToReleaseList = SEQ_OF(name='srs-ResourceSetToReleaseList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_Config_srs_ResourceSetToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceSetId')))
    _SRS_Config_srs_ResourceSetToReleaseList._cont = __SRS_Config_srs_ResourceSetToReleaseList__item_
    _SRS_Config_srs_ResourceSetToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16)], ev=None, er=[])
    _SRS_Config_srs_ResourceSetToAddModList = SEQ_OF(name='srs-ResourceSetToAddModList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_Config_srs_ResourceSetToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceSet')))
    _SRS_Config_srs_ResourceSetToAddModList._cont = __SRS_Config_srs_ResourceSetToAddModList__item_
    _SRS_Config_srs_ResourceSetToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16)], ev=None, er=[])
    _SRS_Config_srs_ResourceToReleaseList = SEQ_OF(name='srs-ResourceToReleaseList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_Config_srs_ResourceToReleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceId')))
    _SRS_Config_srs_ResourceToReleaseList._cont = __SRS_Config_srs_ResourceToReleaseList__item_
    _SRS_Config_srs_ResourceToReleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _SRS_Config_srs_ResourceToAddModList = SEQ_OF(name='srs-ResourceToAddModList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_Config_srs_ResourceToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-Resource')))
    _SRS_Config_srs_ResourceToAddModList._cont = __SRS_Config_srs_ResourceToAddModList__item_
    _SRS_Config_srs_ResourceToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _SRS_Config_tpc_Accumulation = ENUM(name='tpc-Accumulation', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_Config_tpc_Accumulation._cont = ASN1Dict([('disabled', 0)])
    _SRS_Config_tpc_Accumulation._ext = []
    SRS_Config._cont = ASN1Dict([
        ('srs-ResourceSetToReleaseList', _SRS_Config_srs_ResourceSetToReleaseList),
        ('srs-ResourceSetToAddModList', _SRS_Config_srs_ResourceSetToAddModList),
        ('srs-ResourceToReleaseList', _SRS_Config_srs_ResourceToReleaseList),
        ('srs-ResourceToAddModList', _SRS_Config_srs_ResourceToAddModList),
        ('tpc-Accumulation', _SRS_Config_tpc_Accumulation),
        ])
    SRS_Config._ext = []
    
    #-----< SRS-ResourceSet >-----#
    SRS_ResourceSet = SEQ(name='SRS-ResourceSet', mode=MODE_TYPE)
    _SRS_ResourceSet_srs_ResourceSetId = INT(name='srs-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceSetId')))
    _SRS_ResourceSet_srs_ResourceIdList = SEQ_OF(name='srs-ResourceIdList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_ResourceSet_srs_ResourceIdList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceId')))
    _SRS_ResourceSet_srs_ResourceIdList._cont = __SRS_ResourceSet_srs_ResourceIdList__item_
    _SRS_ResourceSet_srs_ResourceIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _SRS_ResourceSet_resourceType = CHOICE(name='resourceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SRS_ResourceSet_resourceType_aperiodic = SEQ(name='aperiodic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_ResourceSet_resourceType_aperiodic_aperiodicSRS_ResourceTrigger = INT(name='aperiodicSRS-ResourceTrigger', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_ResourceSet_resourceType_aperiodic_aperiodicSRS_ResourceTrigger._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    ___SRS_ResourceSet_resourceType_aperiodic_csi_RS = INT(name='csi-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    ___SRS_ResourceSet_resourceType_aperiodic_slotOffset = INT(name='slotOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___SRS_ResourceSet_resourceType_aperiodic_slotOffset._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    __SRS_ResourceSet_resourceType_aperiodic._cont = ASN1Dict([
        ('aperiodicSRS-ResourceTrigger', ___SRS_ResourceSet_resourceType_aperiodic_aperiodicSRS_ResourceTrigger),
        ('csi-RS', ___SRS_ResourceSet_resourceType_aperiodic_csi_RS),
        ('slotOffset', ___SRS_ResourceSet_resourceType_aperiodic_slotOffset),
        ])
    __SRS_ResourceSet_resourceType_aperiodic._ext = []
    __SRS_ResourceSet_resourceType_semi_persistent = SEQ(name='semi-persistent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_ResourceSet_resourceType_semi_persistent_associatedCSI_RS = INT(name='associatedCSI-RS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')), opt=True)
    __SRS_ResourceSet_resourceType_semi_persistent._cont = ASN1Dict([
        ('associatedCSI-RS', ___SRS_ResourceSet_resourceType_semi_persistent_associatedCSI_RS),
        ])
    __SRS_ResourceSet_resourceType_semi_persistent._ext = []
    __SRS_ResourceSet_resourceType_periodic = SEQ(name='periodic', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_ResourceSet_resourceType_periodic_associatedCSI_RS = INT(name='associatedCSI-RS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')), opt=True)
    __SRS_ResourceSet_resourceType_periodic._cont = ASN1Dict([
        ('associatedCSI-RS', ___SRS_ResourceSet_resourceType_periodic_associatedCSI_RS),
        ])
    __SRS_ResourceSet_resourceType_periodic._ext = []
    _SRS_ResourceSet_resourceType._cont = ASN1Dict([
        ('aperiodic', __SRS_ResourceSet_resourceType_aperiodic),
        ('semi-persistent', __SRS_ResourceSet_resourceType_semi_persistent),
        ('periodic', __SRS_ResourceSet_resourceType_periodic),
        ])
    _SRS_ResourceSet_resourceType._ext = []
    _SRS_ResourceSet_usage = ENUM(name='usage', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_ResourceSet_usage._cont = ASN1Dict([('beamManagement', 0), ('codebook', 1), ('nonCodebook', 2), ('antennaSwitching', 3)])
    _SRS_ResourceSet_usage._ext = []
    _SRS_ResourceSet_alpha = ENUM(name='alpha', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Alpha')), opt=True)
    _SRS_ResourceSet_p0 = INT(name='p0', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_ResourceSet_p0._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-202, ub=24)], ev=None, er=[])
    _SRS_ResourceSet_pathlossReferenceRS = CHOICE(name='pathlossReferenceRS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SRS_ResourceSet_pathlossReferenceRS_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __SRS_ResourceSet_pathlossReferenceRS_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    _SRS_ResourceSet_pathlossReferenceRS._cont = ASN1Dict([
        ('ssb-Index', __SRS_ResourceSet_pathlossReferenceRS_ssb_Index),
        ('csi-RS-Index', __SRS_ResourceSet_pathlossReferenceRS_csi_RS_Index),
        ])
    _SRS_ResourceSet_pathlossReferenceRS._ext = []
    _SRS_ResourceSet_srs_PowerControlAdjustmentStates = ENUM(name='srs-PowerControlAdjustmentStates', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_ResourceSet_srs_PowerControlAdjustmentStates._cont = ASN1Dict([('sameAsFci2', 0), ('separateClosedLoop', 1)])
    _SRS_ResourceSet_srs_PowerControlAdjustmentStates._ext = []
    SRS_ResourceSet._cont = ASN1Dict([
        ('srs-ResourceSetId', _SRS_ResourceSet_srs_ResourceSetId),
        ('srs-ResourceIdList', _SRS_ResourceSet_srs_ResourceIdList),
        ('resourceType', _SRS_ResourceSet_resourceType),
        ('usage', _SRS_ResourceSet_usage),
        ('alpha', _SRS_ResourceSet_alpha),
        ('p0', _SRS_ResourceSet_p0),
        ('pathlossReferenceRS', _SRS_ResourceSet_pathlossReferenceRS),
        ('srs-PowerControlAdjustmentStates', _SRS_ResourceSet_srs_PowerControlAdjustmentStates),
        ])
    SRS_ResourceSet._ext = []
    
    #-----< SRS-ResourceSetId >-----#
    SRS_ResourceSetId = INT(name='SRS-ResourceSetId', mode=MODE_TYPE)
    SRS_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    
    #-----< SRS-Resource >-----#
    SRS_Resource = SEQ(name='SRS-Resource', mode=MODE_TYPE)
    _SRS_Resource_srs_ResourceId = INT(name='srs-ResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceId')))
    _SRS_Resource_nrofSRS_Ports = ENUM(name='nrofSRS-Ports', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resource_nrofSRS_Ports._cont = ASN1Dict([('port1', 0), ('ports2', 1), ('ports4', 2)])
    _SRS_Resource_nrofSRS_Ports._ext = []
    _SRS_Resource_ptrs_PortIndex = ENUM(name='ptrs-PortIndex', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_Resource_ptrs_PortIndex._cont = ASN1Dict([('n0', 0), ('n1', 1)])
    _SRS_Resource_ptrs_PortIndex._ext = []
    _SRS_Resource_transmissionComb = CHOICE(name='transmissionComb', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SRS_Resource_transmissionComb_n2 = SEQ(name='n2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n2_combOffset_n2 = INT(name='combOffset-n2', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n2_combOffset_n2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    ___SRS_Resource_transmissionComb_n2_cyclicShift_n2 = INT(name='cyclicShift-n2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n2_cyclicShift_n2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    __SRS_Resource_transmissionComb_n2._cont = ASN1Dict([
        ('combOffset-n2', ___SRS_Resource_transmissionComb_n2_combOffset_n2),
        ('cyclicShift-n2', ___SRS_Resource_transmissionComb_n2_cyclicShift_n2),
        ])
    __SRS_Resource_transmissionComb_n2._ext = []
    __SRS_Resource_transmissionComb_n4 = SEQ(name='n4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n4_combOffset_n4 = INT(name='combOffset-n4', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n4_combOffset_n4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    ___SRS_Resource_transmissionComb_n4_cyclicShift_n4 = INT(name='cyclicShift-n4', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_transmissionComb_n4_cyclicShift_n4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=11)], ev=None, er=[])
    __SRS_Resource_transmissionComb_n4._cont = ASN1Dict([
        ('combOffset-n4', ___SRS_Resource_transmissionComb_n4_combOffset_n4),
        ('cyclicShift-n4', ___SRS_Resource_transmissionComb_n4_cyclicShift_n4),
        ])
    __SRS_Resource_transmissionComb_n4._ext = []
    _SRS_Resource_transmissionComb._cont = ASN1Dict([
        ('n2', __SRS_Resource_transmissionComb_n2),
        ('n4', __SRS_Resource_transmissionComb_n4),
        ])
    _SRS_Resource_transmissionComb._ext = []
    _SRS_Resource_resourceMapping = SEQ(name='resourceMapping', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_resourceMapping_startPosition = INT(name='startPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_resourceMapping_startPosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5)], ev=None, er=[])
    __SRS_Resource_resourceMapping_nrofSymbols = ENUM(name='nrofSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_resourceMapping_nrofSymbols._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2)])
    __SRS_Resource_resourceMapping_nrofSymbols._ext = []
    __SRS_Resource_resourceMapping_repetitionFactor = ENUM(name='repetitionFactor', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_resourceMapping_repetitionFactor._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2)])
    __SRS_Resource_resourceMapping_repetitionFactor._ext = []
    _SRS_Resource_resourceMapping._cont = ASN1Dict([
        ('startPosition', __SRS_Resource_resourceMapping_startPosition),
        ('nrofSymbols', __SRS_Resource_resourceMapping_nrofSymbols),
        ('repetitionFactor', __SRS_Resource_resourceMapping_repetitionFactor),
        ])
    _SRS_Resource_resourceMapping._ext = []
    _SRS_Resource_freqDomainPosition = INT(name='freqDomainPosition', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resource_freqDomainPosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=67)], ev=None, er=[])
    _SRS_Resource_freqDomainShift = INT(name='freqDomainShift', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resource_freqDomainShift._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=268)], ev=None, er=[])
    _SRS_Resource_freqHopping = SEQ(name='freqHopping', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_freqHopping_c_SRS = INT(name='c-SRS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_freqHopping_c_SRS._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    __SRS_Resource_freqHopping_b_SRS = INT(name='b-SRS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_freqHopping_b_SRS._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    __SRS_Resource_freqHopping_b_hop = INT(name='b-hop', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_freqHopping_b_hop._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _SRS_Resource_freqHopping._cont = ASN1Dict([
        ('c-SRS', __SRS_Resource_freqHopping_c_SRS),
        ('b-SRS', __SRS_Resource_freqHopping_b_SRS),
        ('b-hop', __SRS_Resource_freqHopping_b_hop),
        ])
    _SRS_Resource_freqHopping._ext = []
    _SRS_Resource_groupOrSequenceHopping = ENUM(name='groupOrSequenceHopping', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resource_groupOrSequenceHopping._cont = ASN1Dict([('neither', 0), ('groupHopping', 1), ('sequenceHopping', 2)])
    _SRS_Resource_groupOrSequenceHopping._ext = []
    _SRS_Resource_resourceType = CHOICE(name='resourceType', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __SRS_Resource_resourceType_aperiodic = SEQ(name='aperiodic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __SRS_Resource_resourceType_aperiodic._cont = ASN1Dict([
        ])
    __SRS_Resource_resourceType_aperiodic._ext = []
    __SRS_Resource_resourceType_semi_persistent = SEQ(name='semi-persistent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_resourceType_semi_persistent_periodicityAndOffset_sp = CHOICE(name='periodicityAndOffset-sp', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-PeriodicityAndOffset')))
    __SRS_Resource_resourceType_semi_persistent._cont = ASN1Dict([
        ('periodicityAndOffset-sp', ___SRS_Resource_resourceType_semi_persistent_periodicityAndOffset_sp),
        ])
    __SRS_Resource_resourceType_semi_persistent._ext = []
    __SRS_Resource_resourceType_periodic = SEQ(name='periodic', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_Resource_resourceType_periodic_periodicityAndOffset_p = CHOICE(name='periodicityAndOffset-p', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-PeriodicityAndOffset')))
    __SRS_Resource_resourceType_periodic._cont = ASN1Dict([
        ('periodicityAndOffset-p', ___SRS_Resource_resourceType_periodic_periodicityAndOffset_p),
        ])
    __SRS_Resource_resourceType_periodic._ext = []
    _SRS_Resource_resourceType._cont = ASN1Dict([
        ('aperiodic', __SRS_Resource_resourceType_aperiodic),
        ('semi-persistent', __SRS_Resource_resourceType_semi_persistent),
        ('periodic', __SRS_Resource_resourceType_periodic),
        ])
    _SRS_Resource_resourceType._ext = []
    _SRS_Resource_sequenceId = BIT_STR(name='sequenceId', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resource_sequenceId._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    _SRS_Resource_spatialRelationInfo = CHOICE(name='spatialRelationInfo', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SRS_Resource_spatialRelationInfo_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __SRS_Resource_spatialRelationInfo_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    __SRS_Resource_spatialRelationInfo_srs = INT(name='srs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-ResourceId')))
    _SRS_Resource_spatialRelationInfo._cont = ASN1Dict([
        ('ssb-Index', __SRS_Resource_spatialRelationInfo_ssb_Index),
        ('csi-RS-Index', __SRS_Resource_spatialRelationInfo_csi_RS_Index),
        ('srs', __SRS_Resource_spatialRelationInfo_srs),
        ])
    _SRS_Resource_spatialRelationInfo._ext = []
    SRS_Resource._cont = ASN1Dict([
        ('srs-ResourceId', _SRS_Resource_srs_ResourceId),
        ('nrofSRS-Ports', _SRS_Resource_nrofSRS_Ports),
        ('ptrs-PortIndex', _SRS_Resource_ptrs_PortIndex),
        ('transmissionComb', _SRS_Resource_transmissionComb),
        ('resourceMapping', _SRS_Resource_resourceMapping),
        ('freqDomainPosition', _SRS_Resource_freqDomainPosition),
        ('freqDomainShift', _SRS_Resource_freqDomainShift),
        ('freqHopping', _SRS_Resource_freqHopping),
        ('groupOrSequenceHopping', _SRS_Resource_groupOrSequenceHopping),
        ('resourceType', _SRS_Resource_resourceType),
        ('sequenceId', _SRS_Resource_sequenceId),
        ('spatialRelationInfo', _SRS_Resource_spatialRelationInfo),
        ])
    SRS_Resource._ext = []
    
    #-----< SRS-ResourceId >-----#
    SRS_ResourceId = INT(name='SRS-ResourceId', mode=MODE_TYPE)
    SRS_ResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< SRS-PeriodicityAndOffset >-----#
    SRS_PeriodicityAndOffset = CHOICE(name='SRS-PeriodicityAndOffset', mode=MODE_TYPE)
    _SRS_PeriodicityAndOffset_sl1 = NULL(name='sl1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl2 = INT(name='sl2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl2._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl4 = INT(name='sl4', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl4._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl5 = INT(name='sl5', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl5._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl8 = INT(name='sl8', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl10 = INT(name='sl10', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl16 = INT(name='sl16', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=15)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl20 = INT(name='sl20', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl32 = INT(name='sl32', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl32._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl40 = INT(name='sl40', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl64 = INT(name='sl64', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl64._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl80 = INT(name='sl80', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl160 = INT(name='sl160', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl320 = INT(name='sl320', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl640 = INT(name='sl640', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl1280 = INT(name='sl1280', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl1280._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1279)], ev=None, er=[])
    _SRS_PeriodicityAndOffset_sl2560 = INT(name='sl2560', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_PeriodicityAndOffset_sl2560._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2559)], ev=None, er=[])
    SRS_PeriodicityAndOffset._cont = ASN1Dict([
        ('sl1', _SRS_PeriodicityAndOffset_sl1),
        ('sl2', _SRS_PeriodicityAndOffset_sl2),
        ('sl4', _SRS_PeriodicityAndOffset_sl4),
        ('sl5', _SRS_PeriodicityAndOffset_sl5),
        ('sl8', _SRS_PeriodicityAndOffset_sl8),
        ('sl10', _SRS_PeriodicityAndOffset_sl10),
        ('sl16', _SRS_PeriodicityAndOffset_sl16),
        ('sl20', _SRS_PeriodicityAndOffset_sl20),
        ('sl32', _SRS_PeriodicityAndOffset_sl32),
        ('sl40', _SRS_PeriodicityAndOffset_sl40),
        ('sl64', _SRS_PeriodicityAndOffset_sl64),
        ('sl80', _SRS_PeriodicityAndOffset_sl80),
        ('sl160', _SRS_PeriodicityAndOffset_sl160),
        ('sl320', _SRS_PeriodicityAndOffset_sl320),
        ('sl640', _SRS_PeriodicityAndOffset_sl640),
        ('sl1280', _SRS_PeriodicityAndOffset_sl1280),
        ('sl2560', _SRS_PeriodicityAndOffset_sl2560),
        ])
    SRS_PeriodicityAndOffset._ext = []
    
    #-----< SRS-CarrierSwitching >-----#
    SRS_CarrierSwitching = SEQ(name='SRS-CarrierSwitching', mode=MODE_TYPE)
    _SRS_CarrierSwitching_srs_SwitchFromServCellIndex = INT(name='srs-SwitchFromServCellIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_CarrierSwitching_srs_SwitchFromServCellIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    _SRS_CarrierSwitching_srs_TPC_PDCCH_Group = CHOICE(name='srs-TPC-PDCCH-Group', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA = SEQ_OF(name='typeA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-TPC-PDCCH-Config')))
    __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA._cont = ___SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA__item_
    __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeB = SEQ(name='typeB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-TPC-PDCCH-Config')))
    _SRS_CarrierSwitching_srs_TPC_PDCCH_Group._cont = ASN1Dict([
        ('typeA', __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA),
        ('typeB', __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeB),
        ])
    _SRS_CarrierSwitching_srs_TPC_PDCCH_Group._ext = []
    _SRS_CarrierSwitching_srs_CellToSFI = SEQ_OF(name='srs-CellToSFI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_CarrierSwitching_srs_CellToSFI__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SlotFormatCombinationsPerCell')))
    _SRS_CarrierSwitching_srs_CellToSFI._cont = __SRS_CarrierSwitching_srs_CellToSFI__item_
    _SRS_CarrierSwitching_srs_CellToSFI._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _SRS_CarrierSwitching_monitoringCells = SEQ_OF(name='monitoringCells', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_CarrierSwitching_monitoringCells__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _SRS_CarrierSwitching_monitoringCells._cont = __SRS_CarrierSwitching_monitoringCells__item_
    _SRS_CarrierSwitching_monitoringCells._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    SRS_CarrierSwitching._cont = ASN1Dict([
        ('srs-SwitchFromServCellIndex', _SRS_CarrierSwitching_srs_SwitchFromServCellIndex),
        ('srs-TPC-PDCCH-Group', _SRS_CarrierSwitching_srs_TPC_PDCCH_Group),
        ('srs-CellToSFI', _SRS_CarrierSwitching_srs_CellToSFI),
        ('monitoringCells', _SRS_CarrierSwitching_monitoringCells),
        ])
    SRS_CarrierSwitching._ext = []
    
    #-----< SRS-TPC-PDCCH-Config >-----#
    SRS_TPC_PDCCH_Config = SEQ(name='SRS-TPC-PDCCH-Config', mode=MODE_TYPE)
    _SRS_TPC_PDCCH_Config_startingBitOfFormat2_3 = INT(name='startingBitOfFormat2-3', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_TPC_PDCCH_Config_startingBitOfFormat2_3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    _SRS_TPC_PDCCH_Config_fieldTypeFormat2_3 = INT(name='fieldTypeFormat2-3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_TPC_PDCCH_Config_fieldTypeFormat2_3._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist = SEQ_OF(name='srs-CC-SetIndexlist', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-CC-SetIndex')))
    _SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist._cont = __SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist__item_
    _SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    SRS_TPC_PDCCH_Config._cont = ASN1Dict([
        ('startingBitOfFormat2-3', _SRS_TPC_PDCCH_Config_startingBitOfFormat2_3),
        ('fieldTypeFormat2-3', _SRS_TPC_PDCCH_Config_fieldTypeFormat2_3),
        ('srs-CC-SetIndexlist', _SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist),
        ])
    SRS_TPC_PDCCH_Config._ext = []
    
    #-----< SRS-CC-SetIndex >-----#
    SRS_CC_SetIndex = SEQ(name='SRS-CC-SetIndex', mode=MODE_TYPE)
    _SRS_CC_SetIndex_cc_SetIndex = INT(name='cc-SetIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_CC_SetIndex_cc_SetIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    _SRS_CC_SetIndex_cc_IndexInOneCC_Set = INT(name='cc-IndexInOneCC-Set', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_CC_SetIndex_cc_IndexInOneCC_Set._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    SRS_CC_SetIndex._cont = ASN1Dict([
        ('cc-SetIndex', _SRS_CC_SetIndex_cc_SetIndex),
        ('cc-IndexInOneCC-Set', _SRS_CC_SetIndex_cc_IndexInOneCC_Set),
        ])
    SRS_CC_SetIndex._ext = []
    
    #-----< SSB-Index >-----#
    SSB_Index = INT(name='SSB-Index', mode=MODE_TYPE)
    SSB_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< SubcarrierSpacing >-----#
    SubcarrierSpacing = ENUM(name='SubcarrierSpacing', mode=MODE_TYPE)
    SubcarrierSpacing._cont = ASN1Dict([('kHz15', 0), ('kHz30', 1), ('kHz60', 2), ('kHz120', 3), ('kHz240', 4), ('spare3', 5), ('spare2', 6), ('spare1', 7)])
    SubcarrierSpacing._ext = []
    
    #-----< TCI-State >-----#
    TCI_State = SEQ(name='TCI-State', mode=MODE_TYPE)
    _TCI_State_tci_StateId = INT(name='tci-StateId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TCI-StateId')))
    _TCI_State_qcl_Type1 = SEQ(name='qcl-Type1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QCL-Info')))
    _TCI_State_qcl_Type2 = SEQ(name='qcl-Type2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QCL-Info')), opt=True)
    _TCI_State_nrofPTRS_Ports = ENUM(name='nrofPTRS-Ports', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TCI_State_nrofPTRS_Ports._cont = ASN1Dict([('n1', 0), ('n2', 1)])
    _TCI_State_nrofPTRS_Ports._ext = []
    TCI_State._cont = ASN1Dict([
        ('tci-StateId', _TCI_State_tci_StateId),
        ('qcl-Type1', _TCI_State_qcl_Type1),
        ('qcl-Type2', _TCI_State_qcl_Type2),
        ('nrofPTRS-Ports', _TCI_State_nrofPTRS_Ports),
        ])
    TCI_State._ext = []
    
    #-----< QCL-Info >-----#
    QCL_Info = SEQ(name='QCL-Info', mode=MODE_TYPE)
    _QCL_Info_cell = INT(name='cell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')), opt=True)
    _QCL_Info_bwp_Id = INT(name='bwp-Id', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BWP-Id')), opt=True)
    _QCL_Info_referenceSignal = CHOICE(name='referenceSignal', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __QCL_Info_referenceSignal_csi_rs = INT(name='csi-rs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceId')))
    __QCL_Info_referenceSignal_ssb = INT(name='ssb', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    __QCL_Info_referenceSignal_csi_RS_for_tracking = INT(name='csi-RS-for-tracking', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'NZP-CSI-RS-ResourceSetId')))
    _QCL_Info_referenceSignal._cont = ASN1Dict([
        ('csi-rs', __QCL_Info_referenceSignal_csi_rs),
        ('ssb', __QCL_Info_referenceSignal_ssb),
        ('csi-RS-for-tracking', __QCL_Info_referenceSignal_csi_RS_for_tracking),
        ])
    _QCL_Info_referenceSignal._ext = []
    _QCL_Info_qcl_Type = ENUM(name='qcl-Type', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _QCL_Info_qcl_Type._cont = ASN1Dict([('typeA', 0), ('typeB', 1), ('typeC', 2), ('typeD', 3)])
    _QCL_Info_qcl_Type._ext = []
    QCL_Info._cont = ASN1Dict([
        ('cell', _QCL_Info_cell),
        ('bwp-Id', _QCL_Info_bwp_Id),
        ('referenceSignal', _QCL_Info_referenceSignal),
        ('qcl-Type', _QCL_Info_qcl_Type),
        ])
    QCL_Info._ext = []
    
    #-----< TCI-StateId >-----#
    TCI_StateId = INT(name='TCI-StateId', mode=MODE_TYPE)
    TCI_StateId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    
    #-----< TDD-UL-DL-ConfigCommon >-----#
    TDD_UL_DL_ConfigCommon = SEQ(name='TDD-UL-DL-ConfigCommon', mode=MODE_TYPE)
    _TDD_UL_DL_ConfigCommon_referenceSubcarrierSpacing = ENUM(name='referenceSubcarrierSpacing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')), opt=True)
    _TDD_UL_DL_ConfigCommon_dl_UL_TransmissionPeriodicity = ENUM(name='dl-UL-TransmissionPeriodicity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TDD_UL_DL_ConfigCommon_dl_UL_TransmissionPeriodicity._cont = ASN1Dict([('ms0p5', 0), ('ms0p625', 1), ('ms1', 2), ('ms1p25', 3), ('ms2', 4), ('ms2p5', 5), ('ms5', 6), ('ms10', 7)])
    _TDD_UL_DL_ConfigCommon_dl_UL_TransmissionPeriodicity._ext = []
    _TDD_UL_DL_ConfigCommon_nrofDownlinkSlots = INT(name='nrofDownlinkSlots', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TDD_UL_DL_ConfigCommon_nrofDownlinkSlots._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=320)], ev=None, er=[])
    _TDD_UL_DL_ConfigCommon_nrofDownlinkSymbols = INT(name='nrofDownlinkSymbols', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TDD_UL_DL_ConfigCommon_nrofDownlinkSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    _TDD_UL_DL_ConfigCommon_nrofUplinkSlots = INT(name='nrofUplinkSlots', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TDD_UL_DL_ConfigCommon_nrofUplinkSlots._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=320)], ev=None, er=[])
    _TDD_UL_DL_ConfigCommon_nrofUplinkSymbols = INT(name='nrofUplinkSymbols', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TDD_UL_DL_ConfigCommon_nrofUplinkSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=13)], ev=None, er=[])
    TDD_UL_DL_ConfigCommon._cont = ASN1Dict([
        ('referenceSubcarrierSpacing', _TDD_UL_DL_ConfigCommon_referenceSubcarrierSpacing),
        ('dl-UL-TransmissionPeriodicity', _TDD_UL_DL_ConfigCommon_dl_UL_TransmissionPeriodicity),
        ('nrofDownlinkSlots', _TDD_UL_DL_ConfigCommon_nrofDownlinkSlots),
        ('nrofDownlinkSymbols', _TDD_UL_DL_ConfigCommon_nrofDownlinkSymbols),
        ('nrofUplinkSlots', _TDD_UL_DL_ConfigCommon_nrofUplinkSlots),
        ('nrofUplinkSymbols', _TDD_UL_DL_ConfigCommon_nrofUplinkSymbols),
        ])
    TDD_UL_DL_ConfigCommon._ext = []
    
    #-----< TDD-UL-DL-ConfigDedicated >-----#
    TDD_UL_DL_ConfigDedicated = SEQ(name='TDD-UL-DL-ConfigDedicated', mode=MODE_TYPE)
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList = SEQ_OF(name='slotSpecificConfigurationsToAddModList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-SlotConfig')))
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList._cont = __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList__item_
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=320)], ev=None, er=[])
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList = SEQ_OF(name='slotSpecificConfigurationsToreleaseList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-SlotIndex')))
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList._cont = __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList__item_
    _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=320)], ev=None, er=[])
    TDD_UL_DL_ConfigDedicated._cont = ASN1Dict([
        ('slotSpecificConfigurationsToAddModList', _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList),
        ('slotSpecificConfigurationsToreleaseList', _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList),
        ])
    TDD_UL_DL_ConfigDedicated._ext = []
    
    #-----< TDD-UL-DL-SlotConfig >-----#
    TDD_UL_DL_SlotConfig = SEQ(name='TDD-UL-DL-SlotConfig', mode=MODE_TYPE)
    _TDD_UL_DL_SlotConfig_slotIndex = INT(name='slotIndex', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'TDD-UL-DL-SlotIndex')))
    _TDD_UL_DL_SlotConfig_symbols = CHOICE(name='symbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __TDD_UL_DL_SlotConfig_symbols_allDownlink = NULL(name='allDownlink', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TDD_UL_DL_SlotConfig_symbols_allUplink = NULL(name='allUplink', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __TDD_UL_DL_SlotConfig_symbols_explicit = SEQ(name='explicit', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofDownlinkSymbols = INT(name='nrofDownlinkSymbols', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofDownlinkSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofUplinkSymbols = INT(name='nrofUplinkSymbols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofUplinkSymbols._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    __TDD_UL_DL_SlotConfig_symbols_explicit._cont = ASN1Dict([
        ('nrofDownlinkSymbols', ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofDownlinkSymbols),
        ('nrofUplinkSymbols', ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofUplinkSymbols),
        ])
    __TDD_UL_DL_SlotConfig_symbols_explicit._ext = []
    _TDD_UL_DL_SlotConfig_symbols._cont = ASN1Dict([
        ('allDownlink', __TDD_UL_DL_SlotConfig_symbols_allDownlink),
        ('allUplink', __TDD_UL_DL_SlotConfig_symbols_allUplink),
        ('explicit', __TDD_UL_DL_SlotConfig_symbols_explicit),
        ])
    _TDD_UL_DL_SlotConfig_symbols._ext = []
    TDD_UL_DL_SlotConfig._cont = ASN1Dict([
        ('slotIndex', _TDD_UL_DL_SlotConfig_slotIndex),
        ('symbols', _TDD_UL_DL_SlotConfig_symbols),
        ])
    TDD_UL_DL_SlotConfig._ext = []
    
    #-----< TDD-UL-DL-SlotIndex >-----#
    TDD_UL_DL_SlotIndex = INT(name='TDD-UL-DL-SlotIndex', mode=MODE_TYPE)
    TDD_UL_DL_SlotIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    
    #-----< TimeToTrigger >-----#
    TimeToTrigger = ENUM(name='TimeToTrigger', mode=MODE_TYPE)
    TimeToTrigger._cont = ASN1Dict([('ms0', 0), ('ms40', 1), ('ms64', 2), ('ms80', 3), ('ms100', 4), ('ms128', 5), ('ms160', 6), ('ms256', 7), ('ms320', 8), ('ms480', 9), ('ms512', 10), ('ms640', 11), ('ms1024', 12), ('ms1280', 13), ('ms2560', 14), ('ms5120', 15)])
    TimeToTrigger._ext = []
    
    #-----< ZP-CSI-RS-Resource >-----#
    ZP_CSI_RS_Resource = SEQ(name='ZP-CSI-RS-Resource', mode=MODE_TYPE)
    _ZP_CSI_RS_Resource_zp_CSI_RS_ResourceId = INT(name='zp-CSI-RS-ResourceId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceId')))
    _ZP_CSI_RS_Resource_resourceMapping = SEQ(name='resourceMapping', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-ResourceMapping')))
    _ZP_CSI_RS_Resource_periodicityAndOffset = CHOICE(name='periodicityAndOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-ResourcePeriodicityAndOffset')), opt=True)
    ZP_CSI_RS_Resource._cont = ASN1Dict([
        ('zp-CSI-RS-ResourceId', _ZP_CSI_RS_Resource_zp_CSI_RS_ResourceId),
        ('resourceMapping', _ZP_CSI_RS_Resource_resourceMapping),
        ('periodicityAndOffset', _ZP_CSI_RS_Resource_periodicityAndOffset),
        ])
    ZP_CSI_RS_Resource._ext = []
    
    #-----< ZP-CSI-RS-ResourceId >-----#
    ZP_CSI_RS_ResourceId = INT(name='ZP-CSI-RS-ResourceId', mode=MODE_TYPE)
    ZP_CSI_RS_ResourceId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    
    #-----< ZP-CSI-RS-ResourceSet >-----#
    ZP_CSI_RS_ResourceSet = SEQ(name='ZP-CSI-RS-ResourceSet', mode=MODE_TYPE)
    _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceSetId = INT(name='zp-CSI-RS-ResourceSetId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceSetId')))
    _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList = SEQ_OF(name='zp-CSI-RS-ResourceIdList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ZP-CSI-RS-ResourceId')))
    _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList._cont = __ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList__item_
    _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _ZP_CSI_RS_ResourceSet_resourceType = ENUM(name='resourceType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ZP_CSI_RS_ResourceSet_resourceType._cont = ASN1Dict([('aperiodic', 0), ('semiPersistent', 1), ('periodic', 2)])
    _ZP_CSI_RS_ResourceSet_resourceType._ext = []
    ZP_CSI_RS_ResourceSet._cont = ASN1Dict([
        ('zp-CSI-RS-ResourceSetId', _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceSetId),
        ('zp-CSI-RS-ResourceIdList', _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList),
        ('resourceType', _ZP_CSI_RS_ResourceSet_resourceType),
        ])
    ZP_CSI_RS_ResourceSet._ext = []
    
    #-----< ZP-CSI-RS-ResourceSetId >-----#
    ZP_CSI_RS_ResourceSetId = INT(name='ZP-CSI-RS-ResourceSetId', mode=MODE_TYPE)
    ZP_CSI_RS_ResourceSetId._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16)], ev=None, er=[])
    
    #-----< BandCombinationList >-----#
    BandCombinationList = SEQ_OF(name='BandCombinationList', mode=MODE_TYPE)
    _BandCombinationList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombination')))
    BandCombinationList._cont = _BandCombinationList__item_
    BandCombinationList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BandCombination >-----#
    BandCombination = SEQ(name='BandCombination', mode=MODE_TYPE)
    _BandCombination_bandAndDL_ParametersList = SEQ_OF(name='bandAndDL-ParametersList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandAndDL-ParametersList')))
    _BandCombination_bandCombinationsUL = BIT_STR(name='bandCombinationsUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BandCombination_bandCombinationsUL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    _BandCombination_bandCombinationParametersList = SEQ_OF(name='bandCombinationParametersList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandCombination_bandCombinationParametersList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationParameters')))
    _BandCombination_bandCombinationParametersList._cont = __BandCombination_bandCombinationParametersList__item_
    _BandCombination_bandCombinationParametersList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    BandCombination._cont = ASN1Dict([
        ('bandAndDL-ParametersList', _BandCombination_bandAndDL_ParametersList),
        ('bandCombinationsUL', _BandCombination_bandCombinationsUL),
        ('bandCombinationParametersList', _BandCombination_bandCombinationParametersList),
        ])
    BandCombination._ext = []
    
    #-----< BandAndDL-ParametersList >-----#
    BandAndDL_ParametersList = SEQ_OF(name='BandAndDL-ParametersList', mode=MODE_TYPE)
    _BandAndDL_ParametersList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandAndDL-Parameters')))
    BandAndDL_ParametersList._cont = _BandAndDL_ParametersList__item_
    BandAndDL_ParametersList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BandAndDL-Parameters >-----#
    BandAndDL_Parameters = CHOICE(name='BandAndDL-Parameters', mode=MODE_TYPE)
    _BandAndDL_Parameters_bandAndDL_ParametersEUTRA = SEQ(name='bandAndDL-ParametersEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandAndDL-ParametersEUTRA')))
    _BandAndDL_Parameters_bandAndDL_ParametersNR = SEQ(name='bandAndDL-ParametersNR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandAndDL-ParametersNR')))
    BandAndDL_Parameters._cont = ASN1Dict([
        ('bandAndDL-ParametersEUTRA', _BandAndDL_Parameters_bandAndDL_ParametersEUTRA),
        ('bandAndDL-ParametersNR', _BandAndDL_Parameters_bandAndDL_ParametersNR),
        ])
    BandAndDL_Parameters._ext = []
    
    #-----< BandCombinationParameters >-----#
    BandCombinationParameters = SEQ(name='BandCombinationParameters', mode=MODE_TYPE)
    _BandCombinationParameters_ca_ParametersNR = SEQ(name='ca-ParametersNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-ParametersNR')), opt=True)
    _BandCombinationParameters_mrdc_Parameters = SEQ(name='mrdc-Parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MRDC-Parameters')), opt=True)
    BandCombinationParameters._cont = ASN1Dict([
        ('ca-ParametersNR', _BandCombinationParameters_ca_ParametersNR),
        ('mrdc-Parameters', _BandCombinationParameters_mrdc_Parameters),
        ])
    BandCombinationParameters._ext = []
    
    #-----< CA-ParametersNR >-----#
    CA_ParametersNR = SEQ(name='CA-ParametersNR', mode=MODE_TYPE)
    _CA_ParametersNR_multipleTimingAdvances = ENUM(name='multipleTimingAdvances', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CA_ParametersNR_multipleTimingAdvances._cont = ASN1Dict([('supported', 0)])
    _CA_ParametersNR_multipleTimingAdvances._ext = []
    _CA_ParametersNR_simultaneousRxTxInterBandCA = ENUM(name='simultaneousRxTxInterBandCA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CA_ParametersNR_simultaneousRxTxInterBandCA._cont = ASN1Dict([('supported', 0)])
    _CA_ParametersNR_simultaneousRxTxInterBandCA._ext = []
    _CA_ParametersNR_supportedBandwidthCombinationSet = BIT_STR(name='supportedBandwidthCombinationSet', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CA_ParametersNR_supportedBandwidthCombinationSet._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    CA_ParametersNR._cont = ASN1Dict([
        ('multipleTimingAdvances', _CA_ParametersNR_multipleTimingAdvances),
        ('simultaneousRxTxInterBandCA', _CA_ParametersNR_simultaneousRxTxInterBandCA),
        ('supportedBandwidthCombinationSet', _CA_ParametersNR_supportedBandwidthCombinationSet),
        ])
    CA_ParametersNR._ext = []
    
    #-----< MRDC-Parameters >-----#
    MRDC_Parameters = SEQ(name='MRDC-Parameters', mode=MODE_TYPE)
    _MRDC_Parameters_singleUL_Transmission = ENUM(name='singleUL-Transmission', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MRDC_Parameters_singleUL_Transmission._cont = ASN1Dict([('supported', 0)])
    _MRDC_Parameters_singleUL_Transmission._ext = []
    _MRDC_Parameters_ul_SharingEUTRA_NR = ENUM(name='ul-SharingEUTRA-NR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MRDC_Parameters_ul_SharingEUTRA_NR._cont = ASN1Dict([('supported', 0)])
    _MRDC_Parameters_ul_SharingEUTRA_NR._ext = []
    _MRDC_Parameters_ul_SwitchingTimeEUTRA_NR = ENUM(name='ul-SwitchingTimeEUTRA-NR', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MRDC_Parameters_ul_SwitchingTimeEUTRA_NR._cont = ASN1Dict([('type1', 0), ('type2', 1)])
    _MRDC_Parameters_ul_SwitchingTimeEUTRA_NR._ext = []
    _MRDC_Parameters_simultaneousRxTxInterBandENDC = ENUM(name='simultaneousRxTxInterBandENDC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MRDC_Parameters_simultaneousRxTxInterBandENDC._cont = ASN1Dict([('supported', 0)])
    _MRDC_Parameters_simultaneousRxTxInterBandENDC._ext = []
    _MRDC_Parameters_asyncIntraBandENDC = ENUM(name='asyncIntraBandENDC', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MRDC_Parameters_asyncIntraBandENDC._cont = ASN1Dict([('supported', 0)])
    _MRDC_Parameters_asyncIntraBandENDC._ext = []
    _MRDC_Parameters_basebandProcesingCombinationMRDC = SEQ_OF(name='basebandProcesingCombinationMRDC', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandProcessingCombinationMRDC')))
    MRDC_Parameters._cont = ASN1Dict([
        ('singleUL-Transmission', _MRDC_Parameters_singleUL_Transmission),
        ('ul-SharingEUTRA-NR', _MRDC_Parameters_ul_SharingEUTRA_NR),
        ('ul-SwitchingTimeEUTRA-NR', _MRDC_Parameters_ul_SwitchingTimeEUTRA_NR),
        ('simultaneousRxTxInterBandENDC', _MRDC_Parameters_simultaneousRxTxInterBandENDC),
        ('asyncIntraBandENDC', _MRDC_Parameters_asyncIntraBandENDC),
        ('basebandProcesingCombinationMRDC', _MRDC_Parameters_basebandProcesingCombinationMRDC),
        ])
    MRDC_Parameters._ext = []
    
    #-----< BandAndDL-ParametersEUTRA >-----#
    BandAndDL_ParametersEUTRA = SEQ(name='BandAndDL-ParametersEUTRA', mode=MODE_TYPE)
    _BandAndDL_ParametersEUTRA_bandEUTRA = INT(name='bandEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorEUTRA')))
    _BandAndDL_ParametersEUTRA_ca_BandwidthClassDL_EUTRA = ENUM(name='ca-BandwidthClassDL-EUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassEUTRA')), opt=True)
    _BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List = SEQ_OF(name='intraBandContiguousCC-InfoDL-EUTRA-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IntraBandContiguousCC-InfoDL-EUTRA')))
    _BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List._cont = __BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List__item_
    _BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BandAndDL_ParametersEUTRA._cont = ASN1Dict([
        ('bandEUTRA', _BandAndDL_ParametersEUTRA_bandEUTRA),
        ('ca-BandwidthClassDL-EUTRA', _BandAndDL_ParametersEUTRA_ca_BandwidthClassDL_EUTRA),
        ('intraBandContiguousCC-InfoDL-EUTRA-List', _BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List),
        ])
    BandAndDL_ParametersEUTRA._ext = []
    
    #-----< BandAndDL-ParametersNR >-----#
    BandAndDL_ParametersNR = SEQ(name='BandAndDL-ParametersNR', mode=MODE_TYPE)
    _BandAndDL_ParametersNR_bandNR = INT(name='bandNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorNR')))
    _BandAndDL_ParametersNR_ca_BandwidthClassDL = ENUM(name='ca-BandwidthClassDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassNR')), opt=True)
    _BandAndDL_ParametersNR_intraBandFreqSeparationDL = ENUM(name='intraBandFreqSeparationDL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqSeparationClass')), opt=True)
    _BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List = SEQ_OF(name='intraBandContiguousCC-InfoDL-List', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IntraBandContiguousCC-InfoDL')))
    _BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List._cont = __BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List__item_
    _BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BandAndDL_ParametersNR._cont = ASN1Dict([
        ('bandNR', _BandAndDL_ParametersNR_bandNR),
        ('ca-BandwidthClassDL', _BandAndDL_ParametersNR_ca_BandwidthClassDL),
        ('intraBandFreqSeparationDL', _BandAndDL_ParametersNR_intraBandFreqSeparationDL),
        ('intraBandContiguousCC-InfoDL-List', _BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List),
        ])
    BandAndDL_ParametersNR._ext = []
    
    #-----< IntraBandContiguousCC-InfoDL >-----#
    IntraBandContiguousCC_InfoDL = SEQ(name='IntraBandContiguousCC-InfoDL', mode=MODE_TYPE)
    _IntraBandContiguousCC_InfoDL_maxNumberMIMO_LayersPDSCH = ENUM(name='maxNumberMIMO-LayersPDSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersDL')), opt=True)
    IntraBandContiguousCC_InfoDL._cont = ASN1Dict([
        ('maxNumberMIMO-LayersPDSCH', _IntraBandContiguousCC_InfoDL_maxNumberMIMO_LayersPDSCH),
        ])
    IntraBandContiguousCC_InfoDL._ext = []
    
    #-----< IntraBandContiguousCC-InfoDL-EUTRA >-----#
    IntraBandContiguousCC_InfoDL_EUTRA = SEQ(name='IntraBandContiguousCC-InfoDL-EUTRA', mode=MODE_TYPE)
    _IntraBandContiguousCC_InfoDL_EUTRA_mimo_CapabilityDL = ENUM(name='mimo-CapabilityDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IntraBandContiguousCC_InfoDL_EUTRA_mimo_CapabilityDL._cont = ASN1Dict([('twoLayers', 0), ('fourLayers', 1), ('eightLayers', 2)])
    _IntraBandContiguousCC_InfoDL_EUTRA_mimo_CapabilityDL._ext = []
    IntraBandContiguousCC_InfoDL_EUTRA._cont = ASN1Dict([
        ('mimo-CapabilityDL', _IntraBandContiguousCC_InfoDL_EUTRA_mimo_CapabilityDL),
        ])
    IntraBandContiguousCC_InfoDL_EUTRA._ext = []
    
    #-----< BandCombinationParametersUL-List >-----#
    BandCombinationParametersUL_List = SEQ_OF(name='BandCombinationParametersUL-List', mode=MODE_TYPE)
    _BandCombinationParametersUL_List__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationParametersUL')))
    BandCombinationParametersUL_List._cont = _BandCombinationParametersUL_List__item_
    BandCombinationParametersUL_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BandCombinationParametersUL >-----#
    BandCombinationParametersUL = SEQ_OF(name='BandCombinationParametersUL', mode=MODE_TYPE)
    _BandCombinationParametersUL__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandParametersUL')))
    BandCombinationParametersUL._cont = _BandCombinationParametersUL__item_
    BandCombinationParametersUL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BandParametersUL >-----#
    BandParametersUL = CHOICE(name='BandParametersUL', mode=MODE_TYPE)
    _BandParametersUL_bandParametersUL_EUTRA = SEQ(name='bandParametersUL-EUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandParametersUL-EUTRA')))
    _BandParametersUL_bandParametersUL_NR = SEQ(name='bandParametersUL-NR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandParametersUL-NR')))
    BandParametersUL._cont = ASN1Dict([
        ('bandParametersUL-EUTRA', _BandParametersUL_bandParametersUL_EUTRA),
        ('bandParametersUL-NR', _BandParametersUL_bandParametersUL_NR),
        ])
    BandParametersUL._ext = []
    
    #-----< BandParametersUL-EUTRA >-----#
    BandParametersUL_EUTRA = SEQ(name='BandParametersUL-EUTRA', mode=MODE_TYPE)
    _BandParametersUL_EUTRA_ca_BandwidthClassUL_EUTRA = ENUM(name='ca-BandwidthClassUL-EUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassEUTRA')), opt=True)
    _BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List = SEQ_OF(name='intraBandContiguousCC-InfoUL-EUTRA-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IntraBandContiguousCC-InfoUL-EUTRA')))
    _BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List._cont = __BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List__item_
    _BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BandParametersUL_EUTRA._cont = ASN1Dict([
        ('ca-BandwidthClassUL-EUTRA', _BandParametersUL_EUTRA_ca_BandwidthClassUL_EUTRA),
        ('intraBandContiguousCC-InfoUL-EUTRA-List', _BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List),
        ])
    BandParametersUL_EUTRA._ext = []
    
    #-----< BandParametersUL-NR >-----#
    BandParametersUL_NR = SEQ(name='BandParametersUL-NR', mode=MODE_TYPE)
    _BandParametersUL_NR_ca_BandwidthClassUL = ENUM(name='ca-BandwidthClassUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassNR')), opt=True)
    _BandParametersUL_NR_intraBandFreqSeparationUL = ENUM(name='intraBandFreqSeparationUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqSeparationClass')), opt=True)
    _BandParametersUL_NR_intraBandContiguousCC_InfoUL_List = SEQ_OF(name='intraBandContiguousCC-InfoUL-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandParametersUL_NR_intraBandContiguousCC_InfoUL_List__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'IntraBandContiguousCC-InfoUL')))
    _BandParametersUL_NR_intraBandContiguousCC_InfoUL_List._cont = __BandParametersUL_NR_intraBandContiguousCC_InfoUL_List__item_
    _BandParametersUL_NR_intraBandContiguousCC_InfoUL_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BandParametersUL_NR._cont = ASN1Dict([
        ('ca-BandwidthClassUL', _BandParametersUL_NR_ca_BandwidthClassUL),
        ('intraBandFreqSeparationUL', _BandParametersUL_NR_intraBandFreqSeparationUL),
        ('intraBandContiguousCC-InfoUL-List', _BandParametersUL_NR_intraBandContiguousCC_InfoUL_List),
        ])
    BandParametersUL_NR._ext = []
    
    #-----< IntraBandContiguousCC-InfoUL >-----#
    IntraBandContiguousCC_InfoUL = SEQ(name='IntraBandContiguousCC-InfoUL', mode=MODE_TYPE)
    _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersCB_PUSCH = ENUM(name='maxNumberMIMO-LayersCB-PUSCH', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersNonCB_PUSCH = ENUM(name='maxNumberMIMO-LayersNonCB-PUSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    IntraBandContiguousCC_InfoUL._cont = ASN1Dict([
        ('maxNumberMIMO-LayersCB-PUSCH', _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersCB_PUSCH),
        ('maxNumberMIMO-LayersNonCB-PUSCH', _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersNonCB_PUSCH),
        ])
    IntraBandContiguousCC_InfoUL._ext = []
    
    #-----< IntraBandContiguousCC-InfoUL-EUTRA >-----#
    IntraBandContiguousCC_InfoUL_EUTRA = SEQ(name='IntraBandContiguousCC-InfoUL-EUTRA', mode=MODE_TYPE)
    _IntraBandContiguousCC_InfoUL_EUTRA_mimo_CapabilityUL = ENUM(name='mimo-CapabilityUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IntraBandContiguousCC_InfoUL_EUTRA_mimo_CapabilityUL._cont = ASN1Dict([('twoLayers', 0), ('fourLayers', 1)])
    _IntraBandContiguousCC_InfoUL_EUTRA_mimo_CapabilityUL._ext = []
    IntraBandContiguousCC_InfoUL_EUTRA._cont = ASN1Dict([
        ('mimo-CapabilityUL', _IntraBandContiguousCC_InfoUL_EUTRA_mimo_CapabilityUL),
        ])
    IntraBandContiguousCC_InfoUL_EUTRA._ext = []
    
    #-----< BasebandCombinationParametersUL-List >-----#
    BasebandCombinationParametersUL_List = SEQ_OF(name='BasebandCombinationParametersUL-List', mode=MODE_TYPE)
    _BasebandCombinationParametersUL_List__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandCombinationParametersUL')))
    BasebandCombinationParametersUL_List._cont = _BasebandCombinationParametersUL_List__item_
    BasebandCombinationParametersUL_List._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BasebandCombinationParametersUL >-----#
    BasebandCombinationParametersUL = SEQ_OF(name='BasebandCombinationParametersUL', mode=MODE_TYPE)
    _BasebandCombinationParametersUL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandParametersPerBandUL')))
    BasebandCombinationParametersUL._cont = _BasebandCombinationParametersUL__item_
    BasebandCombinationParametersUL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BasebandParametersPerBandUL >-----#
    BasebandParametersPerBandUL = SEQ(name='BasebandParametersPerBandUL', mode=MODE_TYPE)
    _BasebandParametersPerBandUL_ca_BandwidthClassUL = ENUM(name='ca-BandwidthClassUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassNR')))
    _BasebandParametersPerBandUL_freqRange = ENUM(name='freqRange', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasebandParametersPerBandUL_freqRange._cont = ASN1Dict([('fr1', 0), ('fr2', 1)])
    _BasebandParametersPerBandUL_freqRange._ext = []
    _BasebandParametersPerBandUL_basebandParametersPerCC_UL = SEQ_OF(name='basebandParametersPerCC-UL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerBandUL_basebandParametersPerCC_UL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandParametersPerCC-UL')))
    _BasebandParametersPerBandUL_basebandParametersPerCC_UL._cont = __BasebandParametersPerBandUL_basebandParametersPerCC_UL__item_
    _BasebandParametersPerBandUL_basebandParametersPerCC_UL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BasebandParametersPerBandUL._cont = ASN1Dict([
        ('ca-BandwidthClassUL', _BasebandParametersPerBandUL_ca_BandwidthClassUL),
        ('freqRange', _BasebandParametersPerBandUL_freqRange),
        ('basebandParametersPerCC-UL', _BasebandParametersPerBandUL_basebandParametersPerCC_UL),
        ])
    BasebandParametersPerBandUL._ext = []
    
    #-----< BasebandParametersPerCC-UL >-----#
    BasebandParametersPerCC_UL = SEQ(name='BasebandParametersPerCC-UL', mode=MODE_TYPE)
    _BasebandParametersPerCC_UL_supportedSubcarrierSpacingUL = ENUM(name='supportedSubcarrierSpacingUL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _BasebandParametersPerCC_UL_supportedBandwidthUL = CHOICE(name='supportedBandwidthUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr1 = ENUM(name='fr1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr1._cont = ASN1Dict([('mhz5', 0), ('mhz10', 1), ('mhz15', 2), ('mhz20', 3), ('mhz25', 4), ('mhz30', 5), ('mhz40', 6), ('mhz50', 7), ('mhz60', 8), ('mhz80', 9), ('mhz100', 10)])
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr1._ext = []
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr2 = ENUM(name='fr2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr2._cont = ASN1Dict([('mhz50', 0), ('mhz100', 1), ('mhz200', 2), ('mhz400', 3)])
    __BasebandParametersPerCC_UL_supportedBandwidthUL_fr2._ext = []
    _BasebandParametersPerCC_UL_supportedBandwidthUL._cont = ASN1Dict([
        ('fr1', __BasebandParametersPerCC_UL_supportedBandwidthUL_fr1),
        ('fr2', __BasebandParametersPerCC_UL_supportedBandwidthUL_fr2),
        ])
    _BasebandParametersPerCC_UL_supportedBandwidthUL._ext = []
    _BasebandParametersPerCC_UL_scalingFactor0dot75 = ENUM(name='scalingFactor0dot75', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_scalingFactor0dot75._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_scalingFactor0dot75._ext = []
    _BasebandParametersPerCC_UL_maxNumberMIMO_LayersCB_PUSCH = ENUM(name='maxNumberMIMO-LayersCB-PUSCH', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    _BasebandParametersPerCC_UL_maxNumberMIMO_LayersNonCB_PUSCH = ENUM(name='maxNumberMIMO-LayersNonCB-PUSCH', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    _BasebandParametersPerCC_UL_supportedModulationOrderUL = ENUM(name='supportedModulationOrderUL', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ModulationOrder')), opt=True)
    _BasebandParametersPerCC_UL_supportedSRS_Resources = SEQ(name='supportedSRS-Resources', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-Resources')), opt=True)
    _BasebandParametersPerCC_UL_srs_TxSwitch = SEQ(name='srs-TxSwitch', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-TxSwitch')), opt=True)
    _BasebandParametersPerCC_UL_lowLatencyCSI_Feedback = ENUM(name='lowLatencyCSI-Feedback', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_lowLatencyCSI_Feedback._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_lowLatencyCSI_Feedback._ext = []
    _BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot = SEQ(name='pusch-DifferentTB-PerSlot', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_15kHz = ENUM(name='scs-15kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_15kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_15kHz._ext = []
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_30kHz = ENUM(name='scs-30kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_30kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_30kHz._ext = []
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_60kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_60kHz._ext = []
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_120kHz = ENUM(name='scs-120kHz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_120kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_120kHz._ext = []
    _BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot._cont = ASN1Dict([
        ('scs-15kHz', __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_15kHz),
        ('scs-30kHz', __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_30kHz),
        ('scs-60kHz', __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_60kHz),
        ('scs-120kHz', __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_120kHz),
        ])
    _BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot._ext = []
    _BasebandParametersPerCC_UL_twoPUCCH_Group = ENUM(name='twoPUCCH-Group', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_twoPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_twoPUCCH_Group._ext = []
    _BasebandParametersPerCC_UL_diffNumerologyAcrossPUCCH_Group = ENUM(name='diffNumerologyAcrossPUCCH-Group', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_diffNumerologyAcrossPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_diffNumerologyAcrossPUCCH_Group._ext = []
    _BasebandParametersPerCC_UL_diffNumerologyWithinPUCCH_Group = ENUM(name='diffNumerologyWithinPUCCH-Group', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_diffNumerologyWithinPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_diffNumerologyWithinPUCCH_Group._ext = []
    _BasebandParametersPerCC_UL_crossCarrierScheduling = ENUM(name='crossCarrierScheduling', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_crossCarrierScheduling._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_crossCarrierScheduling._ext = []
    _BasebandParametersPerCC_UL_supportedNumberTAG = ENUM(name='supportedNumberTAG', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_supportedNumberTAG._cont = ASN1Dict([('n2', 0), ('n3', 1), ('n4', 2)])
    _BasebandParametersPerCC_UL_supportedNumberTAG._ext = []
    _BasebandParametersPerCC_UL_dynamicSwitchSUL = ENUM(name='dynamicSwitchSUL', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_dynamicSwitchSUL._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_dynamicSwitchSUL._ext = []
    _BasebandParametersPerCC_UL_simultaneousTxSUL_NonSUL = ENUM(name='simultaneousTxSUL-NonSUL', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_simultaneousTxSUL_NonSUL._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_simultaneousTxSUL_NonSUL._ext = []
    _BasebandParametersPerCC_UL_searchSpaceSharingCA_UL = ENUM(name='searchSpaceSharingCA-UL', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_UL_searchSpaceSharingCA_UL._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_UL_searchSpaceSharingCA_UL._ext = []
    BasebandParametersPerCC_UL._cont = ASN1Dict([
        ('supportedSubcarrierSpacingUL', _BasebandParametersPerCC_UL_supportedSubcarrierSpacingUL),
        ('supportedBandwidthUL', _BasebandParametersPerCC_UL_supportedBandwidthUL),
        ('scalingFactor0dot75', _BasebandParametersPerCC_UL_scalingFactor0dot75),
        ('maxNumberMIMO-LayersCB-PUSCH', _BasebandParametersPerCC_UL_maxNumberMIMO_LayersCB_PUSCH),
        ('maxNumberMIMO-LayersNonCB-PUSCH', _BasebandParametersPerCC_UL_maxNumberMIMO_LayersNonCB_PUSCH),
        ('supportedModulationOrderUL', _BasebandParametersPerCC_UL_supportedModulationOrderUL),
        ('supportedSRS-Resources', _BasebandParametersPerCC_UL_supportedSRS_Resources),
        ('srs-TxSwitch', _BasebandParametersPerCC_UL_srs_TxSwitch),
        ('lowLatencyCSI-Feedback', _BasebandParametersPerCC_UL_lowLatencyCSI_Feedback),
        ('pusch-DifferentTB-PerSlot', _BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot),
        ('twoPUCCH-Group', _BasebandParametersPerCC_UL_twoPUCCH_Group),
        ('diffNumerologyAcrossPUCCH-Group', _BasebandParametersPerCC_UL_diffNumerologyAcrossPUCCH_Group),
        ('diffNumerologyWithinPUCCH-Group', _BasebandParametersPerCC_UL_diffNumerologyWithinPUCCH_Group),
        ('crossCarrierScheduling', _BasebandParametersPerCC_UL_crossCarrierScheduling),
        ('supportedNumberTAG', _BasebandParametersPerCC_UL_supportedNumberTAG),
        ('dynamicSwitchSUL', _BasebandParametersPerCC_UL_dynamicSwitchSUL),
        ('simultaneousTxSUL-NonSUL', _BasebandParametersPerCC_UL_simultaneousTxSUL_NonSUL),
        ('searchSpaceSharingCA-UL', _BasebandParametersPerCC_UL_searchSpaceSharingCA_UL),
        ])
    BasebandParametersPerCC_UL._ext = []
    
    #-----< BasebandProcessingCombinationMRDC >-----#
    BasebandProcessingCombinationMRDC = SEQ_OF(name='BasebandProcessingCombinationMRDC', mode=MODE_TYPE)
    _BasebandProcessingCombinationMRDC__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandProcessingCombinationLink')))
    BasebandProcessingCombinationMRDC._cont = _BasebandProcessingCombinationMRDC__item_
    BasebandProcessingCombinationMRDC._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BasebandProcessingCombinationLink >-----#
    BasebandProcessingCombinationLink = SEQ(name='BasebandProcessingCombinationLink', mode=MODE_TYPE)
    _BasebandProcessingCombinationLink_basebandProcessingCombinationIndexMN = INT(name='basebandProcessingCombinationIndexMN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandProcessingCombinationIndex')))
    _BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN = SEQ_OF(name='basebandProcessingCombinationLinkedIndexSN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandProcessingCombinationIndex')))
    _BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN._cont = __BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN__item_
    _BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    BasebandProcessingCombinationLink._cont = ASN1Dict([
        ('basebandProcessingCombinationIndexMN', _BasebandProcessingCombinationLink_basebandProcessingCombinationIndexMN),
        ('basebandProcessingCombinationLinkedIndexSN', _BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN),
        ])
    BasebandProcessingCombinationLink._ext = []
    
    #-----< BasebandProcessingCombinationIndex >-----#
    BasebandProcessingCombinationIndex = INT(name='BasebandProcessingCombinationIndex', mode=MODE_TYPE)
    BasebandProcessingCombinationIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< CA-BandwidthClassNR >-----#
    CA_BandwidthClassNR = ENUM(name='CA-BandwidthClassNR', mode=MODE_TYPE)
    CA_BandwidthClassNR._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4), ('f', 5), ('g', 6), ('h', 7), ('i', 8), ('j', 9), ('k', 10), ('l', 11), ('m', 12), ('n', 13), ('o', 14), ('p', 15), ('q', 16)])
    CA_BandwidthClassNR._ext = []
    
    #-----< CA-BandwidthClassEUTRA >-----#
    CA_BandwidthClassEUTRA = ENUM(name='CA-BandwidthClassEUTRA', mode=MODE_TYPE)
    CA_BandwidthClassEUTRA._cont = ASN1Dict([('a', 0), ('b', 1), ('c', 2), ('d', 3), ('e', 4), ('f', 5)])
    CA_BandwidthClassEUTRA._ext = []
    
    #-----< FreqBandIndicatorEUTRA >-----#
    FreqBandIndicatorEUTRA = INT(name='FreqBandIndicatorEUTRA', mode=MODE_TYPE)
    FreqBandIndicatorEUTRA._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< FreqBandList >-----#
    FreqBandList = SEQ_OF(name='FreqBandList', mode=MODE_TYPE)
    _FreqBandList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandInformation')))
    FreqBandList._cont = _FreqBandList__item_
    FreqBandList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1280)], ev=None, er=[])
    
    #-----< FreqBandInformation >-----#
    FreqBandInformation = CHOICE(name='FreqBandInformation', mode=MODE_TYPE)
    _FreqBandInformation_bandEUTRA = INT(name='bandEUTRA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorEUTRA')))
    _FreqBandInformation_bandNR = INT(name='bandNR', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorNR')))
    FreqBandInformation._cont = ASN1Dict([
        ('bandEUTRA', _FreqBandInformation_bandEUTRA),
        ('bandNR', _FreqBandInformation_bandNR),
        ])
    FreqBandInformation._ext = []
    
    #-----< FreqSeparationClass >-----#
    FreqSeparationClass = ENUM(name='FreqSeparationClass', mode=MODE_TYPE)
    FreqSeparationClass._cont = ASN1Dict([('c1', 0), ('c2', 1), ('c3', 2)])
    FreqSeparationClass._ext = []
    
    #-----< MIMO-LayersDL >-----#
    MIMO_LayersDL = ENUM(name='MIMO-LayersDL', mode=MODE_TYPE)
    MIMO_LayersDL._cont = ASN1Dict([('twoLayers', 0), ('fourLayers', 1), ('eightLayers', 2)])
    MIMO_LayersDL._ext = []
    
    #-----< MIMO-LayersUL >-----#
    MIMO_LayersUL = ENUM(name='MIMO-LayersUL', mode=MODE_TYPE)
    MIMO_LayersUL._cont = ASN1Dict([('oneLayer', 0), ('twoLayers', 1), ('fourLayers', 2)])
    MIMO_LayersUL._ext = []
    
    #-----< ModulationOrder >-----#
    ModulationOrder = ENUM(name='ModulationOrder', mode=MODE_TYPE)
    ModulationOrder._cont = ASN1Dict([('bpsk-halfpi', 0), ('bpsk', 1), ('qpsk', 2), ('qam16', 3), ('qam64', 4), ('qam256', 5)])
    ModulationOrder._ext = []
    
    #-----< RAT-Type >-----#
    RAT_Type = ENUM(name='RAT-Type', mode=MODE_TYPE)
    RAT_Type._cont = ASN1Dict([('nr', 0), ('eutra-nr', 1), ('spare2', 2), ('spare1', 3)])
    RAT_Type._ext = []
    
    #-----< SupportedBasebandProcessingCombination >-----#
    SupportedBasebandProcessingCombination = SEQ_OF(name='SupportedBasebandProcessingCombination', mode=MODE_TYPE)
    _SupportedBasebandProcessingCombination__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandProcessingCombination')))
    SupportedBasebandProcessingCombination._cont = _SupportedBasebandProcessingCombination__item_
    SupportedBasebandProcessingCombination._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BasebandProcessingCombination >-----#
    BasebandProcessingCombination = SEQ(name='BasebandProcessingCombination', mode=MODE_TYPE)
    _BasebandProcessingCombination_basebandParametersDL = SEQ_OF(name='basebandParametersDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandProcessingCombination_basebandParametersDL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandParametersPerBandDL')))
    _BasebandProcessingCombination_basebandParametersDL._cont = __BasebandProcessingCombination_basebandParametersDL__item_
    _BasebandProcessingCombination_basebandParametersDL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _BasebandProcessingCombination_basebandParametersUL = BIT_STR(name='basebandParametersUL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasebandProcessingCombination_basebandParametersUL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    BasebandProcessingCombination._cont = ASN1Dict([
        ('basebandParametersDL', _BasebandProcessingCombination_basebandParametersDL),
        ('basebandParametersUL', _BasebandProcessingCombination_basebandParametersUL),
        ])
    BasebandProcessingCombination._ext = []
    
    #-----< BasebandParametersPerBandDL >-----#
    BasebandParametersPerBandDL = SEQ(name='BasebandParametersPerBandDL', mode=MODE_TYPE)
    _BasebandParametersPerBandDL_ca_BandwidthClassDL = ENUM(name='ca-BandwidthClassDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CA-BandwidthClassNR')))
    _BasebandParametersPerBandDL_freqRange = ENUM(name='freqRange', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BasebandParametersPerBandDL_freqRange._cont = ASN1Dict([('fr1', 0), ('fr2', 1)])
    _BasebandParametersPerBandDL_freqRange._ext = []
    _BasebandParametersPerBandDL_basebandParametersPerCC_DL = SEQ_OF(name='basebandParametersPerCC-DL', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerBandDL_basebandParametersPerCC_DL__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandParametersPerCC-DL')))
    _BasebandParametersPerBandDL_basebandParametersPerCC_DL._cont = __BasebandParametersPerBandDL_basebandParametersPerCC_DL__item_
    _BasebandParametersPerBandDL_basebandParametersPerCC_DL._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    BasebandParametersPerBandDL._cont = ASN1Dict([
        ('ca-BandwidthClassDL', _BasebandParametersPerBandDL_ca_BandwidthClassDL),
        ('freqRange', _BasebandParametersPerBandDL_freqRange),
        ('basebandParametersPerCC-DL', _BasebandParametersPerBandDL_basebandParametersPerCC_DL),
        ])
    BasebandParametersPerBandDL._ext = []
    
    #-----< BasebandParametersPerCC-DL >-----#
    BasebandParametersPerCC_DL = SEQ(name='BasebandParametersPerCC-DL', mode=MODE_TYPE)
    _BasebandParametersPerCC_DL_supportedSubcarrierSpacingDL = ENUM(name='supportedSubcarrierSpacingDL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SubcarrierSpacing')))
    _BasebandParametersPerCC_DL_supportedBandwidthDL = CHOICE(name='supportedBandwidthDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr1 = ENUM(name='fr1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr1._cont = ASN1Dict([('mhz5', 0), ('mhz10', 1), ('mhz15', 2), ('mhz20', 3), ('mhz25', 4), ('mhz30', 5), ('mhz40', 6), ('mhz50', 7), ('mhz60', 8), ('mhz80', 9), ('mhz100', 10)])
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr1._ext = []
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr2 = ENUM(name='fr2', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr2._cont = ASN1Dict([('mhz50', 0), ('mhz100', 1), ('mhz200', 2), ('mhz400', 3)])
    __BasebandParametersPerCC_DL_supportedBandwidthDL_fr2._ext = []
    _BasebandParametersPerCC_DL_supportedBandwidthDL._cont = ASN1Dict([
        ('fr1', __BasebandParametersPerCC_DL_supportedBandwidthDL_fr1),
        ('fr2', __BasebandParametersPerCC_DL_supportedBandwidthDL_fr2),
        ])
    _BasebandParametersPerCC_DL_supportedBandwidthDL._ext = []
    _BasebandParametersPerCC_DL_scalingFactor0dot75 = ENUM(name='scalingFactor0dot75', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_scalingFactor0dot75._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_scalingFactor0dot75._ext = []
    _BasebandParametersPerCC_DL_timeDurationForQCL = SEQ(name='timeDurationForQCL', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_timeDurationForQCL_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_timeDurationForQCL_scs_60kHz._cont = ASN1Dict([('s7', 0), ('s14', 1), ('s28', 2)])
    __BasebandParametersPerCC_DL_timeDurationForQCL_scs_60kHz._ext = []
    __BasebandParametersPerCC_DL_timeDurationForQCL_sch_120kHz = ENUM(name='sch-120kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_timeDurationForQCL_sch_120kHz._cont = ASN1Dict([('s14', 0), ('s28', 1)])
    __BasebandParametersPerCC_DL_timeDurationForQCL_sch_120kHz._ext = []
    _BasebandParametersPerCC_DL_timeDurationForQCL._cont = ASN1Dict([
        ('scs-60kHz', __BasebandParametersPerCC_DL_timeDurationForQCL_scs_60kHz),
        ('sch-120kHz', __BasebandParametersPerCC_DL_timeDurationForQCL_sch_120kHz),
        ])
    _BasebandParametersPerCC_DL_timeDurationForQCL._ext = []
    _BasebandParametersPerCC_DL_scellWithoutSSB = ENUM(name='scellWithoutSSB', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_scellWithoutSSB._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_scellWithoutSSB._ext = []
    _BasebandParametersPerCC_DL_csi_RS_MeasSCellWithoutSSB = ENUM(name='csi-RS-MeasSCellWithoutSSB', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_csi_RS_MeasSCellWithoutSSB._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_csi_RS_MeasSCellWithoutSSB._ext = []
    _BasebandParametersPerCC_DL_maxNumberMIMO_LayersPDSCH = ENUM(name='maxNumberMIMO-LayersPDSCH', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersDL')), opt=True)
    _BasebandParametersPerCC_DL_supportedModulationOrderDL = ENUM(name='supportedModulationOrderDL', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ModulationOrder')), opt=True)
    _BasebandParametersPerCC_DL_srs_AssocCSI_RS = ENUM(name='srs-AssocCSI-RS', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_srs_AssocCSI_RS._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_srs_AssocCSI_RS._ext = []
    _BasebandParametersPerCC_DL_type1_3_CSS = ENUM(name='type1-3-CSS', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_type1_3_CSS._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_type1_3_CSS._ext = []
    _BasebandParametersPerCC_DL_pdcchMonitoringAnyOccasions = ENUM(name='pdcchMonitoringAnyOccasions', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_pdcchMonitoringAnyOccasions._cont = ASN1Dict([('withoutDCI-gap', 0), ('withDCI-gap', 1)])
    _BasebandParametersPerCC_DL_pdcchMonitoringAnyOccasions._ext = []
    _BasebandParametersPerCC_DL_ue_SpecificUL_DL_Assignment = ENUM(name='ue-SpecificUL-DL-Assignment', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_ue_SpecificUL_DL_Assignment._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_ue_SpecificUL_DL_Assignment._ext = []
    _BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot = SEQ(name='pdsch-DifferentTB-PerSlot', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_15kHz = ENUM(name='scs-15kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_15kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_15kHz._ext = []
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_30kHz = ENUM(name='scs-30kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_30kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_30kHz._ext = []
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_60kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_60kHz._ext = []
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_120kHz = ENUM(name='scs-120kHz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_120kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_120kHz._ext = []
    _BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot._cont = ASN1Dict([
        ('scs-15kHz', __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_15kHz),
        ('scs-30kHz', __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_30kHz),
        ('scs-60kHz', __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_60kHz),
        ('scs-120kHz', __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_120kHz),
        ])
    _BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot._ext = []
    _BasebandParametersPerCC_DL_crossCarrierScheduling = ENUM(name='crossCarrierScheduling', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_crossCarrierScheduling._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_crossCarrierScheduling._ext = []
    _BasebandParametersPerCC_DL_searchSpaceSharingCA_DL = ENUM(name='searchSpaceSharingCA-DL', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BasebandParametersPerCC_DL_searchSpaceSharingCA_DL._cont = ASN1Dict([('supported', 0)])
    _BasebandParametersPerCC_DL_searchSpaceSharingCA_DL._ext = []
    BasebandParametersPerCC_DL._cont = ASN1Dict([
        ('supportedSubcarrierSpacingDL', _BasebandParametersPerCC_DL_supportedSubcarrierSpacingDL),
        ('supportedBandwidthDL', _BasebandParametersPerCC_DL_supportedBandwidthDL),
        ('scalingFactor0dot75', _BasebandParametersPerCC_DL_scalingFactor0dot75),
        ('timeDurationForQCL', _BasebandParametersPerCC_DL_timeDurationForQCL),
        ('scellWithoutSSB', _BasebandParametersPerCC_DL_scellWithoutSSB),
        ('csi-RS-MeasSCellWithoutSSB', _BasebandParametersPerCC_DL_csi_RS_MeasSCellWithoutSSB),
        ('maxNumberMIMO-LayersPDSCH', _BasebandParametersPerCC_DL_maxNumberMIMO_LayersPDSCH),
        ('supportedModulationOrderDL', _BasebandParametersPerCC_DL_supportedModulationOrderDL),
        ('srs-AssocCSI-RS', _BasebandParametersPerCC_DL_srs_AssocCSI_RS),
        ('type1-3-CSS', _BasebandParametersPerCC_DL_type1_3_CSS),
        ('pdcchMonitoringAnyOccasions', _BasebandParametersPerCC_DL_pdcchMonitoringAnyOccasions),
        ('ue-SpecificUL-DL-Assignment', _BasebandParametersPerCC_DL_ue_SpecificUL_DL_Assignment),
        ('pdsch-DifferentTB-PerSlot', _BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot),
        ('crossCarrierScheduling', _BasebandParametersPerCC_DL_crossCarrierScheduling),
        ('searchSpaceSharingCA-DL', _BasebandParametersPerCC_DL_searchSpaceSharingCA_DL),
        ])
    BasebandParametersPerCC_DL._ext = []
    
    #-----< UE-CapabilityRAT-ContainerList >-----#
    UE_CapabilityRAT_ContainerList = SEQ_OF(name='UE-CapabilityRAT-ContainerList', mode=MODE_TYPE)
    _UE_CapabilityRAT_ContainerList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-CapabilityRAT-Container')))
    UE_CapabilityRAT_ContainerList._cont = _UE_CapabilityRAT_ContainerList__item_
    UE_CapabilityRAT_ContainerList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8)], ev=None, er=[])
    
    #-----< UE-CapabilityRAT-Container >-----#
    UE_CapabilityRAT_Container = SEQ(name='UE-CapabilityRAT-Container', mode=MODE_TYPE)
    _UE_CapabilityRAT_Container_rat_Type = ENUM(name='rat-Type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RAT-Type')))
    _UE_CapabilityRAT_Container_ue_CapabilityRAT_Container = OCT_STR(name='ue-CapabilityRAT-Container', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    UE_CapabilityRAT_Container._cont = ASN1Dict([
        ('rat-Type', _UE_CapabilityRAT_Container_rat_Type),
        ('ue-CapabilityRAT-Container', _UE_CapabilityRAT_Container_ue_CapabilityRAT_Container),
        ])
    UE_CapabilityRAT_Container._ext = []
    
    #-----< UE-MRDC-Capability >-----#
    UE_MRDC_Capability = SEQ(name='UE-MRDC-Capability', mode=MODE_TYPE)
    _UE_MRDC_Capability_measParametersMRDC = SEQ(name='measParametersMRDC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC')), opt=True)
    _UE_MRDC_Capability_rf_ParametersMRDC = SEQ(name='rf-ParametersMRDC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RF-ParametersMRDC')))
    _UE_MRDC_Capability_phy_ParametersMRDC = SEQ(name='phy-ParametersMRDC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersMRDC')), opt=True)
    _UE_MRDC_Capability_generalParametersMRDC = SEQ(name='generalParametersMRDC', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'GeneralParametersMRDC-XDD-Diff')), opt=True)
    _UE_MRDC_Capability_fdd_Add_UE_MRDC_Capabilities = SEQ(name='fdd-Add-UE-MRDC-Capabilities', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-MRDC-CapabilityAddXDD-Mode')), opt=True)
    _UE_MRDC_Capability_tdd_Add_UE_MRDC_Capabilities = SEQ(name='tdd-Add-UE-MRDC-Capabilities', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-MRDC-CapabilityAddXDD-Mode')), opt=True)
    _UE_MRDC_Capability_fr1_Add_UE_MRDC_Capabilities = SEQ(name='fr1-Add-UE-MRDC-Capabilities', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-MRDC-CapabilityAddFRX-Mode')), opt=True)
    _UE_MRDC_Capability_fr2_Add_UE_MRDC_Capabilities = SEQ(name='fr2-Add-UE-MRDC-Capabilities', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-MRDC-CapabilityAddFRX-Mode')), opt=True)
    _UE_MRDC_Capability_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_MRDC_Capability_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_MRDC_Capability_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UE_MRDC_Capability_nonCriticalExtension._ext = []
    UE_MRDC_Capability._cont = ASN1Dict([
        ('measParametersMRDC', _UE_MRDC_Capability_measParametersMRDC),
        ('rf-ParametersMRDC', _UE_MRDC_Capability_rf_ParametersMRDC),
        ('phy-ParametersMRDC', _UE_MRDC_Capability_phy_ParametersMRDC),
        ('generalParametersMRDC', _UE_MRDC_Capability_generalParametersMRDC),
        ('fdd-Add-UE-MRDC-Capabilities', _UE_MRDC_Capability_fdd_Add_UE_MRDC_Capabilities),
        ('tdd-Add-UE-MRDC-Capabilities', _UE_MRDC_Capability_tdd_Add_UE_MRDC_Capabilities),
        ('fr1-Add-UE-MRDC-Capabilities', _UE_MRDC_Capability_fr1_Add_UE_MRDC_Capabilities),
        ('fr2-Add-UE-MRDC-Capabilities', _UE_MRDC_Capability_fr2_Add_UE_MRDC_Capabilities),
        ('lateNonCriticalExtension', _UE_MRDC_Capability_lateNonCriticalExtension),
        ('nonCriticalExtension', _UE_MRDC_Capability_nonCriticalExtension),
        ])
    UE_MRDC_Capability._ext = []
    
    #-----< UE-MRDC-CapabilityAddXDD-Mode >-----#
    UE_MRDC_CapabilityAddXDD_Mode = SEQ(name='UE-MRDC-CapabilityAddXDD-Mode', mode=MODE_TYPE)
    _UE_MRDC_CapabilityAddXDD_Mode_phy_ParametersMRDC_XDD_Diff = SEQ(name='phy-ParametersMRDC-XDD-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersMRDC-XDD-Diff')), opt=True)
    _UE_MRDC_CapabilityAddXDD_Mode_measParametersMRDC_XDD_Diff = SEQ(name='measParametersMRDC-XDD-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC-XDD-Diff')), opt=True)
    _UE_MRDC_CapabilityAddXDD_Mode_generalParametersMRDC_XDD_Diff = SEQ(name='generalParametersMRDC-XDD-Diff', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'GeneralParametersMRDC-XDD-Diff')), opt=True)
    UE_MRDC_CapabilityAddXDD_Mode._cont = ASN1Dict([
        ('phy-ParametersMRDC-XDD-Diff', _UE_MRDC_CapabilityAddXDD_Mode_phy_ParametersMRDC_XDD_Diff),
        ('measParametersMRDC-XDD-Diff', _UE_MRDC_CapabilityAddXDD_Mode_measParametersMRDC_XDD_Diff),
        ('generalParametersMRDC-XDD-Diff', _UE_MRDC_CapabilityAddXDD_Mode_generalParametersMRDC_XDD_Diff),
        ])
    UE_MRDC_CapabilityAddXDD_Mode._ext = []
    
    #-----< UE-MRDC-CapabilityAddFRX-Mode >-----#
    UE_MRDC_CapabilityAddFRX_Mode = SEQ(name='UE-MRDC-CapabilityAddFRX-Mode', mode=MODE_TYPE)
    _UE_MRDC_CapabilityAddFRX_Mode_phy_ParametersMRDC_FRX_Diff = SEQ(name='phy-ParametersMRDC-FRX-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersMRDC-FRX-Diff')), opt=True)
    _UE_MRDC_CapabilityAddFRX_Mode_measParametersMRDC_FRX_Diff = SEQ(name='measParametersMRDC-FRX-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC-FRX-Diff')))
    UE_MRDC_CapabilityAddFRX_Mode._cont = ASN1Dict([
        ('phy-ParametersMRDC-FRX-Diff', _UE_MRDC_CapabilityAddFRX_Mode_phy_ParametersMRDC_FRX_Diff),
        ('measParametersMRDC-FRX-Diff', _UE_MRDC_CapabilityAddFRX_Mode_measParametersMRDC_FRX_Diff),
        ])
    UE_MRDC_CapabilityAddFRX_Mode._ext = []
    
    #-----< RF-ParametersMRDC >-----#
    RF_ParametersMRDC = SEQ(name='RF-ParametersMRDC', mode=MODE_TYPE)
    _RF_ParametersMRDC_supportedBandCombination = SEQ_OF(name='supportedBandCombination', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationList')))
    _RF_ParametersMRDC_bandCombinationParametersUL_List = SEQ_OF(name='bandCombinationParametersUL-List', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationParametersUL-List')))
    RF_ParametersMRDC._cont = ASN1Dict([
        ('supportedBandCombination', _RF_ParametersMRDC_supportedBandCombination),
        ('bandCombinationParametersUL-List', _RF_ParametersMRDC_bandCombinationParametersUL_List),
        ])
    RF_ParametersMRDC._ext = []
    
    #-----< Phy-ParametersMRDC >-----#
    Phy_ParametersMRDC = SEQ(name='Phy-ParametersMRDC', mode=MODE_TYPE)
    _Phy_ParametersMRDC_phy_ParametersMRDC_XDD_Diff = SEQ(name='phy-ParametersMRDC-XDD-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersMRDC-XDD-Diff')), opt=True)
    _Phy_ParametersMRDC_phy_ParametersMRDC_FRX_Diff = SEQ(name='phy-ParametersMRDC-FRX-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersMRDC-FRX-Diff')), opt=True)
    Phy_ParametersMRDC._cont = ASN1Dict([
        ('phy-ParametersMRDC-XDD-Diff', _Phy_ParametersMRDC_phy_ParametersMRDC_XDD_Diff),
        ('phy-ParametersMRDC-FRX-Diff', _Phy_ParametersMRDC_phy_ParametersMRDC_FRX_Diff),
        ])
    Phy_ParametersMRDC._ext = []
    
    #-----< Phy-ParametersMRDC-XDD-Diff >-----#
    Phy_ParametersMRDC_XDD_Diff = SEQ(name='Phy-ParametersMRDC-XDD-Diff', mode=MODE_TYPE)
    _Phy_ParametersMRDC_XDD_Diff_dynamicPowerSharing = ENUM(name='dynamicPowerSharing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersMRDC_XDD_Diff_dynamicPowerSharing._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersMRDC_XDD_Diff_dynamicPowerSharing._ext = []
    _Phy_ParametersMRDC_XDD_Diff_tdm_Pattern = ENUM(name='tdm-Pattern', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersMRDC_XDD_Diff_tdm_Pattern._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersMRDC_XDD_Diff_tdm_Pattern._ext = []
    Phy_ParametersMRDC_XDD_Diff._cont = ASN1Dict([
        ('dynamicPowerSharing', _Phy_ParametersMRDC_XDD_Diff_dynamicPowerSharing),
        ('tdm-Pattern', _Phy_ParametersMRDC_XDD_Diff_tdm_Pattern),
        ])
    Phy_ParametersMRDC_XDD_Diff._ext = []
    
    #-----< Phy-ParametersMRDC-FRX-Diff >-----#
    Phy_ParametersMRDC_FRX_Diff = SEQ(name='Phy-ParametersMRDC-FRX-Diff', mode=MODE_TYPE)
    _Phy_ParametersMRDC_FRX_Diff_dynamicPowerSharing = ENUM(name='dynamicPowerSharing', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersMRDC_FRX_Diff_dynamicPowerSharing._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersMRDC_FRX_Diff_dynamicPowerSharing._ext = []
    _Phy_ParametersMRDC_FRX_Diff_tdm_Pattern = ENUM(name='tdm-Pattern', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersMRDC_FRX_Diff_tdm_Pattern._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersMRDC_FRX_Diff_tdm_Pattern._ext = []
    Phy_ParametersMRDC_FRX_Diff._cont = ASN1Dict([
        ('dynamicPowerSharing', _Phy_ParametersMRDC_FRX_Diff_dynamicPowerSharing),
        ('tdm-Pattern', _Phy_ParametersMRDC_FRX_Diff_tdm_Pattern),
        ])
    Phy_ParametersMRDC_FRX_Diff._ext = []
    
    #-----< MeasParametersMRDC >-----#
    MeasParametersMRDC = SEQ(name='MeasParametersMRDC', mode=MODE_TYPE)
    _MeasParametersMRDC_measParametersMRDC_Common = SEQ(name='measParametersMRDC-Common', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC-Common')))
    _MeasParametersMRDC_measParametersMRDC_XDD_Diff = SEQ(name='measParametersMRDC-XDD-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC-XDD-Diff')), opt=True)
    _MeasParametersMRDC_measParametersMRDC_FRX_Diff = SEQ(name='measParametersMRDC-FRX-Diff', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersMRDC-FRX-Diff')))
    MeasParametersMRDC._cont = ASN1Dict([
        ('measParametersMRDC-Common', _MeasParametersMRDC_measParametersMRDC_Common),
        ('measParametersMRDC-XDD-Diff', _MeasParametersMRDC_measParametersMRDC_XDD_Diff),
        ('measParametersMRDC-FRX-Diff', _MeasParametersMRDC_measParametersMRDC_FRX_Diff),
        ])
    MeasParametersMRDC._ext = []
    
    #-----< MeasParametersMRDC-Common >-----#
    MeasParametersMRDC_Common = SEQ(name='MeasParametersMRDC-Common', mode=MODE_TYPE)
    _MeasParametersMRDC_Common_independentGapConfig = ENUM(name='independentGapConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersMRDC_Common_independentGapConfig._cont = ASN1Dict([('supported', 0)])
    _MeasParametersMRDC_Common_independentGapConfig._ext = []
    MeasParametersMRDC_Common._cont = ASN1Dict([
        ('independentGapConfig', _MeasParametersMRDC_Common_independentGapConfig),
        ])
    MeasParametersMRDC_Common._ext = []
    
    #-----< MeasParametersMRDC-XDD-Diff >-----#
    MeasParametersMRDC_XDD_Diff = SEQ(name='MeasParametersMRDC-XDD-Diff', mode=MODE_TYPE)
    _MeasParametersMRDC_XDD_Diff_sftd_MeasPSCell = ENUM(name='sftd-MeasPSCell', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersMRDC_XDD_Diff_sftd_MeasPSCell._cont = ASN1Dict([('supported', 0)])
    _MeasParametersMRDC_XDD_Diff_sftd_MeasPSCell._ext = []
    _MeasParametersMRDC_XDD_Diff_sftd_MeasNR_Cell = ENUM(name='sftd-MeasNR-Cell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersMRDC_XDD_Diff_sftd_MeasNR_Cell._cont = ASN1Dict([('supported', 0)])
    _MeasParametersMRDC_XDD_Diff_sftd_MeasNR_Cell._ext = []
    MeasParametersMRDC_XDD_Diff._cont = ASN1Dict([
        ('sftd-MeasPSCell', _MeasParametersMRDC_XDD_Diff_sftd_MeasPSCell),
        ('sftd-MeasNR-Cell', _MeasParametersMRDC_XDD_Diff_sftd_MeasNR_Cell),
        ])
    MeasParametersMRDC_XDD_Diff._ext = []
    
    #-----< MeasParametersMRDC-FRX-Diff >-----#
    MeasParametersMRDC_FRX_Diff = SEQ(name='MeasParametersMRDC-FRX-Diff', mode=MODE_TYPE)
    _MeasParametersMRDC_FRX_Diff_simultaneousRxDataSSB_DiffNumerology = ENUM(name='simultaneousRxDataSSB-DiffNumerology', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersMRDC_FRX_Diff_simultaneousRxDataSSB_DiffNumerology._cont = ASN1Dict([('supported', 0)])
    _MeasParametersMRDC_FRX_Diff_simultaneousRxDataSSB_DiffNumerology._ext = []
    MeasParametersMRDC_FRX_Diff._cont = ASN1Dict([
        ('simultaneousRxDataSSB-DiffNumerology', _MeasParametersMRDC_FRX_Diff_simultaneousRxDataSSB_DiffNumerology),
        ])
    MeasParametersMRDC_FRX_Diff._ext = []
    
    #-----< GeneralParametersMRDC-XDD-Diff >-----#
    GeneralParametersMRDC_XDD_Diff = SEQ(name='GeneralParametersMRDC-XDD-Diff', mode=MODE_TYPE)
    _GeneralParametersMRDC_XDD_Diff_splitSRB_WithOneUL_Path = ENUM(name='splitSRB-WithOneUL-Path', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GeneralParametersMRDC_XDD_Diff_splitSRB_WithOneUL_Path._cont = ASN1Dict([('supported', 0)])
    _GeneralParametersMRDC_XDD_Diff_splitSRB_WithOneUL_Path._ext = []
    _GeneralParametersMRDC_XDD_Diff_splitDRB_withUL_Both_MCG_SCG = ENUM(name='splitDRB-withUL-Both-MCG-SCG', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GeneralParametersMRDC_XDD_Diff_splitDRB_withUL_Both_MCG_SCG._cont = ASN1Dict([('supported', 0)])
    _GeneralParametersMRDC_XDD_Diff_splitDRB_withUL_Both_MCG_SCG._ext = []
    _GeneralParametersMRDC_XDD_Diff_srb3 = ENUM(name='srb3', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GeneralParametersMRDC_XDD_Diff_srb3._cont = ASN1Dict([('supported', 0)])
    _GeneralParametersMRDC_XDD_Diff_srb3._ext = []
    GeneralParametersMRDC_XDD_Diff._cont = ASN1Dict([
        ('splitSRB-WithOneUL-Path', _GeneralParametersMRDC_XDD_Diff_splitSRB_WithOneUL_Path),
        ('splitDRB-withUL-Both-MCG-SCG', _GeneralParametersMRDC_XDD_Diff_splitDRB_withUL_Both_MCG_SCG),
        ('srb3', _GeneralParametersMRDC_XDD_Diff_srb3),
        ])
    GeneralParametersMRDC_XDD_Diff._ext = []
    
    #-----< UE-NR-Capability >-----#
    UE_NR_Capability = SEQ(name='UE-NR-Capability', mode=MODE_TYPE)
    _UE_NR_Capability_pdcp_Parameters = SEQ(name='pdcp-Parameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PDCP-Parameters')))
    _UE_NR_Capability_rlc_Parameters = SEQ(name='rlc-Parameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RLC-Parameters')), opt=True)
    _UE_NR_Capability_mac_Parameters = SEQ(name='mac-Parameters', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MAC-Parameters')), opt=True)
    _UE_NR_Capability_phy_Parameters = SEQ(name='phy-Parameters', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-Parameters')))
    _UE_NR_Capability_rf_Parameters = SEQ(name='rf-Parameters', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RF-Parameters')))
    _UE_NR_Capability_measParameters = SEQ(name='measParameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParameters')), opt=True)
    _UE_NR_Capability_fdd_Add_UE_NR_Capabilities = SEQ(name='fdd-Add-UE-NR-Capabilities', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-NR-CapabilityAddXDD-Mode')), opt=True)
    _UE_NR_Capability_tdd_Add_UE_NR_Capabilities = SEQ(name='tdd-Add-UE-NR-Capabilities', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-NR-CapabilityAddXDD-Mode')), opt=True)
    _UE_NR_Capability_fr1_Add_UE_NR_Capabilities = SEQ(name='fr1-Add-UE-NR-Capabilities', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-NR-CapabilityAddFRX-Mode')), opt=True)
    _UE_NR_Capability_fr2_Add_UE_NR_Capabilities = SEQ(name='fr2-Add-UE-NR-Capabilities', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-NR-CapabilityAddFRX-Mode')), opt=True)
    _UE_NR_Capability_lateNonCriticalExtension = OCT_STR(name='lateNonCriticalExtension', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_NR_Capability_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UE_NR_Capability_nonCriticalExtension._cont = ASN1Dict([
        ])
    _UE_NR_Capability_nonCriticalExtension._ext = []
    UE_NR_Capability._cont = ASN1Dict([
        ('pdcp-Parameters', _UE_NR_Capability_pdcp_Parameters),
        ('rlc-Parameters', _UE_NR_Capability_rlc_Parameters),
        ('mac-Parameters', _UE_NR_Capability_mac_Parameters),
        ('phy-Parameters', _UE_NR_Capability_phy_Parameters),
        ('rf-Parameters', _UE_NR_Capability_rf_Parameters),
        ('measParameters', _UE_NR_Capability_measParameters),
        ('fdd-Add-UE-NR-Capabilities', _UE_NR_Capability_fdd_Add_UE_NR_Capabilities),
        ('tdd-Add-UE-NR-Capabilities', _UE_NR_Capability_tdd_Add_UE_NR_Capabilities),
        ('fr1-Add-UE-NR-Capabilities', _UE_NR_Capability_fr1_Add_UE_NR_Capabilities),
        ('fr2-Add-UE-NR-Capabilities', _UE_NR_Capability_fr2_Add_UE_NR_Capabilities),
        ('lateNonCriticalExtension', _UE_NR_Capability_lateNonCriticalExtension),
        ('nonCriticalExtension', _UE_NR_Capability_nonCriticalExtension),
        ])
    UE_NR_Capability._ext = []
    
    #-----< UE-NR-CapabilityAddXDD-Mode >-----#
    UE_NR_CapabilityAddXDD_Mode = SEQ(name='UE-NR-CapabilityAddXDD-Mode', mode=MODE_TYPE)
    _UE_NR_CapabilityAddXDD_Mode_phy_ParametersXDD_Diff = SEQ(name='phy-ParametersXDD-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersXDD-Diff')), opt=True)
    _UE_NR_CapabilityAddXDD_Mode_mac_ParametersXDD_Diff = SEQ(name='mac-ParametersXDD-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MAC-ParametersXDD-Diff')), opt=True)
    _UE_NR_CapabilityAddXDD_Mode_measParametersXDD_Diff = SEQ(name='measParametersXDD-Diff', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersXDD-Diff')), opt=True)
    UE_NR_CapabilityAddXDD_Mode._cont = ASN1Dict([
        ('phy-ParametersXDD-Diff', _UE_NR_CapabilityAddXDD_Mode_phy_ParametersXDD_Diff),
        ('mac-ParametersXDD-Diff', _UE_NR_CapabilityAddXDD_Mode_mac_ParametersXDD_Diff),
        ('measParametersXDD-Diff', _UE_NR_CapabilityAddXDD_Mode_measParametersXDD_Diff),
        ])
    UE_NR_CapabilityAddXDD_Mode._ext = []
    
    #-----< UE-NR-CapabilityAddFRX-Mode >-----#
    UE_NR_CapabilityAddFRX_Mode = SEQ(name='UE-NR-CapabilityAddFRX-Mode', mode=MODE_TYPE)
    _UE_NR_CapabilityAddFRX_Mode_phy_ParametersFRX_Diff = SEQ(name='phy-ParametersFRX-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersFRX-Diff')), opt=True)
    _UE_NR_CapabilityAddFRX_Mode_measParametersFRX_Diff = SEQ(name='measParametersFRX-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersFRX-Diff')), opt=True)
    UE_NR_CapabilityAddFRX_Mode._cont = ASN1Dict([
        ('phy-ParametersFRX-Diff', _UE_NR_CapabilityAddFRX_Mode_phy_ParametersFRX_Diff),
        ('measParametersFRX-Diff', _UE_NR_CapabilityAddFRX_Mode_measParametersFRX_Diff),
        ])
    UE_NR_CapabilityAddFRX_Mode._ext = []
    
    #-----< Phy-Parameters >-----#
    Phy_Parameters = SEQ(name='Phy-Parameters', mode=MODE_TYPE)
    _Phy_Parameters_phy_ParametersCommon = SEQ(name='phy-ParametersCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersCommon')), opt=True)
    _Phy_Parameters_phy_ParametersXDD_Diff = SEQ(name='phy-ParametersXDD-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersXDD-Diff')), opt=True)
    _Phy_Parameters_phy_ParametersFRX_Diff = SEQ(name='phy-ParametersFRX-Diff', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersFRX-Diff')), opt=True)
    _Phy_Parameters_phy_ParametersFR1 = SEQ(name='phy-ParametersFR1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersFR1')), opt=True)
    _Phy_Parameters_phy_ParametersFR2 = SEQ(name='phy-ParametersFR2', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'Phy-ParametersFR2')), opt=True)
    _Phy_Parameters_supportedBasebandProcessingCombination = SEQ_OF(name='supportedBasebandProcessingCombination', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SupportedBasebandProcessingCombination')))
    _Phy_Parameters_basebandCombinationParametersUL_List = SEQ_OF(name='basebandCombinationParametersUL-List', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BasebandCombinationParametersUL-List')))
    Phy_Parameters._cont = ASN1Dict([
        ('phy-ParametersCommon', _Phy_Parameters_phy_ParametersCommon),
        ('phy-ParametersXDD-Diff', _Phy_Parameters_phy_ParametersXDD_Diff),
        ('phy-ParametersFRX-Diff', _Phy_Parameters_phy_ParametersFRX_Diff),
        ('phy-ParametersFR1', _Phy_Parameters_phy_ParametersFR1),
        ('phy-ParametersFR2', _Phy_Parameters_phy_ParametersFR2),
        ('supportedBasebandProcessingCombination', _Phy_Parameters_supportedBasebandProcessingCombination),
        ('basebandCombinationParametersUL-List', _Phy_Parameters_basebandCombinationParametersUL_List),
        ])
    Phy_Parameters._ext = []
    
    #-----< Phy-ParametersCommon >-----#
    Phy_ParametersCommon = SEQ(name='Phy-ParametersCommon', mode=MODE_TYPE)
    _Phy_ParametersCommon_csi_RS_CFRA_ForHO = ENUM(name='csi-RS-CFRA-ForHO', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_csi_RS_CFRA_ForHO._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_csi_RS_CFRA_ForHO._ext = []
    _Phy_ParametersCommon_dynamicPRB_BundlingDL = ENUM(name='dynamicPRB-BundlingDL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicPRB_BundlingDL._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicPRB_BundlingDL._ext = []
    _Phy_ParametersCommon_sp_CSI_ReportPUCCH = ENUM(name='sp-CSI-ReportPUCCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_sp_CSI_ReportPUCCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_sp_CSI_ReportPUCCH._ext = []
    _Phy_ParametersCommon_sp_CSI_ReportPUSCH = ENUM(name='sp-CSI-ReportPUSCH', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_sp_CSI_ReportPUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_sp_CSI_ReportPUSCH._ext = []
    _Phy_ParametersCommon_nzp_CSI_RS_IntefMgmt = ENUM(name='nzp-CSI-RS-IntefMgmt', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_nzp_CSI_RS_IntefMgmt._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_nzp_CSI_RS_IntefMgmt._ext = []
    _Phy_ParametersCommon_type2_SP_CSI_Feedback_LongPUCCH = ENUM(name='type2-SP-CSI-Feedback-LongPUCCH', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_type2_SP_CSI_Feedback_LongPUCCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_type2_SP_CSI_Feedback_LongPUCCH._ext = []
    _Phy_ParametersCommon_multipleCORESET = ENUM(name='multipleCORESET', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_multipleCORESET._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_multipleCORESET._ext = []
    _Phy_ParametersCommon_dynamicSFI = ENUM(name='dynamicSFI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicSFI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicSFI._ext = []
    _Phy_ParametersCommon_precoderGranularityCORESET = ENUM(name='precoderGranularityCORESET', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_precoderGranularityCORESET._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_precoderGranularityCORESET._ext = []
    _Phy_ParametersCommon_dynamicHARQ_ACK_Codebook = ENUM(name='dynamicHARQ-ACK-Codebook', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicHARQ_ACK_Codebook._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicHARQ_ACK_Codebook._ext = []
    _Phy_ParametersCommon_semiStaticHARQ_ACK_Codebook = ENUM(name='semiStaticHARQ-ACK-Codebook', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_semiStaticHARQ_ACK_Codebook._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_semiStaticHARQ_ACK_Codebook._ext = []
    _Phy_ParametersCommon_spatialBundlingHARQ_ACK = ENUM(name='spatialBundlingHARQ-ACK', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_spatialBundlingHARQ_ACK._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_spatialBundlingHARQ_ACK._ext = []
    _Phy_ParametersCommon_dynamicBetaOffsetInd_HARQ_ACK_CSI = ENUM(name='dynamicBetaOffsetInd-HARQ-ACK-CSI', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicBetaOffsetInd_HARQ_ACK_CSI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicBetaOffsetInd_HARQ_ACK_CSI._ext = []
    _Phy_ParametersCommon_pucch_Repetition_F1_3_4 = ENUM(name='pucch-Repetition-F1-3-4', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pucch_Repetition_F1_3_4._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pucch_Repetition_F1_3_4._ext = []
    _Phy_ParametersCommon_ra_Type0_PUSCH = ENUM(name='ra-Type0-PUSCH', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_ra_Type0_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_ra_Type0_PUSCH._ext = []
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PDSCH = ENUM(name='dynamicSwitchRA-Type0-1-PDSCH', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PDSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PDSCH._ext = []
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PUSCH = ENUM(name='dynamicSwitchRA-Type0-1-PUSCH', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PUSCH._ext = []
    _Phy_ParametersCommon_pdsch_MappingTypeA = ENUM(name='pdsch-MappingTypeA', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pdsch_MappingTypeA._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pdsch_MappingTypeA._ext = []
    _Phy_ParametersCommon_pdsch_MappingTypeB = ENUM(name='pdsch-MappingTypeB', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pdsch_MappingTypeB._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pdsch_MappingTypeB._ext = []
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PDSCH = ENUM(name='interleavingVRB-ToPRB-PDSCH', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PDSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PDSCH._ext = []
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PUSCH = ENUM(name='interleavingVRB-ToPRB-PUSCH', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_interleavingVRB_ToPRB_PUSCH._ext = []
    _Phy_ParametersCommon_interSlotFreqHopping_PUSCH = ENUM(name='interSlotFreqHopping-PUSCH', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_interSlotFreqHopping_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_interSlotFreqHopping_PUSCH._ext = []
    _Phy_ParametersCommon_type1_PUSCH_RepetitionOneSlot = ENUM(name='type1-PUSCH-RepetitionOneSlot', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_type1_PUSCH_RepetitionOneSlot._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_type1_PUSCH_RepetitionOneSlot._ext = []
    _Phy_ParametersCommon_type1_PUSCH_RepetitionMultiSlots = ENUM(name='type1-PUSCH-RepetitionMultiSlots', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_type1_PUSCH_RepetitionMultiSlots._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_type1_PUSCH_RepetitionMultiSlots._ext = []
    _Phy_ParametersCommon_type2_PUSCH_RepetitionOneSlot = ENUM(name='type2-PUSCH-RepetitionOneSlot', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_type2_PUSCH_RepetitionOneSlot._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_type2_PUSCH_RepetitionOneSlot._ext = []
    _Phy_ParametersCommon_type2_PUSCH_RepetitionMultiSlots = ENUM(name='type2-PUSCH-RepetitionMultiSlots', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_type2_PUSCH_RepetitionMultiSlots._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_type2_PUSCH_RepetitionMultiSlots._ext = []
    _Phy_ParametersCommon_pusch_RepetitionMultiSlots = ENUM(name='pusch-RepetitionMultiSlots', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pusch_RepetitionMultiSlots._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pusch_RepetitionMultiSlots._ext = []
    _Phy_ParametersCommon_pdsch_RepetitionMultiSlots = ENUM(name='pdsch-RepetitionMultiSlots', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pdsch_RepetitionMultiSlots._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pdsch_RepetitionMultiSlots._ext = []
    _Phy_ParametersCommon_downlinkSPS = ENUM(name='downlinkSPS', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_downlinkSPS._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_downlinkSPS._ext = []
    _Phy_ParametersCommon_configuredUL_GrantType1 = ENUM(name='configuredUL-GrantType1', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_configuredUL_GrantType1._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_configuredUL_GrantType1._ext = []
    _Phy_ParametersCommon_configuredUL_GrantType2 = ENUM(name='configuredUL-GrantType2', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_configuredUL_GrantType2._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_configuredUL_GrantType2._ext = []
    _Phy_ParametersCommon_pre_EmptIndication_DL = ENUM(name='pre-EmptIndication-DL', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_pre_EmptIndication_DL._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_pre_EmptIndication_DL._ext = []
    _Phy_ParametersCommon_cbg_TransIndication = BIT_STR(name='cbg-TransIndication', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_cbg_TransIndication._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersCommon_cbg_FlushIndication_DL = ENUM(name='cbg-FlushIndication-DL', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_cbg_FlushIndication_DL._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_cbg_FlushIndication_DL._ext = []
    _Phy_ParametersCommon_dynamicHARQ_ACK_CodeB_CBG_Retx_DL = ENUM(name='dynamicHARQ-ACK-CodeB-CBG-Retx-DL', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_dynamicHARQ_ACK_CodeB_CBG_Retx_DL._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_dynamicHARQ_ACK_CodeB_CBG_Retx_DL._ext = []
    _Phy_ParametersCommon_rateMatchingResrcSetSemi_Static = ENUM(name='rateMatchingResrcSetSemi-Static', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_rateMatchingResrcSetSemi_Static._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_rateMatchingResrcSetSemi_Static._ext = []
    _Phy_ParametersCommon_rateMatchingResrcSetDynamic = ENUM(name='rateMatchingResrcSetDynamic', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_rateMatchingResrcSetDynamic._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_rateMatchingResrcSetDynamic._ext = []
    _Phy_ParametersCommon_rateMatchingLTE_CRS = ENUM(name='rateMatchingLTE-CRS', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_rateMatchingLTE_CRS._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersCommon_rateMatchingLTE_CRS._ext = []
    _Phy_ParametersCommon_bwp_SwitchingDelay = ENUM(name='bwp-SwitchingDelay', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersCommon_bwp_SwitchingDelay._cont = ASN1Dict([('type1', 0), ('type2', 1)])
    _Phy_ParametersCommon_bwp_SwitchingDelay._ext = []
    Phy_ParametersCommon._cont = ASN1Dict([
        ('csi-RS-CFRA-ForHO', _Phy_ParametersCommon_csi_RS_CFRA_ForHO),
        ('dynamicPRB-BundlingDL', _Phy_ParametersCommon_dynamicPRB_BundlingDL),
        ('sp-CSI-ReportPUCCH', _Phy_ParametersCommon_sp_CSI_ReportPUCCH),
        ('sp-CSI-ReportPUSCH', _Phy_ParametersCommon_sp_CSI_ReportPUSCH),
        ('nzp-CSI-RS-IntefMgmt', _Phy_ParametersCommon_nzp_CSI_RS_IntefMgmt),
        ('type2-SP-CSI-Feedback-LongPUCCH', _Phy_ParametersCommon_type2_SP_CSI_Feedback_LongPUCCH),
        ('multipleCORESET', _Phy_ParametersCommon_multipleCORESET),
        ('dynamicSFI', _Phy_ParametersCommon_dynamicSFI),
        ('precoderGranularityCORESET', _Phy_ParametersCommon_precoderGranularityCORESET),
        ('dynamicHARQ-ACK-Codebook', _Phy_ParametersCommon_dynamicHARQ_ACK_Codebook),
        ('semiStaticHARQ-ACK-Codebook', _Phy_ParametersCommon_semiStaticHARQ_ACK_Codebook),
        ('spatialBundlingHARQ-ACK', _Phy_ParametersCommon_spatialBundlingHARQ_ACK),
        ('dynamicBetaOffsetInd-HARQ-ACK-CSI', _Phy_ParametersCommon_dynamicBetaOffsetInd_HARQ_ACK_CSI),
        ('pucch-Repetition-F1-3-4', _Phy_ParametersCommon_pucch_Repetition_F1_3_4),
        ('ra-Type0-PUSCH', _Phy_ParametersCommon_ra_Type0_PUSCH),
        ('dynamicSwitchRA-Type0-1-PDSCH', _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PDSCH),
        ('dynamicSwitchRA-Type0-1-PUSCH', _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PUSCH),
        ('pdsch-MappingTypeA', _Phy_ParametersCommon_pdsch_MappingTypeA),
        ('pdsch-MappingTypeB', _Phy_ParametersCommon_pdsch_MappingTypeB),
        ('interleavingVRB-ToPRB-PDSCH', _Phy_ParametersCommon_interleavingVRB_ToPRB_PDSCH),
        ('interleavingVRB-ToPRB-PUSCH', _Phy_ParametersCommon_interleavingVRB_ToPRB_PUSCH),
        ('interSlotFreqHopping-PUSCH', _Phy_ParametersCommon_interSlotFreqHopping_PUSCH),
        ('type1-PUSCH-RepetitionOneSlot', _Phy_ParametersCommon_type1_PUSCH_RepetitionOneSlot),
        ('type1-PUSCH-RepetitionMultiSlots', _Phy_ParametersCommon_type1_PUSCH_RepetitionMultiSlots),
        ('type2-PUSCH-RepetitionOneSlot', _Phy_ParametersCommon_type2_PUSCH_RepetitionOneSlot),
        ('type2-PUSCH-RepetitionMultiSlots', _Phy_ParametersCommon_type2_PUSCH_RepetitionMultiSlots),
        ('pusch-RepetitionMultiSlots', _Phy_ParametersCommon_pusch_RepetitionMultiSlots),
        ('pdsch-RepetitionMultiSlots', _Phy_ParametersCommon_pdsch_RepetitionMultiSlots),
        ('downlinkSPS', _Phy_ParametersCommon_downlinkSPS),
        ('configuredUL-GrantType1', _Phy_ParametersCommon_configuredUL_GrantType1),
        ('configuredUL-GrantType2', _Phy_ParametersCommon_configuredUL_GrantType2),
        ('pre-EmptIndication-DL', _Phy_ParametersCommon_pre_EmptIndication_DL),
        ('cbg-TransIndication', _Phy_ParametersCommon_cbg_TransIndication),
        ('cbg-FlushIndication-DL', _Phy_ParametersCommon_cbg_FlushIndication_DL),
        ('dynamicHARQ-ACK-CodeB-CBG-Retx-DL', _Phy_ParametersCommon_dynamicHARQ_ACK_CodeB_CBG_Retx_DL),
        ('rateMatchingResrcSetSemi-Static', _Phy_ParametersCommon_rateMatchingResrcSetSemi_Static),
        ('rateMatchingResrcSetDynamic', _Phy_ParametersCommon_rateMatchingResrcSetDynamic),
        ('rateMatchingLTE-CRS', _Phy_ParametersCommon_rateMatchingLTE_CRS),
        ('bwp-SwitchingDelay', _Phy_ParametersCommon_bwp_SwitchingDelay),
        ])
    Phy_ParametersCommon._ext = []
    
    #-----< Phy-ParametersXDD-Diff >-----#
    Phy_ParametersXDD_Diff = SEQ(name='Phy-ParametersXDD-Diff', mode=MODE_TYPE)
    _Phy_ParametersXDD_Diff_twoPUCCH_F0_2_ConsecSymbols = ENUM(name='twoPUCCH-F0-2-ConsecSymbols', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersXDD_Diff_twoPUCCH_F0_2_ConsecSymbols._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersXDD_Diff_twoPUCCH_F0_2_ConsecSymbols._ext = []
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUSCH = ENUM(name='twoDifferentTPC-Loop-PUSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUSCH._ext = []
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUCCH = ENUM(name='twoDifferentTPC-Loop-PUCCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUCCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUCCH._ext = []
    Phy_ParametersXDD_Diff._cont = ASN1Dict([
        ('twoPUCCH-F0-2-ConsecSymbols', _Phy_ParametersXDD_Diff_twoPUCCH_F0_2_ConsecSymbols),
        ('twoDifferentTPC-Loop-PUSCH', _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUSCH),
        ('twoDifferentTPC-Loop-PUCCH', _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUCCH),
        ])
    Phy_ParametersXDD_Diff._ext = []
    
    #-----< Phy-ParametersFRX-Diff >-----#
    Phy_ParametersFRX_Diff = SEQ(name='Phy-ParametersFRX-Diff', mode=MODE_TYPE)
    _Phy_ParametersFRX_Diff_oneFL_DMRS_TwoAdditionalDMRS = BIT_STR(name='oneFL-DMRS-TwoAdditionalDMRS', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_oneFL_DMRS_TwoAdditionalDMRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersFRX_Diff_twoFL_DMRS = BIT_STR(name='twoFL-DMRS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoFL_DMRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersFRX_Diff_twoFL_DMRS_TwoAdditionalDMRS = BIT_STR(name='twoFL-DMRS-TwoAdditionalDMRS', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoFL_DMRS_TwoAdditionalDMRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersFRX_Diff_oneFL_DMRS_ThreeAdditionalDMRS = BIT_STR(name='oneFL-DMRS-ThreeAdditionalDMRS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_oneFL_DMRS_ThreeAdditionalDMRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeDL = ENUM(name='supportedDMRS-TypeDL', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeDL._cont = ASN1Dict([('type1', 0), ('type2', 1)])
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeDL._ext = []
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeUL = ENUM(name='supportedDMRS-TypeUL', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeUL._cont = ASN1Dict([('type1', 0), ('type2', 1)])
    _Phy_ParametersFRX_Diff_supportedDMRS_TypeUL._ext = []
    _Phy_ParametersFRX_Diff_semiOpenLoopCSI = ENUM(name='semiOpenLoopCSI', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_semiOpenLoopCSI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_semiOpenLoopCSI._ext = []
    _Phy_ParametersFRX_Diff_csi_ReportWithoutPMI = ENUM(name='csi-ReportWithoutPMI', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_csi_ReportWithoutPMI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_csi_ReportWithoutPMI._ext = []
    _Phy_ParametersFRX_Diff_csi_ReportWithCRI = ENUM(name='csi-ReportWithCRI', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_csi_ReportWithCRI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_csi_ReportWithCRI._ext = []
    _Phy_ParametersFRX_Diff_csi_ReportWithoutCQI = ENUM(name='csi-ReportWithoutCQI', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_csi_ReportWithoutCQI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_csi_ReportWithoutCQI._ext = []
    _Phy_ParametersFRX_Diff_onePortsPTRS = BIT_STR(name='onePortsPTRS', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_onePortsPTRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Phy_ParametersFRX_Diff_twoPUCCH_F0_2_ConsecSymbols = ENUM(name='twoPUCCH-F0-2-ConsecSymbols', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoPUCCH_F0_2_ConsecSymbols._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_twoPUCCH_F0_2_ConsecSymbols._ext = []
    _Phy_ParametersFRX_Diff_pucch_F2_WithFH = ENUM(name='pucch-F2-WithFH', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pucch_F2_WithFH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pucch_F2_WithFH._ext = []
    _Phy_ParametersFRX_Diff_pucch_F3_WithFH = ENUM(name='pucch-F3-WithFH', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pucch_F3_WithFH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pucch_F3_WithFH._ext = []
    _Phy_ParametersFRX_Diff_pucch_F4_WithFH = ENUM(name='pucch-F4-WithFH', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pucch_F4_WithFH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pucch_F4_WithFH._ext = []
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F0_2 = ENUM(name='freqHoppingPUCCH-F0-2', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F0_2._cont = ASN1Dict([('notSupported', 0)])
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F0_2._ext = []
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F1_3_4 = ENUM(name='freqHoppingPUCCH-F1-3-4', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F1_3_4._cont = ASN1Dict([('notSupported', 0)])
    _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F1_3_4._ext = []
    _Phy_ParametersFRX_Diff_mux_SR_HARQ_ACK_CSI_PUCCH = ENUM(name='mux-SR-HARQ-ACK-CSI-PUCCH', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_mux_SR_HARQ_ACK_CSI_PUCCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_mux_SR_HARQ_ACK_CSI_PUCCH._ext = []
    _Phy_ParametersFRX_Diff_uci_CodeBlockSegmentation = ENUM(name='uci-CodeBlockSegmentation', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_uci_CodeBlockSegmentation._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_uci_CodeBlockSegmentation._ext = []
    _Phy_ParametersFRX_Diff_onePUCCH_LongAndShortFormat = ENUM(name='onePUCCH-LongAndShortFormat', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_onePUCCH_LongAndShortFormat._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_onePUCCH_LongAndShortFormat._ext = []
    _Phy_ParametersFRX_Diff_twoPUCCH_AnyOthersInSlot = ENUM(name='twoPUCCH-AnyOthersInSlot', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoPUCCH_AnyOthersInSlot._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_twoPUCCH_AnyOthersInSlot._ext = []
    _Phy_ParametersFRX_Diff_intraSlotFreqHopping_PUSCH = ENUM(name='intraSlotFreqHopping-PUSCH', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_intraSlotFreqHopping_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_intraSlotFreqHopping_PUSCH._ext = []
    _Phy_ParametersFRX_Diff_pusch_LBRM = ENUM(name='pusch-LBRM', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pusch_LBRM._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pusch_LBRM._ext = []
    _Phy_ParametersFRX_Diff_pdcch_BlindDetectionCA = ENUM(name='pdcch-BlindDetectionCA', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pdcch_BlindDetectionCA._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pdcch_BlindDetectionCA._ext = []
    _Phy_ParametersFRX_Diff_tpc_PUSCH_RNTI = ENUM(name='tpc-PUSCH-RNTI', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_tpc_PUSCH_RNTI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_tpc_PUSCH_RNTI._ext = []
    _Phy_ParametersFRX_Diff_tpc_PUCCH_RNTI = ENUM(name='tpc-PUCCH-RNTI', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_tpc_PUCCH_RNTI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_tpc_PUCCH_RNTI._ext = []
    _Phy_ParametersFRX_Diff_tpc_SRS_RNTI = ENUM(name='tpc-SRS-RNTI', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_tpc_SRS_RNTI._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_tpc_SRS_RNTI._ext = []
    _Phy_ParametersFRX_Diff_absoluteTPC_Command = ENUM(name='absoluteTPC-Command', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_absoluteTPC_Command._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_absoluteTPC_Command._ext = []
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUSCH = ENUM(name='twoDifferentTPC-Loop-PUSCH', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUSCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUSCH._ext = []
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUCCH = ENUM(name='twoDifferentTPC-Loop-PUCCH', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUCCH._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUCCH._ext = []
    _Phy_ParametersFRX_Diff_pusch_HalfPi_BPSK = ENUM(name='pusch-HalfPi-BPSK', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pusch_HalfPi_BPSK._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pusch_HalfPi_BPSK._ext = []
    _Phy_ParametersFRX_Diff_pucch_F3_4_HalfPi_BPSK = ENUM(name='pucch-F3-4-HalfPi-BPSK', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_pucch_F3_4_HalfPi_BPSK._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_pucch_F3_4_HalfPi_BPSK._ext = []
    _Phy_ParametersFRX_Diff_oneSymbolGP_TDD = ENUM(name='oneSymbolGP-TDD', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_oneSymbolGP_TDD._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_oneSymbolGP_TDD._ext = []
    _Phy_ParametersFRX_Diff_almostContiguousCP_OFDM_UL = ENUM(name='almostContiguousCP-OFDM-UL', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFRX_Diff_almostContiguousCP_OFDM_UL._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFRX_Diff_almostContiguousCP_OFDM_UL._ext = []
    Phy_ParametersFRX_Diff._cont = ASN1Dict([
        ('oneFL-DMRS-TwoAdditionalDMRS', _Phy_ParametersFRX_Diff_oneFL_DMRS_TwoAdditionalDMRS),
        ('twoFL-DMRS', _Phy_ParametersFRX_Diff_twoFL_DMRS),
        ('twoFL-DMRS-TwoAdditionalDMRS', _Phy_ParametersFRX_Diff_twoFL_DMRS_TwoAdditionalDMRS),
        ('oneFL-DMRS-ThreeAdditionalDMRS', _Phy_ParametersFRX_Diff_oneFL_DMRS_ThreeAdditionalDMRS),
        ('supportedDMRS-TypeDL', _Phy_ParametersFRX_Diff_supportedDMRS_TypeDL),
        ('supportedDMRS-TypeUL', _Phy_ParametersFRX_Diff_supportedDMRS_TypeUL),
        ('semiOpenLoopCSI', _Phy_ParametersFRX_Diff_semiOpenLoopCSI),
        ('csi-ReportWithoutPMI', _Phy_ParametersFRX_Diff_csi_ReportWithoutPMI),
        ('csi-ReportWithCRI', _Phy_ParametersFRX_Diff_csi_ReportWithCRI),
        ('csi-ReportWithoutCQI', _Phy_ParametersFRX_Diff_csi_ReportWithoutCQI),
        ('onePortsPTRS', _Phy_ParametersFRX_Diff_onePortsPTRS),
        ('twoPUCCH-F0-2-ConsecSymbols', _Phy_ParametersFRX_Diff_twoPUCCH_F0_2_ConsecSymbols),
        ('pucch-F2-WithFH', _Phy_ParametersFRX_Diff_pucch_F2_WithFH),
        ('pucch-F3-WithFH', _Phy_ParametersFRX_Diff_pucch_F3_WithFH),
        ('pucch-F4-WithFH', _Phy_ParametersFRX_Diff_pucch_F4_WithFH),
        ('freqHoppingPUCCH-F0-2', _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F0_2),
        ('freqHoppingPUCCH-F1-3-4', _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F1_3_4),
        ('mux-SR-HARQ-ACK-CSI-PUCCH', _Phy_ParametersFRX_Diff_mux_SR_HARQ_ACK_CSI_PUCCH),
        ('uci-CodeBlockSegmentation', _Phy_ParametersFRX_Diff_uci_CodeBlockSegmentation),
        ('onePUCCH-LongAndShortFormat', _Phy_ParametersFRX_Diff_onePUCCH_LongAndShortFormat),
        ('twoPUCCH-AnyOthersInSlot', _Phy_ParametersFRX_Diff_twoPUCCH_AnyOthersInSlot),
        ('intraSlotFreqHopping-PUSCH', _Phy_ParametersFRX_Diff_intraSlotFreqHopping_PUSCH),
        ('pusch-LBRM', _Phy_ParametersFRX_Diff_pusch_LBRM),
        ('pdcch-BlindDetectionCA', _Phy_ParametersFRX_Diff_pdcch_BlindDetectionCA),
        ('tpc-PUSCH-RNTI', _Phy_ParametersFRX_Diff_tpc_PUSCH_RNTI),
        ('tpc-PUCCH-RNTI', _Phy_ParametersFRX_Diff_tpc_PUCCH_RNTI),
        ('tpc-SRS-RNTI', _Phy_ParametersFRX_Diff_tpc_SRS_RNTI),
        ('absoluteTPC-Command', _Phy_ParametersFRX_Diff_absoluteTPC_Command),
        ('twoDifferentTPC-Loop-PUSCH', _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUSCH),
        ('twoDifferentTPC-Loop-PUCCH', _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUCCH),
        ('pusch-HalfPi-BPSK', _Phy_ParametersFRX_Diff_pusch_HalfPi_BPSK),
        ('pucch-F3-4-HalfPi-BPSK', _Phy_ParametersFRX_Diff_pucch_F3_4_HalfPi_BPSK),
        ('oneSymbolGP-TDD', _Phy_ParametersFRX_Diff_oneSymbolGP_TDD),
        ('almostContiguousCP-OFDM-UL', _Phy_ParametersFRX_Diff_almostContiguousCP_OFDM_UL),
        ])
    Phy_ParametersFRX_Diff._ext = []
    
    #-----< Phy-ParametersFR1 >-----#
    Phy_ParametersFR1 = SEQ(name='Phy-ParametersFR1', mode=MODE_TYPE)
    _Phy_ParametersFR1_pdcchMonitoringSingleOccasion = ENUM(name='pdcchMonitoringSingleOccasion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFR1_pdcchMonitoringSingleOccasion._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFR1_pdcchMonitoringSingleOccasion._ext = []
    _Phy_ParametersFR1_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFR1_scs_60kHz._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFR1_scs_60kHz._ext = []
    _Phy_ParametersFR1_pdsch_256QAM_FR1 = ENUM(name='pdsch-256QAM-FR1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFR1_pdsch_256QAM_FR1._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFR1_pdsch_256QAM_FR1._ext = []
    Phy_ParametersFR1._cont = ASN1Dict([
        ('pdcchMonitoringSingleOccasion', _Phy_ParametersFR1_pdcchMonitoringSingleOccasion),
        ('scs-60kHz', _Phy_ParametersFR1_scs_60kHz),
        ('pdsch-256QAM-FR1', _Phy_ParametersFR1_pdsch_256QAM_FR1),
        ])
    Phy_ParametersFR1._ext = []
    
    #-----< Phy-ParametersFR2 >-----#
    Phy_ParametersFR2 = SEQ(name='Phy-ParametersFR2', mode=MODE_TYPE)
    _Phy_ParametersFR2_calibrationGapPA = ENUM(name='calibrationGapPA', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Phy_ParametersFR2_calibrationGapPA._cont = ASN1Dict([('supported', 0)])
    _Phy_ParametersFR2_calibrationGapPA._ext = []
    Phy_ParametersFR2._cont = ASN1Dict([
        ('calibrationGapPA', _Phy_ParametersFR2_calibrationGapPA),
        ])
    Phy_ParametersFR2._ext = []
    
    #-----< RF-Parameters >-----#
    RF_Parameters = SEQ(name='RF-Parameters', mode=MODE_TYPE)
    _RF_Parameters_supportedBandListNR = SEQ_OF(name='supportedBandListNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SupportedBandListNR')))
    _RF_Parameters_supportedBandCombination = SEQ_OF(name='supportedBandCombination', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationList')))
    _RF_Parameters_bandCombinationParametersUL_List = SEQ_OF(name='bandCombinationParametersUL-List', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandCombinationParametersUL-List')))
    RF_Parameters._cont = ASN1Dict([
        ('supportedBandListNR', _RF_Parameters_supportedBandListNR),
        ('supportedBandCombination', _RF_Parameters_supportedBandCombination),
        ('bandCombinationParametersUL-List', _RF_Parameters_bandCombinationParametersUL_List),
        ])
    RF_Parameters._ext = []
    
    #-----< SupportedBandListNR >-----#
    SupportedBandListNR = SEQ_OF(name='SupportedBandListNR', mode=MODE_TYPE)
    _SupportedBandListNR__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BandNR')))
    SupportedBandListNR._cont = _SupportedBandListNR__item_
    SupportedBandListNR._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< BandNR >-----#
    BandNR = SEQ(name='BandNR', mode=MODE_TYPE)
    _BandNR_bandNR = INT(name='bandNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'FreqBandIndicatorNR')))
    _BandNR_modifiedMPR_Behaviour = BIT_STR(name='modifiedMPR-Behaviour', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_modifiedMPR_Behaviour._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _BandNR_maxChannelBW_PerCC = ENUM(name='maxChannelBW-PerCC', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_maxChannelBW_PerCC._cont = ASN1Dict([('mhz400', 0)])
    _BandNR_maxChannelBW_PerCC._ext = []
    _BandNR_mimo_ParametersPerBand = SEQ(name='mimo-ParametersPerBand', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-ParametersPerBand')), opt=True)
    _BandNR_extendedCP = ENUM(name='extendedCP', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_extendedCP._cont = ASN1Dict([('supported', 0)])
    _BandNR_extendedCP._ext = []
    _BandNR_phaseCoherenceUL = ENUM(name='phaseCoherenceUL', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_phaseCoherenceUL._cont = ASN1Dict([('supported', 0)])
    _BandNR_phaseCoherenceUL._ext = []
    _BandNR_scellWithoutSSB = ENUM(name='scellWithoutSSB', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_scellWithoutSSB._cont = ASN1Dict([('supported', 0)])
    _BandNR_scellWithoutSSB._ext = []
    _BandNR_csi_RS_MeasSCellWithoutSSB = ENUM(name='csi-RS-MeasSCellWithoutSSB', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_csi_RS_MeasSCellWithoutSSB._cont = ASN1Dict([('supported', 0)])
    _BandNR_csi_RS_MeasSCellWithoutSSB._ext = []
    _BandNR_srs_AssocCSI_RS = ENUM(name='srs-AssocCSI-RS', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_srs_AssocCSI_RS._cont = ASN1Dict([('supported', 0)])
    _BandNR_srs_AssocCSI_RS._ext = []
    _BandNR_type1_3_CSS = ENUM(name='type1-3-CSS', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_type1_3_CSS._cont = ASN1Dict([('supported', 0)])
    _BandNR_type1_3_CSS._ext = []
    _BandNR_multipleTCI = ENUM(name='multipleTCI', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_multipleTCI._cont = ASN1Dict([('supported', 0)])
    _BandNR_multipleTCI._ext = []
    _BandNR_pdcchMonitoringAnyOccasions = ENUM(name='pdcchMonitoringAnyOccasions', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_pdcchMonitoringAnyOccasions._cont = ASN1Dict([('withoutDCI-gap', 0), ('withDCI-gap', 1)])
    _BandNR_pdcchMonitoringAnyOccasions._ext = []
    _BandNR_ue_SpecificUL_DL_Assignment = ENUM(name='ue-SpecificUL-DL-Assignment', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_ue_SpecificUL_DL_Assignment._cont = ASN1Dict([('supported', 0)])
    _BandNR_ue_SpecificUL_DL_Assignment._ext = []
    _BandNR_pdsch_DifferentTB_PerSlot = SEQ(name='pdsch-DifferentTB-PerSlot', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pdsch_DifferentTB_PerSlot_scs_15kHz = ENUM(name='scs-15kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pdsch_DifferentTB_PerSlot_scs_15kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pdsch_DifferentTB_PerSlot_scs_15kHz._ext = []
    __BandNR_pdsch_DifferentTB_PerSlot_scs_30kHz = ENUM(name='scs-30kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pdsch_DifferentTB_PerSlot_scs_30kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pdsch_DifferentTB_PerSlot_scs_30kHz._ext = []
    __BandNR_pdsch_DifferentTB_PerSlot_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pdsch_DifferentTB_PerSlot_scs_60kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pdsch_DifferentTB_PerSlot_scs_60kHz._ext = []
    __BandNR_pdsch_DifferentTB_PerSlot_scs_120kHz = ENUM(name='scs-120kHz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pdsch_DifferentTB_PerSlot_scs_120kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pdsch_DifferentTB_PerSlot_scs_120kHz._ext = []
    _BandNR_pdsch_DifferentTB_PerSlot._cont = ASN1Dict([
        ('scs-15kHz', __BandNR_pdsch_DifferentTB_PerSlot_scs_15kHz),
        ('scs-30kHz', __BandNR_pdsch_DifferentTB_PerSlot_scs_30kHz),
        ('scs-60kHz', __BandNR_pdsch_DifferentTB_PerSlot_scs_60kHz),
        ('scs-120kHz', __BandNR_pdsch_DifferentTB_PerSlot_scs_120kHz),
        ])
    _BandNR_pdsch_DifferentTB_PerSlot._ext = []
    _BandNR_pusch_DifferentTB_PerSlot = SEQ(name='pusch-DifferentTB-PerSlot', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pusch_DifferentTB_PerSlot_scs_15kHz = ENUM(name='scs-15kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pusch_DifferentTB_PerSlot_scs_15kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pusch_DifferentTB_PerSlot_scs_15kHz._ext = []
    __BandNR_pusch_DifferentTB_PerSlot_scs_30kHz = ENUM(name='scs-30kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pusch_DifferentTB_PerSlot_scs_30kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pusch_DifferentTB_PerSlot_scs_30kHz._ext = []
    __BandNR_pusch_DifferentTB_PerSlot_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pusch_DifferentTB_PerSlot_scs_60kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pusch_DifferentTB_PerSlot_scs_60kHz._ext = []
    __BandNR_pusch_DifferentTB_PerSlot_scs_120kHz = ENUM(name='scs-120kHz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BandNR_pusch_DifferentTB_PerSlot_scs_120kHz._cont = ASN1Dict([('upto2', 0), ('upto7', 1)])
    __BandNR_pusch_DifferentTB_PerSlot_scs_120kHz._ext = []
    _BandNR_pusch_DifferentTB_PerSlot._cont = ASN1Dict([
        ('scs-15kHz', __BandNR_pusch_DifferentTB_PerSlot_scs_15kHz),
        ('scs-30kHz', __BandNR_pusch_DifferentTB_PerSlot_scs_30kHz),
        ('scs-60kHz', __BandNR_pusch_DifferentTB_PerSlot_scs_60kHz),
        ('scs-120kHz', __BandNR_pusch_DifferentTB_PerSlot_scs_120kHz),
        ])
    _BandNR_pusch_DifferentTB_PerSlot._ext = []
    _BandNR_bwp_SameNumerology = ENUM(name='bwp-SameNumerology', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_bwp_SameNumerology._cont = ASN1Dict([('upto2', 0), ('upto4', 1)])
    _BandNR_bwp_SameNumerology._ext = []
    _BandNR_bwp_DiffNumerology = ENUM(name='bwp-DiffNumerology', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_bwp_DiffNumerology._cont = ASN1Dict([('upto4', 0)])
    _BandNR_bwp_DiffNumerology._ext = []
    _BandNR_twoPUCCH_Group = ENUM(name='twoPUCCH-Group', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_twoPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BandNR_twoPUCCH_Group._ext = []
    _BandNR_diffNumerologyAcrossPUCCH_Group = ENUM(name='diffNumerologyAcrossPUCCH-Group', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_diffNumerologyAcrossPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BandNR_diffNumerologyAcrossPUCCH_Group._ext = []
    _BandNR_diffNumerologyWithinPUCCH_Group = ENUM(name='diffNumerologyWithinPUCCH-Group', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_diffNumerologyWithinPUCCH_Group._cont = ASN1Dict([('supported', 0)])
    _BandNR_diffNumerologyWithinPUCCH_Group._ext = []
    _BandNR_crossCarrierScheduling = ENUM(name='crossCarrierScheduling', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_crossCarrierScheduling._cont = ASN1Dict([('supported', 0)])
    _BandNR_crossCarrierScheduling._ext = []
    _BandNR_supportedNumberTAG = ENUM(name='supportedNumberTAG', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_supportedNumberTAG._cont = ASN1Dict([('n2', 0), ('n3', 1), ('n4', 2)])
    _BandNR_supportedNumberTAG._ext = []
    _BandNR_simultaneousTxSUL_NonSUL = ENUM(name='simultaneousTxSUL-NonSUL', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_simultaneousTxSUL_NonSUL._cont = ASN1Dict([('supported', 0)])
    _BandNR_simultaneousTxSUL_NonSUL._ext = []
    _BandNR_searchSpaceSharingCA_DL = ENUM(name='searchSpaceSharingCA-DL', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_searchSpaceSharingCA_DL._cont = ASN1Dict([('supported', 0)])
    _BandNR_searchSpaceSharingCA_DL._ext = []
    _BandNR_searchSpaceSharingCA_UL = ENUM(name='searchSpaceSharingCA-UL', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_searchSpaceSharingCA_UL._cont = ASN1Dict([('supported', 0)])
    _BandNR_searchSpaceSharingCA_UL._ext = []
    _BandNR_pdsch_256QAM_FR2 = ENUM(name='pdsch-256QAM-FR2', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_pdsch_256QAM_FR2._cont = ASN1Dict([('supported', 0)])
    _BandNR_pdsch_256QAM_FR2._ext = []
    _BandNR_pusch_256QAM = ENUM(name='pusch-256QAM', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _BandNR_pusch_256QAM._cont = ASN1Dict([('supported', 0)])
    _BandNR_pusch_256QAM._ext = []
    BandNR._cont = ASN1Dict([
        ('bandNR', _BandNR_bandNR),
        ('modifiedMPR-Behaviour', _BandNR_modifiedMPR_Behaviour),
        ('maxChannelBW-PerCC', _BandNR_maxChannelBW_PerCC),
        ('mimo-ParametersPerBand', _BandNR_mimo_ParametersPerBand),
        ('extendedCP', _BandNR_extendedCP),
        ('phaseCoherenceUL', _BandNR_phaseCoherenceUL),
        ('scellWithoutSSB', _BandNR_scellWithoutSSB),
        ('csi-RS-MeasSCellWithoutSSB', _BandNR_csi_RS_MeasSCellWithoutSSB),
        ('srs-AssocCSI-RS', _BandNR_srs_AssocCSI_RS),
        ('type1-3-CSS', _BandNR_type1_3_CSS),
        ('multipleTCI', _BandNR_multipleTCI),
        ('pdcchMonitoringAnyOccasions', _BandNR_pdcchMonitoringAnyOccasions),
        ('ue-SpecificUL-DL-Assignment', _BandNR_ue_SpecificUL_DL_Assignment),
        ('pdsch-DifferentTB-PerSlot', _BandNR_pdsch_DifferentTB_PerSlot),
        ('pusch-DifferentTB-PerSlot', _BandNR_pusch_DifferentTB_PerSlot),
        ('bwp-SameNumerology', _BandNR_bwp_SameNumerology),
        ('bwp-DiffNumerology', _BandNR_bwp_DiffNumerology),
        ('twoPUCCH-Group', _BandNR_twoPUCCH_Group),
        ('diffNumerologyAcrossPUCCH-Group', _BandNR_diffNumerologyAcrossPUCCH_Group),
        ('diffNumerologyWithinPUCCH-Group', _BandNR_diffNumerologyWithinPUCCH_Group),
        ('crossCarrierScheduling', _BandNR_crossCarrierScheduling),
        ('supportedNumberTAG', _BandNR_supportedNumberTAG),
        ('simultaneousTxSUL-NonSUL', _BandNR_simultaneousTxSUL_NonSUL),
        ('searchSpaceSharingCA-DL', _BandNR_searchSpaceSharingCA_DL),
        ('searchSpaceSharingCA-UL', _BandNR_searchSpaceSharingCA_UL),
        ('pdsch-256QAM-FR2', _BandNR_pdsch_256QAM_FR2),
        ('pusch-256QAM', _BandNR_pusch_256QAM),
        ])
    BandNR._ext = []
    
    #-----< MIMO-ParametersPerBand >-----#
    MIMO_ParametersPerBand = SEQ(name='MIMO-ParametersPerBand', mode=MODE_TYPE)
    _MIMO_ParametersPerBand_timeDurationForQCL = SEQ(name='timeDurationForQCL', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_timeDurationForQCL_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_timeDurationForQCL_scs_60kHz._cont = ASN1Dict([('s7', 0), ('s14', 1), ('s28', 2)])
    __MIMO_ParametersPerBand_timeDurationForQCL_scs_60kHz._ext = []
    __MIMO_ParametersPerBand_timeDurationForQCL_sch_120kHz = ENUM(name='sch-120kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_timeDurationForQCL_sch_120kHz._cont = ASN1Dict([('s14', 0), ('s28', 1)])
    __MIMO_ParametersPerBand_timeDurationForQCL_sch_120kHz._ext = []
    _MIMO_ParametersPerBand_timeDurationForQCL._cont = ASN1Dict([
        ('scs-60kHz', __MIMO_ParametersPerBand_timeDurationForQCL_scs_60kHz),
        ('sch-120kHz', __MIMO_ParametersPerBand_timeDurationForQCL_sch_120kHz),
        ])
    _MIMO_ParametersPerBand_timeDurationForQCL._ext = []
    _MIMO_ParametersPerBand_maxNumberMIMO_LayersPDSCH = ENUM(name='maxNumberMIMO-LayersPDSCH', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersDL')), opt=True)
    _MIMO_ParametersPerBand_maxNumberMIMO_LayersCB_PUSCH = ENUM(name='maxNumberMIMO-LayersCB-PUSCH', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    _MIMO_ParametersPerBand_maxNumberMIMO_LayersNonCB_PUSCH = ENUM(name='maxNumberMIMO-LayersNonCB-PUSCH', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MIMO-LayersUL')), opt=True)
    _MIMO_ParametersPerBand_maxNumberConfiguredTCIstates = ENUM(name='maxNumberConfiguredTCIstates', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberConfiguredTCIstates._cont = ASN1Dict([('n4', 0), ('n8', 1), ('n16', 2), ('n32', 3), ('n64', 4)])
    _MIMO_ParametersPerBand_maxNumberConfiguredTCIstates._ext = []
    _MIMO_ParametersPerBand_maxNumberActiveTCI_PerCC = ENUM(name='maxNumberActiveTCI-PerCC', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberActiveTCI_PerCC._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3)])
    _MIMO_ParametersPerBand_maxNumberActiveTCI_PerCC._ext = []
    _MIMO_ParametersPerBand_pusch_TransCoherence = ENUM(name='pusch-TransCoherence', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_pusch_TransCoherence._cont = ASN1Dict([('nonCoherent', 0), ('partialNonCoherent', 1), ('fullCoherent', 2)])
    _MIMO_ParametersPerBand_pusch_TransCoherence._ext = []
    _MIMO_ParametersPerBand_beamCorrespondence = ENUM(name='beamCorrespondence', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_beamCorrespondence._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_beamCorrespondence._ext = []
    _MIMO_ParametersPerBand_periodicBeamReport = ENUM(name='periodicBeamReport', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_periodicBeamReport._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_periodicBeamReport._ext = []
    _MIMO_ParametersPerBand_aperiodicBeamReport = ENUM(name='aperiodicBeamReport', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_aperiodicBeamReport._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_aperiodicBeamReport._ext = []
    _MIMO_ParametersPerBand_sp_BeamReportPUCCH = ENUM(name='sp-BeamReportPUCCH', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_sp_BeamReportPUCCH._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_sp_BeamReportPUCCH._ext = []
    _MIMO_ParametersPerBand_sp_BeamReportPUSCH = ENUM(name='sp-BeamReportPUSCH', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_sp_BeamReportPUSCH._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_sp_BeamReportPUSCH._ext = []
    _MIMO_ParametersPerBand_beamManagementSSB_CSI_RS = SEQ(name='beamManagementSSB-CSI-RS', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'BeamManagementSSB-CSI-RS')), opt=True)
    _MIMO_ParametersPerBand_maxNumberRxBeam = INT(name='maxNumberRxBeam', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberRxBeam._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    _MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL = SEQ(name='maxNumberRxTxBeamSwitchDL', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_15kHz = ENUM(name='scs-15kHz', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_15kHz._cont = ASN1Dict([('n4', 0), ('n7', 1), ('n14', 2)])
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_15kHz._ext = []
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_30kHz = ENUM(name='scs-30kHz', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_30kHz._cont = ASN1Dict([('n4', 0), ('n7', 1), ('n14', 2)])
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_30kHz._ext = []
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_60kHz = ENUM(name='scs-60kHz', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_60kHz._cont = ASN1Dict([('n4', 0), ('n7', 1), ('n14', 2)])
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_60kHz._ext = []
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_120kHz = ENUM(name='scs-120kHz', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_120kHz._cont = ASN1Dict([('n4', 0), ('n7', 1), ('n14', 2)])
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_120kHz._ext = []
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_240kHz = ENUM(name='scs-240kHz', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_240kHz._cont = ASN1Dict([('n4', 0), ('n7', 1), ('n14', 2)])
    __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_240kHz._ext = []
    _MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL._cont = ASN1Dict([
        ('scs-15kHz', __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_15kHz),
        ('scs-30kHz', __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_30kHz),
        ('scs-60kHz', __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_60kHz),
        ('scs-120kHz', __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_120kHz),
        ('scs-240kHz', __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_240kHz),
        ])
    _MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL._ext = []
    _MIMO_ParametersPerBand_maxNumberNonGroupBeamReporting = ENUM(name='maxNumberNonGroupBeamReporting', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberNonGroupBeamReporting._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2)])
    _MIMO_ParametersPerBand_maxNumberNonGroupBeamReporting._ext = []
    _MIMO_ParametersPerBand_groupBeamReporting = ENUM(name='groupBeamReporting', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_groupBeamReporting._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_groupBeamReporting._ext = []
    _MIMO_ParametersPerBand_uplinkBeamManagement = SEQ(name='uplinkBeamManagement', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourcePerSet = ENUM(name='maxNumberSRS-ResourcePerSet', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourcePerSet._cont = ASN1Dict([('n8', 0), ('n16', 1), ('n32', 2)])
    __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourcePerSet._ext = []
    __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourceSet = INT(name='maxNumberSRS-ResourceSet', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourceSet._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _MIMO_ParametersPerBand_uplinkBeamManagement._cont = ASN1Dict([
        ('maxNumberSRS-ResourcePerSet', __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourcePerSet),
        ('maxNumberSRS-ResourceSet', __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourceSet),
        ])
    _MIMO_ParametersPerBand_uplinkBeamManagement._ext = []
    _MIMO_ParametersPerBand_maxNumberCSI_RS_BFR = INT(name='maxNumberCSI-RS-BFR', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberCSI_RS_BFR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _MIMO_ParametersPerBand_maxNumberSSB_BFR = INT(name='maxNumberSSB-BFR', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberSSB_BFR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _MIMO_ParametersPerBand_maxNumberCSI_RS_SSB_BFR = INT(name='maxNumberCSI-RS-SSB-BFR', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberCSI_RS_SSB_BFR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    _MIMO_ParametersPerBand_twoPortsPTRS = BIT_STR(name='twoPortsPTRS', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_twoPortsPTRS._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _MIMO_ParametersPerBand_supportedSRS_Resources = SEQ(name='supportedSRS-Resources', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-Resources')), opt=True)
    _MIMO_ParametersPerBand_srs_TxSwitch = SEQ(name='srs-TxSwitch', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SRS-TxSwitch')), opt=True)
    _MIMO_ParametersPerBand_maxNumberSimultaneousSRS_PerCC = INT(name='maxNumberSimultaneousSRS-PerCC', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_maxNumberSimultaneousSRS_PerCC._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    _MIMO_ParametersPerBand_lowLatencyCSI_Feedback = ENUM(name='lowLatencyCSI-Feedback', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MIMO_ParametersPerBand_lowLatencyCSI_Feedback._cont = ASN1Dict([('supported', 0)])
    _MIMO_ParametersPerBand_lowLatencyCSI_Feedback._ext = []
    MIMO_ParametersPerBand._cont = ASN1Dict([
        ('timeDurationForQCL', _MIMO_ParametersPerBand_timeDurationForQCL),
        ('maxNumberMIMO-LayersPDSCH', _MIMO_ParametersPerBand_maxNumberMIMO_LayersPDSCH),
        ('maxNumberMIMO-LayersCB-PUSCH', _MIMO_ParametersPerBand_maxNumberMIMO_LayersCB_PUSCH),
        ('maxNumberMIMO-LayersNonCB-PUSCH', _MIMO_ParametersPerBand_maxNumberMIMO_LayersNonCB_PUSCH),
        ('maxNumberConfiguredTCIstates', _MIMO_ParametersPerBand_maxNumberConfiguredTCIstates),
        ('maxNumberActiveTCI-PerCC', _MIMO_ParametersPerBand_maxNumberActiveTCI_PerCC),
        ('pusch-TransCoherence', _MIMO_ParametersPerBand_pusch_TransCoherence),
        ('beamCorrespondence', _MIMO_ParametersPerBand_beamCorrespondence),
        ('periodicBeamReport', _MIMO_ParametersPerBand_periodicBeamReport),
        ('aperiodicBeamReport', _MIMO_ParametersPerBand_aperiodicBeamReport),
        ('sp-BeamReportPUCCH', _MIMO_ParametersPerBand_sp_BeamReportPUCCH),
        ('sp-BeamReportPUSCH', _MIMO_ParametersPerBand_sp_BeamReportPUSCH),
        ('beamManagementSSB-CSI-RS', _MIMO_ParametersPerBand_beamManagementSSB_CSI_RS),
        ('maxNumberRxBeam', _MIMO_ParametersPerBand_maxNumberRxBeam),
        ('maxNumberRxTxBeamSwitchDL', _MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL),
        ('maxNumberNonGroupBeamReporting', _MIMO_ParametersPerBand_maxNumberNonGroupBeamReporting),
        ('groupBeamReporting', _MIMO_ParametersPerBand_groupBeamReporting),
        ('uplinkBeamManagement', _MIMO_ParametersPerBand_uplinkBeamManagement),
        ('maxNumberCSI-RS-BFR', _MIMO_ParametersPerBand_maxNumberCSI_RS_BFR),
        ('maxNumberSSB-BFR', _MIMO_ParametersPerBand_maxNumberSSB_BFR),
        ('maxNumberCSI-RS-SSB-BFR', _MIMO_ParametersPerBand_maxNumberCSI_RS_SSB_BFR),
        ('twoPortsPTRS', _MIMO_ParametersPerBand_twoPortsPTRS),
        ('supportedSRS-Resources', _MIMO_ParametersPerBand_supportedSRS_Resources),
        ('srs-TxSwitch', _MIMO_ParametersPerBand_srs_TxSwitch),
        ('maxNumberSimultaneousSRS-PerCC', _MIMO_ParametersPerBand_maxNumberSimultaneousSRS_PerCC),
        ('lowLatencyCSI-Feedback', _MIMO_ParametersPerBand_lowLatencyCSI_Feedback),
        ])
    MIMO_ParametersPerBand._ext = []
    
    #-----< BeamManagementSSB-CSI-RS >-----#
    BeamManagementSSB_CSI_RS = SEQ(name='BeamManagementSSB-CSI-RS', mode=MODE_TYPE)
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceOneTx = ENUM(name='maxNumberSSB-CSI-RS-ResourceOneTx', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceOneTx._cont = ASN1Dict([('n8', 0), ('n16', 1), ('n32', 2), ('n64', 3)])
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceOneTx._ext = []
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceTwoTx = ENUM(name='maxNumberSSB-CSI-RS-ResourceTwoTx', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceTwoTx._cont = ASN1Dict([('n0', 0), ('n4', 1), ('n8', 2), ('n16', 3), ('n32', 4), ('n64', 5)])
    _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceTwoTx._ext = []
    _BeamManagementSSB_CSI_RS_supportedCSI_RS_Density = ENUM(name='supportedCSI-RS-Density', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BeamManagementSSB_CSI_RS_supportedCSI_RS_Density._cont = ASN1Dict([('one', 0), ('three', 1), ('oneAndThree', 2)])
    _BeamManagementSSB_CSI_RS_supportedCSI_RS_Density._ext = []
    BeamManagementSSB_CSI_RS._cont = ASN1Dict([
        ('maxNumberSSB-CSI-RS-ResourceOneTx', _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceOneTx),
        ('maxNumberSSB-CSI-RS-ResourceTwoTx', _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceTwoTx),
        ('supportedCSI-RS-Density', _BeamManagementSSB_CSI_RS_supportedCSI_RS_Density),
        ])
    BeamManagementSSB_CSI_RS._ext = []
    
    #-----< SRS-Resources >-----#
    SRS_Resources = SEQ(name='SRS-Resources', mode=MODE_TYPE)
    _SRS_Resources_maxNumberAperiodicSRS_PerBWP = ENUM(name='maxNumberAperiodicSRS-PerBWP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberAperiodicSRS_PerBWP._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3), ('n16', 4)])
    _SRS_Resources_maxNumberAperiodicSRS_PerBWP._ext = []
    _SRS_Resources_maxNumberAperiodicSRS_PerBWP_PerSlot = INT(name='maxNumberAperiodicSRS-PerBWP-PerSlot', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberAperiodicSRS_PerBWP_PerSlot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    _SRS_Resources_maxNumberPeriodicSRS_PerBWP = ENUM(name='maxNumberPeriodicSRS-PerBWP', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberPeriodicSRS_PerBWP._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2), ('n8', 3), ('n16', 4)])
    _SRS_Resources_maxNumberPeriodicSRS_PerBWP._ext = []
    _SRS_Resources_maxNumberPeriodicSRS_PerBWP_PerSlot = INT(name='maxNumberPeriodicSRS-PerBWP-PerSlot', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberPeriodicSRS_PerBWP_PerSlot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    _SRS_Resources_maxNumberSemiPersitentSRS_PerBWP = ENUM(name='maxNumberSemiPersitentSRS-PerBWP', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberSemiPersitentSRS_PerBWP._cont = ASN1Dict([('n0', 0), ('n1', 1), ('n2', 2), ('n4', 3), ('n8', 4), ('n16', 5)])
    _SRS_Resources_maxNumberSemiPersitentSRS_PerBWP._ext = []
    _SRS_Resources_maxNumberSP_SRS_PerBWP_PerSlot = INT(name='maxNumberSP-SRS-PerBWP-PerSlot', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberSP_SRS_PerBWP_PerSlot._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=6)], ev=None, er=[])
    _SRS_Resources_maxNumberSRS_Ports_PerResource = ENUM(name='maxNumberSRS-Ports-PerResource', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_Resources_maxNumberSRS_Ports_PerResource._cont = ASN1Dict([('n1', 0), ('n2', 1), ('n4', 2)])
    _SRS_Resources_maxNumberSRS_Ports_PerResource._ext = []
    SRS_Resources._cont = ASN1Dict([
        ('maxNumberAperiodicSRS-PerBWP', _SRS_Resources_maxNumberAperiodicSRS_PerBWP),
        ('maxNumberAperiodicSRS-PerBWP-PerSlot', _SRS_Resources_maxNumberAperiodicSRS_PerBWP_PerSlot),
        ('maxNumberPeriodicSRS-PerBWP', _SRS_Resources_maxNumberPeriodicSRS_PerBWP),
        ('maxNumberPeriodicSRS-PerBWP-PerSlot', _SRS_Resources_maxNumberPeriodicSRS_PerBWP_PerSlot),
        ('maxNumberSemiPersitentSRS-PerBWP', _SRS_Resources_maxNumberSemiPersitentSRS_PerBWP),
        ('maxNumberSP-SRS-PerBWP-PerSlot', _SRS_Resources_maxNumberSP_SRS_PerBWP_PerSlot),
        ('maxNumberSRS-Ports-PerResource', _SRS_Resources_maxNumberSRS_Ports_PerResource),
        ])
    SRS_Resources._ext = []
    
    #-----< SRS-TxSwitch >-----#
    SRS_TxSwitch = SEQ(name='SRS-TxSwitch', mode=MODE_TYPE)
    _SRS_TxSwitch_supportedSRS_TxPortSwitch = ENUM(name='supportedSRS-TxPortSwitch', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SRS_TxSwitch_supportedSRS_TxPortSwitch._cont = ASN1Dict([('t1r2', 0), ('t1r4', 1), ('t2r4', 2), ('t1r4-t2r4', 3)])
    _SRS_TxSwitch_supportedSRS_TxPortSwitch._ext = []
    _SRS_TxSwitch_txSwitchImpactToRx = ENUM(name='txSwitchImpactToRx', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _SRS_TxSwitch_txSwitchImpactToRx._cont = ASN1Dict([('true', 0)])
    _SRS_TxSwitch_txSwitchImpactToRx._ext = []
    SRS_TxSwitch._cont = ASN1Dict([
        ('supportedSRS-TxPortSwitch', _SRS_TxSwitch_supportedSRS_TxPortSwitch),
        ('txSwitchImpactToRx', _SRS_TxSwitch_txSwitchImpactToRx),
        ])
    SRS_TxSwitch._ext = []
    
    #-----< PDCP-Parameters >-----#
    PDCP_Parameters = SEQ(name='PDCP-Parameters', mode=MODE_TYPE)
    _PDCP_Parameters_supportedROHC_Profiles = SEQ(name='supportedROHC-Profiles', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0000 = BOOL(name='profile0x0000', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0001 = BOOL(name='profile0x0001', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0002 = BOOL(name='profile0x0002', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0003 = BOOL(name='profile0x0003', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0004 = BOOL(name='profile0x0004', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0006 = BOOL(name='profile0x0006', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0101 = BOOL(name='profile0x0101', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0102 = BOOL(name='profile0x0102', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0103 = BOOL(name='profile0x0103', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PDCP_Parameters_supportedROHC_Profiles_profile0x0104 = BOOL(name='profile0x0104', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDCP_Parameters_supportedROHC_Profiles._cont = ASN1Dict([
        ('profile0x0000', __PDCP_Parameters_supportedROHC_Profiles_profile0x0000),
        ('profile0x0001', __PDCP_Parameters_supportedROHC_Profiles_profile0x0001),
        ('profile0x0002', __PDCP_Parameters_supportedROHC_Profiles_profile0x0002),
        ('profile0x0003', __PDCP_Parameters_supportedROHC_Profiles_profile0x0003),
        ('profile0x0004', __PDCP_Parameters_supportedROHC_Profiles_profile0x0004),
        ('profile0x0006', __PDCP_Parameters_supportedROHC_Profiles_profile0x0006),
        ('profile0x0101', __PDCP_Parameters_supportedROHC_Profiles_profile0x0101),
        ('profile0x0102', __PDCP_Parameters_supportedROHC_Profiles_profile0x0102),
        ('profile0x0103', __PDCP_Parameters_supportedROHC_Profiles_profile0x0103),
        ('profile0x0104', __PDCP_Parameters_supportedROHC_Profiles_profile0x0104),
        ])
    _PDCP_Parameters_supportedROHC_Profiles._ext = []
    _PDCP_Parameters_maxNumberROHC_ContextSessions = ENUM(name='maxNumberROHC-ContextSessions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PDCP_Parameters_maxNumberROHC_ContextSessions._cont = ASN1Dict([('cs2', 0), ('cs4', 1), ('cs8', 2), ('cs12', 3), ('cs16', 4), ('cs24', 5), ('cs32', 6), ('cs48', 7), ('cs64', 8), ('cs128', 9), ('cs256', 10), ('cs512', 11), ('cs1024', 12), ('cs16384', 13), ('spare2', 14), ('spare1', 15)])
    _PDCP_Parameters_maxNumberROHC_ContextSessions._ext = []
    _PDCP_Parameters_uplinkOnlyROHC_Profiles = ENUM(name='uplinkOnlyROHC-Profiles', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Parameters_uplinkOnlyROHC_Profiles._cont = ASN1Dict([('supported', 0)])
    _PDCP_Parameters_uplinkOnlyROHC_Profiles._ext = []
    _PDCP_Parameters_continueROHC_Context = ENUM(name='continueROHC-Context', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Parameters_continueROHC_Context._cont = ASN1Dict([('supported', 0)])
    _PDCP_Parameters_continueROHC_Context._ext = []
    _PDCP_Parameters_outOfOrderDelivery = ENUM(name='outOfOrderDelivery', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Parameters_outOfOrderDelivery._cont = ASN1Dict([('supported', 0)])
    _PDCP_Parameters_outOfOrderDelivery._ext = []
    _PDCP_Parameters_shortSN = ENUM(name='shortSN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PDCP_Parameters_shortSN._cont = ASN1Dict([('supported', 0)])
    _PDCP_Parameters_shortSN._ext = []
    PDCP_Parameters._cont = ASN1Dict([
        ('supportedROHC-Profiles', _PDCP_Parameters_supportedROHC_Profiles),
        ('maxNumberROHC-ContextSessions', _PDCP_Parameters_maxNumberROHC_ContextSessions),
        ('uplinkOnlyROHC-Profiles', _PDCP_Parameters_uplinkOnlyROHC_Profiles),
        ('continueROHC-Context', _PDCP_Parameters_continueROHC_Context),
        ('outOfOrderDelivery', _PDCP_Parameters_outOfOrderDelivery),
        ('shortSN', _PDCP_Parameters_shortSN),
        ])
    PDCP_Parameters._ext = []
    
    #-----< RLC-Parameters >-----#
    RLC_Parameters = SEQ(name='RLC-Parameters', mode=MODE_TYPE)
    _RLC_Parameters_am_WithShortSN = ENUM(name='am-WithShortSN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RLC_Parameters_am_WithShortSN._cont = ASN1Dict([('supported', 0)])
    _RLC_Parameters_am_WithShortSN._ext = []
    _RLC_Parameters_um_WithShortSN = ENUM(name='um-WithShortSN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RLC_Parameters_um_WithShortSN._cont = ASN1Dict([('supported', 0)])
    _RLC_Parameters_um_WithShortSN._ext = []
    _RLC_Parameters_um_WIthLongSN = ENUM(name='um-WIthLongSN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RLC_Parameters_um_WIthLongSN._cont = ASN1Dict([('supported', 0)])
    _RLC_Parameters_um_WIthLongSN._ext = []
    RLC_Parameters._cont = ASN1Dict([
        ('am-WithShortSN', _RLC_Parameters_am_WithShortSN),
        ('um-WithShortSN', _RLC_Parameters_um_WithShortSN),
        ('um-WIthLongSN', _RLC_Parameters_um_WIthLongSN),
        ])
    RLC_Parameters._ext = []
    
    #-----< MAC-Parameters >-----#
    MAC_Parameters = SEQ(name='MAC-Parameters', mode=MODE_TYPE)
    _MAC_Parameters_mac_ParametersCommon = SEQ(name='mac-ParametersCommon', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MAC-ParametersCommon')), opt=True)
    _MAC_Parameters_mac_ParametersXDD_Diff = SEQ(name='mac-ParametersXDD-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MAC-ParametersXDD-Diff')), opt=True)
    MAC_Parameters._cont = ASN1Dict([
        ('mac-ParametersCommon', _MAC_Parameters_mac_ParametersCommon),
        ('mac-ParametersXDD-Diff', _MAC_Parameters_mac_ParametersXDD_Diff),
        ])
    MAC_Parameters._ext = []
    
    #-----< MAC-ParametersCommon >-----#
    MAC_ParametersCommon = SEQ(name='MAC-ParametersCommon', mode=MODE_TYPE)
    _MAC_ParametersCommon_lcp_Restriction = ENUM(name='lcp-Restriction', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersCommon_lcp_Restriction._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersCommon_lcp_Restriction._ext = []
    _MAC_ParametersCommon_pucch_SpatialRelInfoMAC_CE = ENUM(name='pucch-SpatialRelInfoMAC-CE', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersCommon_pucch_SpatialRelInfoMAC_CE._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersCommon_pucch_SpatialRelInfoMAC_CE._ext = []
    MAC_ParametersCommon._cont = ASN1Dict([
        ('lcp-Restriction', _MAC_ParametersCommon_lcp_Restriction),
        ('pucch-SpatialRelInfoMAC-CE', _MAC_ParametersCommon_pucch_SpatialRelInfoMAC_CE),
        ])
    MAC_ParametersCommon._ext = []
    
    #-----< MAC-ParametersXDD-Diff >-----#
    MAC_ParametersXDD_Diff = SEQ(name='MAC-ParametersXDD-Diff', mode=MODE_TYPE)
    _MAC_ParametersXDD_Diff_skipUplinkTxDynamic = ENUM(name='skipUplinkTxDynamic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_skipUplinkTxDynamic._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_skipUplinkTxDynamic._ext = []
    _MAC_ParametersXDD_Diff_logicalChannelSR_DelayTimer = ENUM(name='logicalChannelSR-DelayTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_logicalChannelSR_DelayTimer._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_logicalChannelSR_DelayTimer._ext = []
    _MAC_ParametersXDD_Diff_longDRX_Cycle = ENUM(name='longDRX-Cycle', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_longDRX_Cycle._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_longDRX_Cycle._ext = []
    _MAC_ParametersXDD_Diff_shortDRX_Cycle = ENUM(name='shortDRX-Cycle', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_shortDRX_Cycle._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_shortDRX_Cycle._ext = []
    _MAC_ParametersXDD_Diff_multipleSR_Configurations = ENUM(name='multipleSR-Configurations', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_multipleSR_Configurations._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_multipleSR_Configurations._ext = []
    _MAC_ParametersXDD_Diff_multipleConfiguredGrantConfigurations = ENUM(name='multipleConfiguredGrantConfigurations', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MAC_ParametersXDD_Diff_multipleConfiguredGrantConfigurations._cont = ASN1Dict([('supported', 0)])
    _MAC_ParametersXDD_Diff_multipleConfiguredGrantConfigurations._ext = []
    MAC_ParametersXDD_Diff._cont = ASN1Dict([
        ('skipUplinkTxDynamic', _MAC_ParametersXDD_Diff_skipUplinkTxDynamic),
        ('logicalChannelSR-DelayTimer', _MAC_ParametersXDD_Diff_logicalChannelSR_DelayTimer),
        ('longDRX-Cycle', _MAC_ParametersXDD_Diff_longDRX_Cycle),
        ('shortDRX-Cycle', _MAC_ParametersXDD_Diff_shortDRX_Cycle),
        ('multipleSR-Configurations', _MAC_ParametersXDD_Diff_multipleSR_Configurations),
        ('multipleConfiguredGrantConfigurations', _MAC_ParametersXDD_Diff_multipleConfiguredGrantConfigurations),
        ])
    MAC_ParametersXDD_Diff._ext = []
    
    #-----< MeasParameters >-----#
    MeasParameters = SEQ(name='MeasParameters', mode=MODE_TYPE)
    _MeasParameters_measParametersXDD_Diff = SEQ(name='measParametersXDD-Diff', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersXDD-Diff')), opt=True)
    _MeasParameters_measParametersFRX_Diff = SEQ(name='measParametersFRX-Diff', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasParametersFRX-Diff')), opt=True)
    MeasParameters._cont = ASN1Dict([
        ('measParametersXDD-Diff', _MeasParameters_measParametersXDD_Diff),
        ('measParametersFRX-Diff', _MeasParameters_measParametersFRX_Diff),
        ])
    MeasParameters._ext = []
    
    #-----< MeasParametersXDD-Diff >-----#
    MeasParametersXDD_Diff = SEQ(name='MeasParametersXDD-Diff', mode=MODE_TYPE)
    _MeasParametersXDD_Diff_intraAndInterF_MeasAndReport = ENUM(name='intraAndInterF-MeasAndReport', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersXDD_Diff_intraAndInterF_MeasAndReport._cont = ASN1Dict([('supported', 0)])
    _MeasParametersXDD_Diff_intraAndInterF_MeasAndReport._ext = []
    _MeasParametersXDD_Diff_eventA_MeasAndReport = ENUM(name='eventA-MeasAndReport', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersXDD_Diff_eventA_MeasAndReport._cont = ASN1Dict([('supported', 0)])
    _MeasParametersXDD_Diff_eventA_MeasAndReport._ext = []
    MeasParametersXDD_Diff._cont = ASN1Dict([
        ('intraAndInterF-MeasAndReport', _MeasParametersXDD_Diff_intraAndInterF_MeasAndReport),
        ('eventA-MeasAndReport', _MeasParametersXDD_Diff_eventA_MeasAndReport),
        ])
    MeasParametersXDD_Diff._ext = []
    
    #-----< MeasParametersFRX-Diff >-----#
    MeasParametersFRX_Diff = SEQ(name='MeasParametersFRX-Diff', mode=MODE_TYPE)
    _MeasParametersFRX_Diff_ss_SINR_Meas = ENUM(name='ss-SINR-Meas', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersFRX_Diff_ss_SINR_Meas._cont = ASN1Dict([('supported', 0)])
    _MeasParametersFRX_Diff_ss_SINR_Meas._ext = []
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithSSB = ENUM(name='csi-RSRP-AndRSRQ-MeasWithSSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithSSB._cont = ASN1Dict([('supported', 0)])
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithSSB._ext = []
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithoutSSB = ENUM(name='csi-RSRP-AndRSRQ-MeasWithoutSSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithoutSSB._cont = ASN1Dict([('supported', 0)])
    _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithoutSSB._ext = []
    _MeasParametersFRX_Diff_csi_SINR_Meas = ENUM(name='csi-SINR-Meas', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersFRX_Diff_csi_SINR_Meas._cont = ASN1Dict([('supported', 0)])
    _MeasParametersFRX_Diff_csi_SINR_Meas._ext = []
    _MeasParametersFRX_Diff_csi_RS_RLM = ENUM(name='csi-RS-RLM', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasParametersFRX_Diff_csi_RS_RLM._cont = ASN1Dict([('supported', 0)])
    _MeasParametersFRX_Diff_csi_RS_RLM._ext = []
    MeasParametersFRX_Diff._cont = ASN1Dict([
        ('ss-SINR-Meas', _MeasParametersFRX_Diff_ss_SINR_Meas),
        ('csi-RSRP-AndRSRQ-MeasWithSSB', _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithSSB),
        ('csi-RSRP-AndRSRQ-MeasWithoutSSB', _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithoutSSB),
        ('csi-SINR-Meas', _MeasParametersFRX_Diff_csi_SINR_Meas),
        ('csi-RS-RLM', _MeasParametersFRX_Diff_csi_RS_RLM),
        ])
    MeasParametersFRX_Diff._ext = []
    
    #-----< RRC-TransactionIdentifier >-----#
    RRC_TransactionIdentifier = INT(name='RRC-TransactionIdentifier', mode=MODE_TYPE)
    RRC_TransactionIdentifier._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3)], ev=None, er=[])
    
    #-----< maxBandComb >-----#
    maxBandComb = INT(name='maxBandComb', mode=MODE_VALUE)
    maxBandComb._val = 65536
    
    #-----< maxBasebandProcComb >-----#
    maxBasebandProcComb = INT(name='maxBasebandProcComb', mode=MODE_VALUE)
    maxBasebandProcComb._val = 65536
    
    #-----< maxEARFCN >-----#
    maxEARFCN = INT(name='maxEARFCN', mode=MODE_VALUE)
    maxEARFCN._val = 262143
    
    #-----< maxNrofServingCells >-----#
    maxNrofServingCells = INT(name='maxNrofServingCells', mode=MODE_VALUE)
    maxNrofServingCells._val = 32
    
    #-----< maxNrofServingCells-1 >-----#
    maxNrofServingCells_1 = INT(name='maxNrofServingCells-1', mode=MODE_VALUE)
    maxNrofServingCells_1._val = 31
    
    #-----< maxNrofAggregatedCellsPerCellGroup >-----#
    maxNrofAggregatedCellsPerCellGroup = INT(name='maxNrofAggregatedCellsPerCellGroup', mode=MODE_VALUE)
    maxNrofAggregatedCellsPerCellGroup._val = 16
    
    #-----< maxNrofSCells >-----#
    maxNrofSCells = INT(name='maxNrofSCells', mode=MODE_VALUE)
    maxNrofSCells._val = 31
    
    #-----< maxNrofCellMeas >-----#
    maxNrofCellMeas = INT(name='maxNrofCellMeas', mode=MODE_VALUE)
    maxNrofCellMeas._val = 32
    
    #-----< maxNrofSS-BlocksToAverage >-----#
    maxNrofSS_BlocksToAverage = INT(name='maxNrofSS-BlocksToAverage', mode=MODE_VALUE)
    maxNrofSS_BlocksToAverage._val = 16
    
    #-----< maxNrofCSI-RS-ResourcesToAverage >-----#
    maxNrofCSI_RS_ResourcesToAverage = INT(name='maxNrofCSI-RS-ResourcesToAverage', mode=MODE_VALUE)
    maxNrofCSI_RS_ResourcesToAverage._val = 16
    
    #-----< maxNrofDL-Allocations >-----#
    maxNrofDL_Allocations = INT(name='maxNrofDL-Allocations', mode=MODE_VALUE)
    maxNrofDL_Allocations._val = 16
    
    #-----< maxNrofSR-ConfigPerCellGroup >-----#
    maxNrofSR_ConfigPerCellGroup = INT(name='maxNrofSR-ConfigPerCellGroup', mode=MODE_VALUE)
    maxNrofSR_ConfigPerCellGroup._val = 8
    
    #-----< maxLCG-ID >-----#
    maxLCG_ID = INT(name='maxLCG-ID', mode=MODE_VALUE)
    maxLCG_ID._val = 7
    
    #-----< maxLC-ID >-----#
    maxLC_ID = INT(name='maxLC-ID', mode=MODE_VALUE)
    maxLC_ID._val = 32
    
    #-----< maxNrofTAGs >-----#
    maxNrofTAGs = INT(name='maxNrofTAGs', mode=MODE_VALUE)
    maxNrofTAGs._val = 4
    
    #-----< maxNrofTAGs-1 >-----#
    maxNrofTAGs_1 = INT(name='maxNrofTAGs-1', mode=MODE_VALUE)
    maxNrofTAGs_1._val = 3
    
    #-----< maxNrofBWPs >-----#
    maxNrofBWPs = INT(name='maxNrofBWPs', mode=MODE_VALUE)
    maxNrofBWPs._val = 4
    
    #-----< maxNrofSymbols-1 >-----#
    maxNrofSymbols_1 = INT(name='maxNrofSymbols-1', mode=MODE_VALUE)
    maxNrofSymbols_1._val = 13
    
    #-----< maxNrofSlots >-----#
    maxNrofSlots = INT(name='maxNrofSlots', mode=MODE_VALUE)
    maxNrofSlots._val = 320
    
    #-----< maxNrofSlots-1 >-----#
    maxNrofSlots_1 = INT(name='maxNrofSlots-1', mode=MODE_VALUE)
    maxNrofSlots_1._val = 319
    
    #-----< maxNrofPhysicalResourceBlocks >-----#
    maxNrofPhysicalResourceBlocks = INT(name='maxNrofPhysicalResourceBlocks', mode=MODE_VALUE)
    maxNrofPhysicalResourceBlocks._val = 275
    
    #-----< maxNrofPhysicalResourceBlocks-1 >-----#
    maxNrofPhysicalResourceBlocks_1 = INT(name='maxNrofPhysicalResourceBlocks-1', mode=MODE_VALUE)
    maxNrofPhysicalResourceBlocks_1._val = 274
    
    #-----< maxNrofControlResourceSets >-----#
    maxNrofControlResourceSets = INT(name='maxNrofControlResourceSets', mode=MODE_VALUE)
    maxNrofControlResourceSets._val = 12
    
    #-----< maxNrofControlResourceSets-1 >-----#
    maxNrofControlResourceSets_1 = INT(name='maxNrofControlResourceSets-1', mode=MODE_VALUE)
    maxNrofControlResourceSets_1._val = 11
    
    #-----< maxCoReSetDuration >-----#
    maxCoReSetDuration = INT(name='maxCoReSetDuration', mode=MODE_VALUE)
    maxCoReSetDuration._val = 3
    
    #-----< maxNrofSearchSpaces >-----#
    maxNrofSearchSpaces = INT(name='maxNrofSearchSpaces', mode=MODE_VALUE)
    maxNrofSearchSpaces._val = 40
    
    #-----< maxNrofSearchSpaces-1 >-----#
    maxNrofSearchSpaces_1 = INT(name='maxNrofSearchSpaces-1', mode=MODE_VALUE)
    maxNrofSearchSpaces_1._val = 39
    
    #-----< maxSFI-DCI-PayloadSize >-----#
    maxSFI_DCI_PayloadSize = INT(name='maxSFI-DCI-PayloadSize', mode=MODE_VALUE)
    maxSFI_DCI_PayloadSize._val = 128
    
    #-----< maxSFI-DCI-PayloadSize-1 >-----#
    maxSFI_DCI_PayloadSize_1 = INT(name='maxSFI-DCI-PayloadSize-1', mode=MODE_VALUE)
    maxSFI_DCI_PayloadSize_1._val = 127
    
    #-----< maxINT-DCI-PayloadSize >-----#
    maxINT_DCI_PayloadSize = INT(name='maxINT-DCI-PayloadSize', mode=MODE_VALUE)
    maxINT_DCI_PayloadSize._val = 126
    
    #-----< maxINT-DCI-PayloadSize-1 >-----#
    maxINT_DCI_PayloadSize_1 = INT(name='maxINT-DCI-PayloadSize-1', mode=MODE_VALUE)
    maxINT_DCI_PayloadSize_1._val = 125
    
    #-----< maxNrofRateMatchPatterns >-----#
    maxNrofRateMatchPatterns = INT(name='maxNrofRateMatchPatterns', mode=MODE_VALUE)
    maxNrofRateMatchPatterns._val = 4
    
    #-----< maxNrofRateMatchPatterns-1 >-----#
    maxNrofRateMatchPatterns_1 = INT(name='maxNrofRateMatchPatterns-1', mode=MODE_VALUE)
    maxNrofRateMatchPatterns_1._val = 3
    
    #-----< maxNrofCSI-ReportConfigurations >-----#
    maxNrofCSI_ReportConfigurations = INT(name='maxNrofCSI-ReportConfigurations', mode=MODE_VALUE)
    maxNrofCSI_ReportConfigurations._val = 48
    
    #-----< maxNrofCSI-ReportConfigurations-1 >-----#
    maxNrofCSI_ReportConfigurations_1 = INT(name='maxNrofCSI-ReportConfigurations-1', mode=MODE_VALUE)
    maxNrofCSI_ReportConfigurations_1._val = 47
    
    #-----< maxNrofCSI-ResourceConfigurations >-----#
    maxNrofCSI_ResourceConfigurations = INT(name='maxNrofCSI-ResourceConfigurations', mode=MODE_VALUE)
    maxNrofCSI_ResourceConfigurations._val = 112
    
    #-----< maxNrofCSI-ResourceConfigurations-1 >-----#
    maxNrofCSI_ResourceConfigurations_1 = INT(name='maxNrofCSI-ResourceConfigurations-1', mode=MODE_VALUE)
    maxNrofCSI_ResourceConfigurations_1._val = 111
    
    #-----< maxNrofAP-CSI-RS-ResourcesPerSet >-----#
    maxNrofAP_CSI_RS_ResourcesPerSet = INT(name='maxNrofAP-CSI-RS-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofAP_CSI_RS_ResourcesPerSet._val = 16
    
    #-----< maxNrOfCSI-AperiodicTriggers >-----#
    maxNrOfCSI_AperiodicTriggers = INT(name='maxNrOfCSI-AperiodicTriggers', mode=MODE_VALUE)
    maxNrOfCSI_AperiodicTriggers._val = 128
    
    #-----< maxNrofReportConfigPerAperiodicTrigger >-----#
    maxNrofReportConfigPerAperiodicTrigger = INT(name='maxNrofReportConfigPerAperiodicTrigger', mode=MODE_VALUE)
    maxNrofReportConfigPerAperiodicTrigger._val = 16
    
    #-----< maxNrofNZP-CSI-RS-Resources >-----#
    maxNrofNZP_CSI_RS_Resources = INT(name='maxNrofNZP-CSI-RS-Resources', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_Resources._val = 192
    
    #-----< maxNrofNZP-CSI-RS-Resources-1 >-----#
    maxNrofNZP_CSI_RS_Resources_1 = INT(name='maxNrofNZP-CSI-RS-Resources-1', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_Resources_1._val = 191
    
    #-----< maxNrofNZP-CSI-RS-ResourcesPerSet >-----#
    maxNrofNZP_CSI_RS_ResourcesPerSet = INT(name='maxNrofNZP-CSI-RS-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_ResourcesPerSet._val = 64
    
    #-----< maxNrofNZP-CSI-RS-ResourceSetsPerConfig >-----#
    maxNrofNZP_CSI_RS_ResourceSetsPerConfig = INT(name='maxNrofNZP-CSI-RS-ResourceSetsPerConfig', mode=MODE_VALUE)
    maxNrofNZP_CSI_RS_ResourceSetsPerConfig._val = 16
    
    #-----< maxNrofZP-CSI-RS-Resources >-----#
    maxNrofZP_CSI_RS_Resources = INT(name='maxNrofZP-CSI-RS-Resources', mode=MODE_VALUE)
    maxNrofZP_CSI_RS_Resources._val = 32
    
    #-----< maxNrofZP-CSI-RS-Resources-1 >-----#
    maxNrofZP_CSI_RS_Resources_1 = INT(name='maxNrofZP-CSI-RS-Resources-1', mode=MODE_VALUE)
    maxNrofZP_CSI_RS_Resources_1._val = 31
    
    #-----< maxNrofZP-CSI-RS-ResourceSets-1 >-----#
    maxNrofZP_CSI_RS_ResourceSets_1 = INT(name='maxNrofZP-CSI-RS-ResourceSets-1', mode=MODE_VALUE)
    maxNrofZP_CSI_RS_ResourceSets_1._val = 16
    
    #-----< maxNrofZP-CSI-RS-ResourcesPerSet >-----#
    maxNrofZP_CSI_RS_ResourcesPerSet = INT(name='maxNrofZP-CSI-RS-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofZP_CSI_RS_ResourcesPerSet._val = 16
    
    #-----< maxNrofZP-CSI-RS-Sets >-----#
    maxNrofZP_CSI_RS_Sets = INT(name='maxNrofZP-CSI-RS-Sets', mode=MODE_VALUE)
    maxNrofZP_CSI_RS_Sets._val = 16
    
    #-----< maxNrofCSI-IM-Resources >-----#
    maxNrofCSI_IM_Resources = INT(name='maxNrofCSI-IM-Resources', mode=MODE_VALUE)
    maxNrofCSI_IM_Resources._val = 32
    
    #-----< maxNrofCSI-IM-Resources-1 >-----#
    maxNrofCSI_IM_Resources_1 = INT(name='maxNrofCSI-IM-Resources-1', mode=MODE_VALUE)
    maxNrofCSI_IM_Resources_1._val = 31
    
    #-----< maxNrofCSI-IM-ResourcesPerSet >-----#
    maxNrofCSI_IM_ResourcesPerSet = INT(name='maxNrofCSI-IM-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofCSI_IM_ResourcesPerSet._val = 8
    
    #-----< maxNrofCSI-IM-ResourceSetsPerConfig >-----#
    maxNrofCSI_IM_ResourceSetsPerConfig = INT(name='maxNrofCSI-IM-ResourceSetsPerConfig', mode=MODE_VALUE)
    maxNrofCSI_IM_ResourceSetsPerConfig._val = 16
    
    #-----< maxNrofSSB-Resources-1 >-----#
    maxNrofSSB_Resources_1 = INT(name='maxNrofSSB-Resources-1', mode=MODE_VALUE)
    maxNrofSSB_Resources_1._val = 63
    
    #-----< maxNrofCSI-SSB-ResourcePerSet >-----#
    maxNrofCSI_SSB_ResourcePerSet = INT(name='maxNrofCSI-SSB-ResourcePerSet', mode=MODE_VALUE)
    maxNrofCSI_SSB_ResourcePerSet._val = 64
    
    #-----< maxNrofCSI-SSB-ResourceSetsPerConfig >-----#
    maxNrofCSI_SSB_ResourceSetsPerConfig = INT(name='maxNrofCSI-SSB-ResourceSetsPerConfig', mode=MODE_VALUE)
    maxNrofCSI_SSB_ResourceSetsPerConfig._val = 1
    
    #-----< maxNrofFailureDetectionResources >-----#
    maxNrofFailureDetectionResources = INT(name='maxNrofFailureDetectionResources', mode=MODE_VALUE)
    maxNrofFailureDetectionResources._val = 10
    
    #-----< maxNrofObjectId >-----#
    maxNrofObjectId = INT(name='maxNrofObjectId', mode=MODE_VALUE)
    maxNrofObjectId._val = 64
    
    #-----< maxNrofPageRec >-----#
    maxNrofPageRec = INT(name='maxNrofPageRec', mode=MODE_VALUE)
    maxNrofPageRec._val = 16
    
    #-----< maxNrofPCI-Ranges >-----#
    maxNrofPCI_Ranges = INT(name='maxNrofPCI-Ranges', mode=MODE_VALUE)
    maxNrofPCI_Ranges._val = 8
    
    #-----< maxNrofPLMN >-----#
    maxNrofPLMN = INT(name='maxNrofPLMN', mode=MODE_VALUE)
    maxNrofPLMN._val = 12
    
    #-----< maxNrofCSI-RS-ResourcesRRM >-----#
    maxNrofCSI_RS_ResourcesRRM = INT(name='maxNrofCSI-RS-ResourcesRRM', mode=MODE_VALUE)
    maxNrofCSI_RS_ResourcesRRM._val = 96
    
    #-----< maxNrofCSI-RS-ResourcesRRM-1 >-----#
    maxNrofCSI_RS_ResourcesRRM_1 = INT(name='maxNrofCSI-RS-ResourcesRRM-1', mode=MODE_VALUE)
    maxNrofCSI_RS_ResourcesRRM_1._val = 95
    
    #-----< maxNrofMeasId >-----#
    maxNrofMeasId = INT(name='maxNrofMeasId', mode=MODE_VALUE)
    maxNrofMeasId._val = 64
    
    #-----< maxNrofQuantityConfig >-----#
    maxNrofQuantityConfig = INT(name='maxNrofQuantityConfig', mode=MODE_VALUE)
    maxNrofQuantityConfig._val = 2
    
    #-----< maxNrofCSI-RS-CellsRRM >-----#
    maxNrofCSI_RS_CellsRRM = INT(name='maxNrofCSI-RS-CellsRRM', mode=MODE_VALUE)
    maxNrofCSI_RS_CellsRRM._val = 96
    
    #-----< maxNrofSRS-ResourceSets >-----#
    maxNrofSRS_ResourceSets = INT(name='maxNrofSRS-ResourceSets', mode=MODE_VALUE)
    maxNrofSRS_ResourceSets._val = 16
    
    #-----< maxNrofSRS-ResourceSets-1 >-----#
    maxNrofSRS_ResourceSets_1 = INT(name='maxNrofSRS-ResourceSets-1', mode=MODE_VALUE)
    maxNrofSRS_ResourceSets_1._val = 15
    
    #-----< maxNrofSRS-Resources >-----#
    maxNrofSRS_Resources = INT(name='maxNrofSRS-Resources', mode=MODE_VALUE)
    maxNrofSRS_Resources._val = 64
    
    #-----< maxNrofSRS-Resources-1 >-----#
    maxNrofSRS_Resources_1 = INT(name='maxNrofSRS-Resources-1', mode=MODE_VALUE)
    maxNrofSRS_Resources_1._val = 63
    
    #-----< maxNrofSRS-TriggerStates-1 >-----#
    maxNrofSRS_TriggerStates_1 = INT(name='maxNrofSRS-TriggerStates-1', mode=MODE_VALUE)
    maxNrofSRS_TriggerStates_1._val = 3
    
    #-----< maxRAT-CapabilityContainers >-----#
    maxRAT_CapabilityContainers = INT(name='maxRAT-CapabilityContainers', mode=MODE_VALUE)
    maxRAT_CapabilityContainers._val = 8
    
    #-----< maxSimultaneousBands >-----#
    maxSimultaneousBands = INT(name='maxSimultaneousBands', mode=MODE_VALUE)
    maxSimultaneousBands._val = 32
    
    #-----< maxNrofSlotFormatCombinationsPerCell >-----#
    maxNrofSlotFormatCombinationsPerCell = INT(name='maxNrofSlotFormatCombinationsPerCell', mode=MODE_VALUE)
    maxNrofSlotFormatCombinationsPerCell._val = 16
    
    #-----< maxNrofSlotFormatCombinationsPerSet >-----#
    maxNrofSlotFormatCombinationsPerSet = INT(name='maxNrofSlotFormatCombinationsPerSet', mode=MODE_VALUE)
    maxNrofSlotFormatCombinationsPerSet._val = 4096
    
    #-----< maxNrofSlotFormatCombinationsPerSet-1 >-----#
    maxNrofSlotFormatCombinationsPerSet_1 = INT(name='maxNrofSlotFormatCombinationsPerSet-1', mode=MODE_VALUE)
    maxNrofSlotFormatCombinationsPerSet_1._val = 4095
    
    #-----< maxNrofPUCCH-Resources >-----#
    maxNrofPUCCH_Resources = INT(name='maxNrofPUCCH-Resources', mode=MODE_VALUE)
    maxNrofPUCCH_Resources._val = 128
    
    #-----< maxNrofPUCCH-Resources-1 >-----#
    maxNrofPUCCH_Resources_1 = INT(name='maxNrofPUCCH-Resources-1', mode=MODE_VALUE)
    maxNrofPUCCH_Resources_1._val = 127
    
    #-----< maxNrofPUCCH-ResourceSets >-----#
    maxNrofPUCCH_ResourceSets = INT(name='maxNrofPUCCH-ResourceSets', mode=MODE_VALUE)
    maxNrofPUCCH_ResourceSets._val = 4
    
    #-----< maxNrofPUCCH-ResourceSets-1 >-----#
    maxNrofPUCCH_ResourceSets_1 = INT(name='maxNrofPUCCH-ResourceSets-1', mode=MODE_VALUE)
    maxNrofPUCCH_ResourceSets_1._val = 3
    
    #-----< maxNrofPUCCH-ResourcesPerSet >-----#
    maxNrofPUCCH_ResourcesPerSet = INT(name='maxNrofPUCCH-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofPUCCH_ResourcesPerSet._val = 32
    
    #-----< maxNrofPUCCH-ResourcesPerSet-1 >-----#
    maxNrofPUCCH_ResourcesPerSet_1 = INT(name='maxNrofPUCCH-ResourcesPerSet-1', mode=MODE_VALUE)
    maxNrofPUCCH_ResourcesPerSet_1._val = 31
    
    #-----< maxNrofPUCCH-P0-PerSet >-----#
    maxNrofPUCCH_P0_PerSet = INT(name='maxNrofPUCCH-P0-PerSet', mode=MODE_VALUE)
    maxNrofPUCCH_P0_PerSet._val = 8
    
    #-----< maxNrofPUCCH-PathlossReferenceRSs >-----#
    maxNrofPUCCH_PathlossReferenceRSs = INT(name='maxNrofPUCCH-PathlossReferenceRSs', mode=MODE_VALUE)
    maxNrofPUCCH_PathlossReferenceRSs._val = 4
    
    #-----< maxNrofPUCCH-PathlossReferenceRSs-1 >-----#
    maxNrofPUCCH_PathlossReferenceRSs_1 = INT(name='maxNrofPUCCH-PathlossReferenceRSs-1', mode=MODE_VALUE)
    maxNrofPUCCH_PathlossReferenceRSs_1._val = 3
    
    #-----< maxNrofP0-PUSCH-AlphaSets >-----#
    maxNrofP0_PUSCH_AlphaSets = INT(name='maxNrofP0-PUSCH-AlphaSets', mode=MODE_VALUE)
    maxNrofP0_PUSCH_AlphaSets._val = 30
    
    #-----< maxNrofP0-PUSCH-AlphaSets-1 >-----#
    maxNrofP0_PUSCH_AlphaSets_1 = INT(name='maxNrofP0-PUSCH-AlphaSets-1', mode=MODE_VALUE)
    maxNrofP0_PUSCH_AlphaSets_1._val = 29
    
    #-----< maxNrofPUSCH-PathlossReferenceRSs >-----#
    maxNrofPUSCH_PathlossReferenceRSs = INT(name='maxNrofPUSCH-PathlossReferenceRSs', mode=MODE_VALUE)
    maxNrofPUSCH_PathlossReferenceRSs._val = 4
    
    #-----< maxNrofPUSCH-PathlossReferenceRSs-1 >-----#
    maxNrofPUSCH_PathlossReferenceRSs_1 = INT(name='maxNrofPUSCH-PathlossReferenceRSs-1', mode=MODE_VALUE)
    maxNrofPUSCH_PathlossReferenceRSs_1._val = 3
    
    #-----< maxBands >-----#
    maxBands = INT(name='maxBands', mode=MODE_VALUE)
    maxBands._val = 1024
    
    #-----< maxBandsMRDC >-----#
    maxBandsMRDC = INT(name='maxBandsMRDC', mode=MODE_VALUE)
    maxBandsMRDC._val = 1280
    
    #-----< maxBandsEUTRA >-----#
    maxBandsEUTRA = INT(name='maxBandsEUTRA', mode=MODE_VALUE)
    maxBandsEUTRA._val = 256
    
    #-----< maxCellPrep >-----#
    maxCellPrep = INT(name='maxCellPrep', mode=MODE_VALUE)
    maxCellPrep._val = 32
    
    #-----< maxCellReport >-----#
    maxCellReport = INT(name='maxCellReport', mode=MODE_VALUE)
    maxCellReport._val = 8
    
    #-----< maxDRB >-----#
    maxDRB = INT(name='maxDRB', mode=MODE_VALUE)
    maxDRB._val = 29
    
    #-----< maxFreq >-----#
    maxFreq = INT(name='maxFreq', mode=MODE_VALUE)
    maxFreq._val = 8
    
    #-----< maxNrofCSI-RS >-----#
    maxNrofCSI_RS = INT(name='maxNrofCSI-RS', mode=MODE_VALUE)
    maxNrofCSI_RS._val = 64
    
    #-----< maxNrofCandidateBeams >-----#
    maxNrofCandidateBeams = INT(name='maxNrofCandidateBeams', mode=MODE_VALUE)
    maxNrofCandidateBeams._val = 16
    
    #-----< maxNrofPCIsPerSMTC >-----#
    maxNrofPCIsPerSMTC = INT(name='maxNrofPCIsPerSMTC', mode=MODE_VALUE)
    maxNrofPCIsPerSMTC._val = 64
    
    #-----< maxNrofQFIs >-----#
    maxNrofQFIs = INT(name='maxNrofQFIs', mode=MODE_VALUE)
    maxNrofQFIs._val = 64
    
    #-----< maxNrofSR-Resources >-----#
    maxNrofSR_Resources = INT(name='maxNrofSR-Resources', mode=MODE_VALUE)
    maxNrofSR_Resources._val = 8
    
    #-----< maxNrofSlotFormatsPerCombination >-----#
    maxNrofSlotFormatsPerCombination = INT(name='maxNrofSlotFormatsPerCombination', mode=MODE_VALUE)
    maxNrofSlotFormatsPerCombination._val = 256
    
    #-----< maxNrofSpatialRelationInfos >-----#
    maxNrofSpatialRelationInfos = INT(name='maxNrofSpatialRelationInfos', mode=MODE_VALUE)
    maxNrofSpatialRelationInfos._val = 8
    
    #-----< maxNrofSRS-ResourcesPerSet >-----#
    maxNrofSRS_ResourcesPerSet = INT(name='maxNrofSRS-ResourcesPerSet', mode=MODE_VALUE)
    maxNrofSRS_ResourcesPerSet._val = 16
    
    #-----< maxNrofIndexesToReport >-----#
    maxNrofIndexesToReport = INT(name='maxNrofIndexesToReport', mode=MODE_VALUE)
    maxNrofIndexesToReport._val = 32
    
    #-----< maxNrofSSBs >-----#
    maxNrofSSBs = INT(name='maxNrofSSBs', mode=MODE_VALUE)
    maxNrofSSBs._val = 64
    
    #-----< maxNrofSSBs-1 >-----#
    maxNrofSSBs_1 = INT(name='maxNrofSSBs-1', mode=MODE_VALUE)
    maxNrofSSBs_1._val = 63
    
    #-----< maxNrofS-NSSAI >-----#
    maxNrofS_NSSAI = INT(name='maxNrofS-NSSAI', mode=MODE_VALUE)
    maxNrofS_NSSAI._val = 8
    
    #-----< maxNrofTCI-StatesPDCCH >-----#
    maxNrofTCI_StatesPDCCH = INT(name='maxNrofTCI-StatesPDCCH', mode=MODE_VALUE)
    maxNrofTCI_StatesPDCCH._val = 64
    
    #-----< maxNrofTCI-States >-----#
    maxNrofTCI_States = INT(name='maxNrofTCI-States', mode=MODE_VALUE)
    maxNrofTCI_States._val = 64
    
    #-----< maxNrofTCI-States-1 >-----#
    maxNrofTCI_States_1 = INT(name='maxNrofTCI-States-1', mode=MODE_VALUE)
    maxNrofTCI_States_1._val = 63
    
    #-----< maxNrofUL-Allocations >-----#
    maxNrofUL_Allocations = INT(name='maxNrofUL-Allocations', mode=MODE_VALUE)
    maxNrofUL_Allocations._val = 16
    
    #-----< maxQFI >-----#
    maxQFI = INT(name='maxQFI', mode=MODE_VALUE)
    maxQFI._val = 63
    
    #-----< maxRA-CSIRS-Resources >-----#
    maxRA_CSIRS_Resources = INT(name='maxRA-CSIRS-Resources', mode=MODE_VALUE)
    maxRA_CSIRS_Resources._val = 96
    
    #-----< maxRA-OccasionsPerCSIRS >-----#
    maxRA_OccasionsPerCSIRS = INT(name='maxRA-OccasionsPerCSIRS', mode=MODE_VALUE)
    maxRA_OccasionsPerCSIRS._val = 64
    
    #-----< maxRA-Occasions-1 >-----#
    maxRA_Occasions_1 = INT(name='maxRA-Occasions-1', mode=MODE_VALUE)
    maxRA_Occasions_1._val = 511
    
    #-----< maxRA-SSB-Resources >-----#
    maxRA_SSB_Resources = INT(name='maxRA-SSB-Resources', mode=MODE_VALUE)
    maxRA_SSB_Resources._val = 64
    
    #-----< maxSCSs >-----#
    maxSCSs = INT(name='maxSCSs', mode=MODE_VALUE)
    maxSCSs._val = 5
    
    #-----< maxSecondaryCellGroups >-----#
    maxSecondaryCellGroups = INT(name='maxSecondaryCellGroups', mode=MODE_VALUE)
    maxSecondaryCellGroups._val = 3
    
    #-----< maxNrofServingCellsEUTRA >-----#
    maxNrofServingCellsEUTRA = INT(name='maxNrofServingCellsEUTRA', mode=MODE_VALUE)
    maxNrofServingCellsEUTRA._val = 32
    
    #-----< maxMBSFN-Allocations >-----#
    maxMBSFN_Allocations = INT(name='maxMBSFN-Allocations', mode=MODE_VALUE)
    maxMBSFN_Allocations._val = 8
    
    #-----< maxNrofMultiBands >-----#
    maxNrofMultiBands = INT(name='maxNrofMultiBands', mode=MODE_VALUE)
    maxNrofMultiBands._val = 8
    
    #-----< maxCellSFTD >-----#
    maxCellSFTD = INT(name='maxCellSFTD', mode=MODE_VALUE)
    maxCellSFTD._val = 3
    
    #-----< maxReportConfigId >-----#
    maxReportConfigId = INT(name='maxReportConfigId', mode=MODE_VALUE)
    maxReportConfigId._val = 64
    
    #-----< maxNrofSRI-PUSCH-Mappings >-----#
    maxNrofSRI_PUSCH_Mappings = INT(name='maxNrofSRI-PUSCH-Mappings', mode=MODE_VALUE)
    maxNrofSRI_PUSCH_Mappings._val = 16
    
    #-----< maxNrofSRI-PUSCH-Mappings-1 >-----#
    maxNrofSRI_PUSCH_Mappings_1 = INT(name='maxNrofSRI-PUSCH-Mappings-1', mode=MODE_VALUE)
    maxNrofSRI_PUSCH_Mappings_1._val = 15
    
    #-----< CellIdentity >-----#
    CellIdentity = BIT_STR(name='CellIdentity', mode=MODE_TYPE)
    CellIdentity._const_sz = ASN1Set(rv=[36], rr=[], ev=None, er=[])
    
    #-----< ShortMAC-I >-----#
    ShortMAC_I = BIT_STR(name='ShortMAC-I', mode=MODE_TYPE)
    ShortMAC_I._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    _all_ = [
        _BCCH_BCH_Message_message,
        BCCH_BCH_Message,
        _BCCH_BCH_MessageType_mib,
        _BCCH_BCH_MessageType_messageClassExtension,
        BCCH_BCH_MessageType,
        _BCCH_DL_SCH_Message_message,
        BCCH_DL_SCH_Message,
        __BCCH_DL_SCH_MessageType_c1_systemInformationBlockType1,
        __BCCH_DL_SCH_MessageType_c1_systemInformation,
        _BCCH_DL_SCH_MessageType_c1,
        _BCCH_DL_SCH_MessageType_messageClassExtension,
        BCCH_DL_SCH_MessageType,
        _PCCH_Message_message,
        PCCH_Message,
        __PCCH_MessageType_c1_paging,
        _PCCH_MessageType_c1,
        _PCCH_MessageType_messageClassExtension,
        PCCH_MessageType,
        _DL_CCCH_Message_message,
        DL_CCCH_Message,
        __DL_CCCH_MessageType_c1_rrcReject,
        __DL_CCCH_MessageType_c1_rrcSetup,
        __DL_CCCH_MessageType_c1_rrcReestablishmentReject,
        __DL_CCCH_MessageType_c1_spare1,
        _DL_CCCH_MessageType_c1,
        _DL_CCCH_MessageType_messageClassExtension,
        DL_CCCH_MessageType,
        _DL_DCCH_Message_message,
        DL_DCCH_Message,
        __DL_DCCH_MessageType_c1_rrcReconfiguration,
        __DL_DCCH_MessageType_c1_rrcResume,
        __DL_DCCH_MessageType_c1_rrcRelease,
        __DL_DCCH_MessageType_c1_rrcReestablishment,
        __DL_DCCH_MessageType_c1_securityModeCommand,
        __DL_DCCH_MessageType_c1_dlInformationTransfer,
        __DL_DCCH_MessageType_c1_spare10,
        __DL_DCCH_MessageType_c1_spare9,
        __DL_DCCH_MessageType_c1_spare8,
        __DL_DCCH_MessageType_c1_spare7,
        __DL_DCCH_MessageType_c1_spare6,
        __DL_DCCH_MessageType_c1_spare5,
        __DL_DCCH_MessageType_c1_spare4,
        __DL_DCCH_MessageType_c1_spare3,
        __DL_DCCH_MessageType_c1_spare2,
        __DL_DCCH_MessageType_c1_spare1,
        _DL_DCCH_MessageType_c1,
        _DL_DCCH_MessageType_messageClassExtension,
        DL_DCCH_MessageType,
        _UL_CCCH_Message_message,
        UL_CCCH_Message,
        __UL_CCCH_MessageType_c1_rrcSetupRequest,
        __UL_CCCH_MessageType_c1_rrcResumeRequest,
        __UL_CCCH_MessageType_c1_rrcReestablishmentRequest,
        __UL_CCCH_MessageType_c1_ulInformationTransfer,
        __UL_CCCH_MessageType_c1_spare12,
        __UL_CCCH_MessageType_c1_spare11,
        __UL_CCCH_MessageType_c1_spare10,
        __UL_CCCH_MessageType_c1_spare9,
        __UL_CCCH_MessageType_c1_spare8,
        __UL_CCCH_MessageType_c1_spare7,
        __UL_CCCH_MessageType_c1_spare6,
        __UL_CCCH_MessageType_c1_spare5,
        __UL_CCCH_MessageType_c1_spare4,
        __UL_CCCH_MessageType_c1_spare3,
        __UL_CCCH_MessageType_c1_spare2,
        __UL_CCCH_MessageType_c1_spare1,
        _UL_CCCH_MessageType_c1,
        _UL_CCCH_MessageType_messageClassExtension,
        UL_CCCH_MessageType,
        _UL_DCCH_Message_message,
        UL_DCCH_Message,
        __UL_DCCH_MessageType_c1_measurementReport,
        __UL_DCCH_MessageType_c1_rrcReconfigurationComplete,
        __UL_DCCH_MessageType_c1_rrcSetupComplete,
        __UL_DCCH_MessageType_c1_rrcReestablishmentComplete,
        __UL_DCCH_MessageType_c1_rrcResumeComplete,
        __UL_DCCH_MessageType_c1_securityModeComplete,
        __UL_DCCH_MessageType_c1_securityModeFailure,
        __UL_DCCH_MessageType_c1_spare9,
        __UL_DCCH_MessageType_c1_spare8,
        __UL_DCCH_MessageType_c1_spare7,
        __UL_DCCH_MessageType_c1_spare6,
        __UL_DCCH_MessageType_c1_spare5,
        __UL_DCCH_MessageType_c1_spare4,
        __UL_DCCH_MessageType_c1_spare3,
        __UL_DCCH_MessageType_c1_spare2,
        __UL_DCCH_MessageType_c1_spare1,
        _UL_DCCH_MessageType_c1,
        _UL_DCCH_MessageType_messageClassExtension,
        UL_DCCH_MessageType,
        _MIB_systemFrameNumber,
        _MIB_subCarrierSpacingCommon,
        _MIB_ssb_SubcarrierOffset,
        _MIB_dmrs_TypeA_Position,
        _MIB_pdcch_ConfigSIB1,
        _MIB_cellBarred,
        _MIB_intraFreqReselection,
        _MIB_spare,
        MIB,
        __MeasurementReport_criticalExtensions_measurementReport,
        __MeasurementReport_criticalExtensions_criticalExtensionsFuture,
        _MeasurementReport_criticalExtensions,
        MeasurementReport,
        _MeasurementReport_IEs_measResults,
        _MeasurementReport_IEs_lateNonCriticalExtension,
        _MeasurementReport_IEs_nonCriticalExtension,
        MeasurementReport_IEs,
        _DLInformationTransfer_rrc_TransactionIdentifier,
        ___DLInformationTransfer_criticalExtensions_c1_dlInformationTransfer,
        ___DLInformationTransfer_criticalExtensions_c1_spare3,
        ___DLInformationTransfer_criticalExtensions_c1_spare2,
        ___DLInformationTransfer_criticalExtensions_c1_spare1,
        __DLInformationTransfer_criticalExtensions_c1,
        __DLInformationTransfer_criticalExtensions_criticalExtensionsFuture,
        _DLInformationTransfer_criticalExtensions,
        DLInformationTransfer,
        _DLInformationTransfer_IEs_nasMessage,
        _DLInformationTransfer_IEs_lateNonCriticalExtension,
        _DLInformationTransfer_IEs_nonCriticalExtension,
        DLInformationTransfer_IEs,
        ___ULInformationTransfer_criticalExtensions_c1_ulInformationTransfer,
        ___ULInformationTransfer_criticalExtensions_c1_spare3,
        ___ULInformationTransfer_criticalExtensions_c1_spare2,
        ___ULInformationTransfer_criticalExtensions_c1_spare1,
        __ULInformationTransfer_criticalExtensions_c1,
        __ULInformationTransfer_criticalExtensions_criticalExtensionsFuture,
        _ULInformationTransfer_criticalExtensions,
        ULInformationTransfer,
        _ULInformationTransfer_IEs_nasMessage,
        _ULInformationTransfer_IEs_lateNonCriticalExtension,
        _ULInformationTransfer_IEs_nonCriticalExtension,
        ULInformationTransfer_IEs,
        _Paging_pagingRecordList,
        _Paging_lateNonCriticalExtension,
        _Paging_nonCriticalExtension,
        Paging,
        _PagingRecordList__item_,
        PagingRecordList,
        _PagingRecord_ue_Identity,
        PagingRecord,
        _PagingUE_Identity_ng_5g_s_tmsi,
        _PagingUE_Identity_i_rnti,
        PagingUE_Identity,
        _RRCReestablishment_rrc_TransactionIdentifier,
        ___RRCReestablishment_criticalExtensions_c1_rrcReestablishment,
        ___RRCReestablishment_criticalExtensions_c1_spare3,
        ___RRCReestablishment_criticalExtensions_c1_spare2,
        ___RRCReestablishment_criticalExtensions_c1_spare1,
        __RRCReestablishment_criticalExtensions_c1,
        __RRCReestablishment_criticalExtensions_criticalExtensionsFuture,
        _RRCReestablishment_criticalExtensions,
        RRCReestablishment,
        _RRCReestablishment_IEs_nextHopChainingCount,
        _RRCReestablishment_IEs_radioBearerConfig,
        __RRCReestablishment_IEs_masterCellGroup_contain,
        _RRCReestablishment_IEs_masterCellGroup,
        _RRCReestablishment_IEs_drb_ContinueROHC,
        _RRCReestablishment_IEs_lateNonCriticalExtension,
        _RRCReestablishment_IEs_nonCriticalExtension,
        RRCReestablishment_IEs,
        _RRCReestablishmentComplete_rrc_TransactionIdentifier,
        __RRCReestablishmentComplete_criticalExtensions_rrcReestablishmentComplete,
        __RRCReestablishmentComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCReestablishmentComplete_criticalExtensions,
        RRCReestablishmentComplete,
        _RRCReestablishmentComplete_IEs_lateNonCriticalExtension,
        _RRCReestablishmentComplete_IEs_nonCriticalExtension,
        RRCReestablishmentComplete_IEs,
        __RRCReestablishmentReject_criticalExtensions_rrcReestablishmentReject,
        __RRCReestablishmentReject_criticalExtensions_criticalExtensionsFuture,
        _RRCReestablishmentReject_criticalExtensions,
        RRCReestablishmentReject,
        _RRCReestablishmentReject_IEs_lateNonCriticalExtension,
        _RRCReestablishmentReject_IEs_nonCriticalExtension,
        RRCReestablishmentReject_IEs,
        __RRCReestablishmentRequest_criticalExtensions_rrcReestablishmentRequest,
        __RRCReestablishmentRequest_criticalExtensions_criticalExtensionsFuture,
        _RRCReestablishmentRequest_criticalExtensions,
        RRCReestablishmentRequest,
        _RRCReestablishmentRequest_IEs_ue_Identity,
        _RRCReestablishmentRequest_IEs_reestablishmentCause,
        _RRCReestablishmentRequest_IEs_spare,
        RRCReestablishmentRequest_IEs,
        _ReestabUE_Identity_c_RNTI,
        _ReestabUE_Identity_physCellId,
        _ReestabUE_Identity_shortMAC_I,
        ReestabUE_Identity,
        ReestablishmentCause,
        _RRCReconfiguration_rrc_TransactionIdentifier,
        __RRCReconfiguration_criticalExtensions_rrcReconfiguration,
        __RRCReconfiguration_criticalExtensions_criticalExtensionsFuture,
        _RRCReconfiguration_criticalExtensions,
        RRCReconfiguration,
        _RRCReconfiguration_IEs_radioBearerConfig,
        __RRCReconfiguration_IEs_secondaryCellGroup_contain,
        _RRCReconfiguration_IEs_secondaryCellGroup,
        _RRCReconfiguration_IEs_measConfig,
        _RRCReconfiguration_IEs_lateNonCriticalExtension,
        _RRCReconfiguration_IEs_nonCriticalExtension,
        RRCReconfiguration_IEs,
        _RRCReconfigurationComplete_rrc_TransactionIdentifier,
        __RRCReconfigurationComplete_criticalExtensions_rrcReconfigurationComplete,
        __RRCReconfigurationComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCReconfigurationComplete_criticalExtensions,
        RRCReconfigurationComplete,
        _RRCReconfigurationComplete_IEs_lateNonCriticalExtension,
        _RRCReconfigurationComplete_IEs_nonCriticalExtension,
        RRCReconfigurationComplete_IEs,
        ___RRCReject_criticalExtensions_c1_rrcReject,
        ___RRCReject_criticalExtensions_c1_spare3,
        ___RRCReject_criticalExtensions_c1_spare2,
        ___RRCReject_criticalExtensions_c1_spare1,
        __RRCReject_criticalExtensions_c1,
        __RRCReject_criticalExtensions_criticalExtensionsFuture,
        _RRCReject_criticalExtensions,
        RRCReject,
        _RRCReject_IEs_waitTime,
        _RRCReject_IEs_lateNonCriticalExtension,
        _RRCReject_IEs_nonCriticalExtension,
        RRCReject_IEs,
        RejectWaitTime,
        _RRCRelease_rrc_TransactionIdentifier,
        ___RRCRelease_criticalExtensions_c1_rrcRelease,
        ___RRCRelease_criticalExtensions_c1_spare3,
        ___RRCRelease_criticalExtensions_c1_spare2,
        ___RRCRelease_criticalExtensions_c1_spare1,
        __RRCRelease_criticalExtensions_c1,
        __RRCRelease_criticalExtensions_criticalExtensionsFuture,
        _RRCRelease_criticalExtensions,
        RRCRelease,
        _RRCRelease_IEs_redirectedCarrierInfo,
        _RRCRelease_IEs_idleModePriorities,
        _RRCRelease_IEs_suspendConfig,
        _RRCRelease_IEs_lateNonCriticalExtension,
        _RRCRelease_IEs_nonCriticalExtension,
        RRCRelease_IEs,
        _RedirectedCarrierInfo_nr,
        _RedirectedCarrierInfo_eutra,
        RedirectedCarrierInfo,
        _SuspendConfig_resumeIdentity,
        _SuspendConfig_pagingCycle,
        _SuspendConfig_ran_NotificationAreaInfo,
        _SuspendConfig_periodic_RNAU_timer,
        _SuspendConfig_nextHopChainingCount,
        SuspendConfig,
        PagingCycle,
        _IdleModePriorities_freqPriorityListEUTRA,
        _IdleModePriorities_freqPriorityListNR,
        _IdleModePriorities_t320,
        IdleModePriorities,
        _FreqPriorityListEUTRA__item_,
        FreqPriorityListEUTRA,
        _FreqPriorityListNR__item_,
        FreqPriorityListNR,
        _FreqPriorityEUTRA_carrierFreq,
        _FreqPriorityEUTRA_cellReselectionPriority,
        FreqPriorityEUTRA,
        _FreqPriorityNR_carrierFreq,
        _FreqPriorityNR_cellReselectionPriority,
        FreqPriorityNR,
        TrackingAreaCode,
        __RRCSetupRequest_criticalExtensions_rrcSetupRequest,
        __RRCSetupRequest_criticalExtensions_criticalExtensionsFuture,
        _RRCSetupRequest_criticalExtensions,
        RRCSetupRequest,
        _RRCSetupRequest_IEs_ue_Identity,
        _RRCSetupRequest_IEs_establishmentCause,
        _RRCSetupRequest_IEs_spare,
        RRCSetupRequest_IEs,
        _InitialUE_Identity_ng_5g_s_tmsi,
        _InitialUE_Identity_randomValue,
        InitialUE_Identity,
        EstablishmentCause,
        _RRCResume_rrc_TransactionIdentifier,
        ___RRCResume_criticalExtensions_c1_rrcResume,
        ___RRCResume_criticalExtensions_c1_spare3,
        ___RRCResume_criticalExtensions_c1_spare2,
        ___RRCResume_criticalExtensions_c1_spare1,
        __RRCResume_criticalExtensions_c1,
        __RRCResume_criticalExtensions_criticalExtensionsFuture,
        _RRCResume_criticalExtensions,
        RRCResume,
        _RRCResume_IEs_radioBearerConfig,
        __RRCResume_IEs_masterCellGroup_contain,
        _RRCResume_IEs_masterCellGroup,
        _RRCResume_IEs_measConfig,
        _RRCResume_IEs_drb_ContinueROHC,
        _RRCResume_IEs_lateNonCriticalExtension,
        _RRCResume_IEs_nonCriticalExtension,
        RRCResume_IEs,
        __RRCResumeRequest_criticalExtensions_rrcResumeRequest,
        __RRCResumeRequest_criticalExtensions_criticalExtensionsFuture,
        _RRCResumeRequest_criticalExtensions,
        RRCResumeRequest,
        _RRCResumeRequest_IEs_resumeIdentity,
        _RRCResumeRequest_IEs_resumeMAC_I,
        _RRCResumeRequest_IEs_resumeCause,
        _RRCResumeRequest_IEs_spare,
        RRCResumeRequest_IEs,
        ResumeCause,
        _RRCResumeComplete_rrc_TransactionIdentifier,
        __RRCResumeComplete_criticalExtensions_rrcResumeComplete,
        __RRCResumeComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCResumeComplete_criticalExtensions,
        RRCResumeComplete,
        _RRCResumeComplete_IEs_dedicatedInfoNAS,
        _RRCResumeComplete_IEs_lateNonCriticalExtension,
        _RRCResumeComplete_IEs_nonCriticalExtension,
        RRCResumeComplete_IEs,
        _RRCSetup_rrc_TransactionIdentifier,
        ___RRCSetup_criticalExtensions_c1_rrcSetup,
        ___RRCSetup_criticalExtensions_c1_spare7,
        ___RRCSetup_criticalExtensions_c1_spare6,
        ___RRCSetup_criticalExtensions_c1_spare5,
        ___RRCSetup_criticalExtensions_c1_spare4,
        ___RRCSetup_criticalExtensions_c1_spare3,
        ___RRCSetup_criticalExtensions_c1_spare2,
        ___RRCSetup_criticalExtensions_c1_spare1,
        __RRCSetup_criticalExtensions_c1,
        __RRCSetup_criticalExtensions_criticalExtensionsFuture,
        _RRCSetup_criticalExtensions,
        RRCSetup,
        _RRCSetup_IEs_radioBearerConfig,
        __RRCSetup_IEs_masterCellGroup_contain,
        _RRCSetup_IEs_masterCellGroup,
        _RRCSetup_IEs_lateNonCriticalExtension,
        _RRCSetup_IEs_nonCriticalExtension,
        RRCSetup_IEs,
        _RRCSetupComplete_rrc_TransactionIdentifier,
        ___RRCSetupComplete_criticalExtensions_c1_rrcSetupComplete,
        ___RRCSetupComplete_criticalExtensions_c1_spare3,
        ___RRCSetupComplete_criticalExtensions_c1_spare2,
        ___RRCSetupComplete_criticalExtensions_c1_spare1,
        __RRCSetupComplete_criticalExtensions_c1,
        __RRCSetupComplete_criticalExtensions_criticalExtensionsFuture,
        _RRCSetupComplete_criticalExtensions,
        RRCSetupComplete,
        _RRCSetupComplete_IEs_selectedPLMN_Identity,
        _RRCSetupComplete_IEs_registeredAMF,
        _RRCSetupComplete_IEs_guami_Type,
        __RRCSetupComplete_IEs_s_nssai_list__item_,
        _RRCSetupComplete_IEs_s_nssai_list,
        _RRCSetupComplete_IEs_dedicatedInfoNAS,
        _RRCSetupComplete_IEs_ng_5g_s_tmsi,
        _RRCSetupComplete_IEs_lateNonCriticalExtension,
        _RRCSetupComplete_IEs_nonCriticalExtension,
        RRCSetupComplete_IEs,
        _RegisteredAMF_plmn_Identity,
        _RegisteredAMF_amf_SetId,
        _RegisteredAMF_amf_Pointer,
        _RegisteredAMF_amf_Region,
        RegisteredAMF,
        _RRCSuspend_rrc_TransactionIdentifier,
        ___RRCSuspend_criticalExtensions_c1_rrcSuspend,
        ___RRCSuspend_criticalExtensions_c1_spare3,
        ___RRCSuspend_criticalExtensions_c1_spare2,
        ___RRCSuspend_criticalExtensions_c1_spare1,
        __RRCSuspend_criticalExtensions_c1,
        __RRCSuspend_criticalExtensions_criticalExtensionsFuture,
        _RRCSuspend_criticalExtensions,
        RRCSuspend,
        _RRCSuspend_IEs_resumeIdentity,
        _RRCSuspend_IEs_ran_NotificationAreaInfo,
        _RRCSuspend_IEs_periodic_RNAU_timer,
        _RRCSuspend_IEs_nextHopChainingCount,
        _RRCSuspend_IEs_redirectedCarrierInfo,
        _RRCSuspend_IEs_idleModePriorities,
        _RRCSuspend_IEs_lateNonCriticalExtension,
        _RRCSuspend_IEs_nonCriticalExtension,
        RRCSuspend_IEs,
        __RAN_NotificationAreaInfo_cellList__item_,
        _RAN_NotificationAreaInfo_cellList,
        _RAN_NotificationAreaInfo_ran_AreaConfigList,
        RAN_NotificationAreaInfo,
        _RAN_AreaConfigList__item_,
        RAN_AreaConfigList,
        _RAN_AreaConfig_trackingAreaCode,
        __RAN_AreaConfig_ran_AreaCodeList__item_,
        _RAN_AreaConfig_ran_AreaCodeList,
        RAN_AreaConfig,
        RAN_AreaCode,
        _SecurityModeCommand_rrc_TransactionIdentifier,
        ___SecurityModeCommand_criticalExtensions_c1_securityModeCommand,
        ___SecurityModeCommand_criticalExtensions_c1_spare3,
        ___SecurityModeCommand_criticalExtensions_c1_spare2,
        ___SecurityModeCommand_criticalExtensions_c1_spare1,
        __SecurityModeCommand_criticalExtensions_c1,
        __SecurityModeCommand_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeCommand_criticalExtensions,
        SecurityModeCommand,
        _SecurityModeCommand_IEs_securityConfigSMC,
        _SecurityModeCommand_IEs_lateNonCriticalExtension,
        _SecurityModeCommand_IEs_nonCriticalExtension,
        SecurityModeCommand_IEs,
        _SecurityConfigSMC_securityAlgorithmConfig,
        SecurityConfigSMC,
        _SecurityModeComplete_rrc_TransactionIdentifier,
        __SecurityModeComplete_criticalExtensions_securityModeComplete,
        __SecurityModeComplete_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeComplete_criticalExtensions,
        SecurityModeComplete,
        _SecurityModeComplete_IEs_lateNonCriticalExtension,
        _SecurityModeComplete_IEs_nonCriticalExtension,
        SecurityModeComplete_IEs,
        _SecurityModeFailure_rrc_TransactionIdentifier,
        __SecurityModeFailure_criticalExtensions_securityModeFailure,
        __SecurityModeFailure_criticalExtensions_criticalExtensionsFuture,
        _SecurityModeFailure_criticalExtensions,
        SecurityModeFailure,
        _SecurityModeFailure_IEs_lateNonCriticalExtension,
        _SecurityModeFailure_IEs_nonCriticalExtension,
        SecurityModeFailure_IEs,
        _SIB1_March_frequencyOffsetSSB,
        __SIB1_March_ssb_PositionsInBurst_inOneGroup,
        __SIB1_March_ssb_PositionsInBurst_groupPresence,
        _SIB1_March_ssb_PositionsInBurst,
        _SIB1_March_ssb_PeriodicityServingCell,
        _SIB1_March_ss_PBCH_BlockPower,
        _SIB1_March_uplinkConfigCommon,
        __SIB1_March_supplementaryUplink_uplinkConfigCommon,
        _SIB1_March_supplementaryUplink,
        _SIB1_March_tdd_UL_DL_Configuration,
        _SIB1_March_tdd_UL_DL_configurationCommon2,
        _SIB1_March_pdcch_ConfigCommon,
        _SIB1_March_pucch_ConfigCommon,
        _SIB1_March_lateNonCriticalExtension,
        _SIB1_March_nonCriticalExtension,
        SIB1_March,
        __SIB1_cellSelectionInfo_q_RxLevMin,
        __SIB1_cellSelectionInfo_q_QualMin,
        _SIB1_cellSelectionInfo,
        _SIB1_cellAccessRelatedInfo,
        _SIB1_servingCellConfigCommon,
        _SIB1_ims_EmergencySupport,
        _SIB1_eCallOverIMS_Support,
        _SIB1_lateNonCriticalExtension,
        _SIB1_nonCriticalExtension,
        SIB1,
        _CellAccessRelatedInfo_plmn_IdentityList,
        _CellAccessRelatedInfo_ranac,
        _CellAccessRelatedInfo_reservedForFutureUse,
        CellAccessRelatedInfo,
        _PLMN_IdentityInfoList__item_,
        PLMN_IdentityInfoList,
        __PLMN_IdentityInfo_plmn_IdentityList__item_,
        _PLMN_IdentityInfo_plmn_IdentityList,
        _PLMN_IdentityInfo_trackingAreaCode,
        _PLMN_IdentityInfo_cellIdentity,
        _PLMN_IdentityInfo_cellReservedForOperatorUse,
        PLMN_IdentityInfo,
        Q_QualMin,
        Q_RxLevMin,
        _ServingCellConfigCommonSIB_frequencyOffsetSSB,
        __ServingCellConfigCommonSIB_ssb_PositionsInBurst_inOneGroup,
        __ServingCellConfigCommonSIB_ssb_PositionsInBurst_groupPresence,
        _ServingCellConfigCommonSIB_ssb_PositionsInBurst,
        _ServingCellConfigCommonSIB_ssb_PeriodicityServingCell,
        _ServingCellConfigCommonSIB_ss_PBCH_BlockPower,
        _ServingCellConfigCommonSIB_uplinkConfigCommon,
        __ServingCellConfigCommonSIB_supplementaryUplink_uplinkConfigCommon,
        _ServingCellConfigCommonSIB_supplementaryUplink,
        _ServingCellConfigCommonSIB_tdd_UL_DL_Configuration,
        _ServingCellConfigCommonSIB_tdd_UL_DL_configurationCommon2,
        _ServingCellConfigCommonSIB_pdcch_ConfigCommon,
        _ServingCellConfigCommonSIB_timeAlignmentTimerCommon,
        _ServingCellConfigCommonSIB_lateNonCriticalExtension,
        _ServingCellConfigCommonSIB_nonCriticalExtension,
        ServingCellConfigCommonSIB,
        _UplinkConfigCommonSIB_frequencyInfoUL,
        _UplinkConfigCommonSIB_initialUplinkBWP,
        UplinkConfigCommonSIB,
        _BWP_UplinkCommonSIB_genericParameters,
        _BWP_UplinkCommonSIB_rach_ConfigCommon,
        _BWP_UplinkCommonSIB_pusch_ConfigCommon,
        _BWP_UplinkCommonSIB_pucch_ConfigCommon,
        BWP_UplinkCommonSIB,
        SI_Message,
        AdditionalSpectrumEmission,
        Alpha,
        AMF_RegionID,
        AMF_SetID,
        AMF_Pointer,
        ARFCN_ValueNR,
        ARFCN_ValueEUTRA,
        _BWP_locationAndBandwidth,
        _BWP_subcarrierSpacing,
        _BWP_cyclicPrefix,
        BWP,
        _BWP_Uplink_bwp_Id,
        _BWP_Uplink_bwp_Common,
        _BWP_Uplink_bwp_Dedicated,
        BWP_Uplink,
        _BWP_UplinkCommon_genericParameters,
        __BWP_UplinkCommon_rach_ConfigCommon_release,
        __BWP_UplinkCommon_rach_ConfigCommon_setup,
        _BWP_UplinkCommon_rach_ConfigCommon,
        __BWP_UplinkCommon_pusch_ConfigCommon_release,
        __BWP_UplinkCommon_pusch_ConfigCommon_setup,
        _BWP_UplinkCommon_pusch_ConfigCommon,
        __BWP_UplinkCommon_pucch_ConfigCommon_release,
        __BWP_UplinkCommon_pucch_ConfigCommon_setup,
        _BWP_UplinkCommon_pucch_ConfigCommon,
        BWP_UplinkCommon,
        __BWP_UplinkDedicated_pucch_Config_release,
        __BWP_UplinkDedicated_pucch_Config_setup,
        _BWP_UplinkDedicated_pucch_Config,
        __BWP_UplinkDedicated_pusch_Config_release,
        __BWP_UplinkDedicated_pusch_Config_setup,
        _BWP_UplinkDedicated_pusch_Config,
        __BWP_UplinkDedicated_configuredGrantConfig_release,
        __BWP_UplinkDedicated_configuredGrantConfig_setup,
        _BWP_UplinkDedicated_configuredGrantConfig,
        __BWP_UplinkDedicated_srs_Config_release,
        __BWP_UplinkDedicated_srs_Config_setup,
        _BWP_UplinkDedicated_srs_Config,
        __BWP_UplinkDedicated_beamFailureRecoveryConfig_release,
        __BWP_UplinkDedicated_beamFailureRecoveryConfig_setup,
        _BWP_UplinkDedicated_beamFailureRecoveryConfig,
        BWP_UplinkDedicated,
        _BWP_Downlink_bwp_Id,
        _BWP_Downlink_bwp_Common,
        _BWP_Downlink_bwp_Dedicated,
        BWP_Downlink,
        _BWP_DownlinkCommon_genericParameters,
        __BWP_DownlinkCommon_pdcch_ConfigCommon_release,
        __BWP_DownlinkCommon_pdcch_ConfigCommon_setup,
        _BWP_DownlinkCommon_pdcch_ConfigCommon,
        __BWP_DownlinkCommon_pdsch_ConfigCommon_release,
        __BWP_DownlinkCommon_pdsch_ConfigCommon_setup,
        _BWP_DownlinkCommon_pdsch_ConfigCommon,
        BWP_DownlinkCommon,
        __BWP_DownlinkDedicated_pdcch_Config_release,
        __BWP_DownlinkDedicated_pdcch_Config_setup,
        _BWP_DownlinkDedicated_pdcch_Config,
        __BWP_DownlinkDedicated_pdsch_Config_release,
        __BWP_DownlinkDedicated_pdsch_Config_setup,
        _BWP_DownlinkDedicated_pdsch_Config,
        __BWP_DownlinkDedicated_sps_Config_release,
        __BWP_DownlinkDedicated_sps_Config_setup,
        _BWP_DownlinkDedicated_sps_Config,
        __BWP_DownlinkDedicated_radioLinkMonitoringConfig_release,
        __BWP_DownlinkDedicated_radioLinkMonitoringConfig_setup,
        _BWP_DownlinkDedicated_radioLinkMonitoringConfig,
        BWP_DownlinkDedicated,
        BWP_Id,
        _BeamFailureRecoveryConfig_rootSequenceIndex_BFR,
        _BeamFailureRecoveryConfig_rach_ConfigBFR,
        _BeamFailureRecoveryConfig_candidateBeamThreshold,
        __BeamFailureRecoveryConfig_candidateBeamRSList__item_,
        _BeamFailureRecoveryConfig_candidateBeamRSList,
        _BeamFailureRecoveryConfig_ra_ssb_OccasionMaskIndex,
        _BeamFailureRecoveryConfig_recoveryControlResourceSetId,
        _BeamFailureRecoveryConfig_recoverySearchSpaceId,
        BeamFailureRecoveryConfig,
        _PRACH_ResourceDedicatedBFR_ssb,
        _PRACH_ResourceDedicatedBFR_csi_RS,
        PRACH_ResourceDedicatedBFR,
        _BFR_SSB_Resource_ssb,
        _BFR_SSB_Resource_ra_PreambleIndex,
        BFR_SSB_Resource,
        _BFR_CSIRS_Resource_csi_RS,
        _BFR_CSIRS_Resource_ra_PreambleIndex,
        BFR_CSIRS_Resource,
        _CellGroupConfig_cellGroupId,
        __CellGroupConfig_rlc_BearerToAddModList__item_,
        _CellGroupConfig_rlc_BearerToAddModList,
        __CellGroupConfig_rlc_BearerToReleaseList__item_,
        _CellGroupConfig_rlc_BearerToReleaseList,
        _CellGroupConfig_mac_CellGroupConfig,
        _CellGroupConfig_physicalCellGroupConfig,
        _CellGroupConfig_spCellConfig,
        __CellGroupConfig_sCellToAddModList__item_,
        _CellGroupConfig_sCellToAddModList,
        __CellGroupConfig_sCellToReleaseList__item_,
        _CellGroupConfig_sCellToReleaseList,
        CellGroupConfig,
        CellGroupId,
        _RLC_Bearer_Config_logicalChannelIdentity,
        __RLC_Bearer_Config_servedRadioBearer_srb_Identity,
        __RLC_Bearer_Config_servedRadioBearer_drb_Identity,
        _RLC_Bearer_Config_servedRadioBearer,
        _RLC_Bearer_Config_reestablishRLC,
        _RLC_Bearer_Config_rlc_Config,
        _RLC_Bearer_Config_mac_LogicalChannelConfig,
        RLC_Bearer_Config,
        LogicalChannelIdentity,
        _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUCCH,
        _PhysicalCellGroupConfig_harq_ACK_SpatialBundlingPUSCH,
        _PhysicalCellGroupConfig_p_NR,
        _PhysicalCellGroupConfig_pdsch_HARQ_ACK_Codebook,
        _PhysicalCellGroupConfig_tpc_SRS_RNTI,
        _PhysicalCellGroupConfig_tpc_PUCCH_RNTI,
        _PhysicalCellGroupConfig_tpc_PUSCH_RNTI,
        PhysicalCellGroupConfig,
        _SpCellConfig_servCellIndex,
        _SpCellConfig_reconfigurationWithSync,
        __SpCellConfig_rlf_TimersAndConstants_release,
        __SpCellConfig_rlf_TimersAndConstants_setup,
        _SpCellConfig_rlf_TimersAndConstants,
        _SpCellConfig_rlmInSyncOutOfSyncThreshold,
        _SpCellConfig_spCellConfigDedicated,
        SpCellConfig,
        _ReconfigurationWithSync_spCellConfigCommon,
        _ReconfigurationWithSync_newUE_Identity,
        _ReconfigurationWithSync_t304,
        __ReconfigurationWithSync_rach_ConfigDedicated_uplink,
        __ReconfigurationWithSync_rach_ConfigDedicated_supplementaryUplink,
        _ReconfigurationWithSync_rach_ConfigDedicated,
        ReconfigurationWithSync,
        _SCellConfig_sCellIndex,
        _SCellConfig_sCellConfigCommon,
        _SCellConfig_sCellConfigDedicated,
        SCellConfig,
        CellReselectionPriority,
        _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two_twoTX_CodebookSubsetRestriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_two,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_one_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_two_two_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_one_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_three_two_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_one_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_two_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_one_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_three_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_six_two_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_twelve_one_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_four_four_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_eight_two_TypeI_SinglePanel_Restriction,
        ________CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2_sixteen_one_TypeI_SinglePanel_Restriction,
        _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_n1_n2,
        _______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo_typeI_SinglePanel_codebookSubsetRestriction_i2,
        ______CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts_moreThanTwo,
        _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_nrOfAntennaPorts,
        _____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel_typeI_SinglePanel_ri_Restriction,
        ____CodebookConfig_codebookType_type1_subType_typeI_SinglePanel,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_one_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_one_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_one_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_two_two_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_eight_one_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_four_one_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_two_four_two_TypeI_MultiPanel_Restriction,
        ______CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2_four_two_two_TypeI_MultiPanel_Restriction,
        _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ng_n1_n2,
        _____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel_ri_Restriction,
        ____CodebookConfig_codebookType_type1_subType_typeI_MultiPanel,
        ___CodebookConfig_codebookType_type1_subType,
        ___CodebookConfig_codebookType_type1_codebookMode,
        __CodebookConfig_codebookType_type1,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_one,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_two_two,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_one,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_three_two,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_one,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_two,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_one,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_three,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_six_two,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_twelve_one,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_four_four,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_eight_two,
        ______CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction_sixteen_one,
        _____CodebookConfig_codebookType_type2_subType_typeII_n1_n2_codebookSubsetRestriction,
        _____CodebookConfig_codebookType_type2_subType_typeII_typeII_RI_Restriction,
        ____CodebookConfig_codebookType_type2_subType_typeII,
        _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_portSelectionSamplingSize,
        _____CodebookConfig_codebookType_type2_subType_typeII_PortSelection_typeII_PortSelectionRI_Restriction,
        ____CodebookConfig_codebookType_type2_subType_typeII_PortSelection,
        ___CodebookConfig_codebookType_type2_subType,
        ___CodebookConfig_codebookType_type2_phaseAlphabetSize,
        ___CodebookConfig_codebookType_type2_subbandAmplitude,
        ___CodebookConfig_codebookType_type2_numberOfBeams,
        __CodebookConfig_codebookType_type2,
        _CodebookConfig_codebookType,
        CodebookConfig,
        _ConfiguredGrantConfig_frequencyHopping,
        _ConfiguredGrantConfig_cg_DMRS_Configuration,
        _ConfiguredGrantConfig_mcs_Table,
        _ConfiguredGrantConfig_mcs_TableTransformPrecoder,
        __ConfiguredGrantConfig_uci_OnPUSCH_release,
        __ConfiguredGrantConfig_uci_OnPUSCH_setup,
        _ConfiguredGrantConfig_uci_OnPUSCH,
        _ConfiguredGrantConfig_resourceAllocation,
        _ConfiguredGrantConfig_rbg_Size,
        _ConfiguredGrantConfig_powerControlLoopToUse,
        _ConfiguredGrantConfig_p0_PUSCH_Alpha,
        _ConfiguredGrantConfig_transformPrecoder,
        _ConfiguredGrantConfig_nrofHARQ_Processes,
        _ConfiguredGrantConfig_repK,
        _ConfiguredGrantConfig_repK_RV,
        _ConfiguredGrantConfig_periodicity,
        _ConfiguredGrantConfig_configuredGrantTimer,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainOffset,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_timeDomainAllocation,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyDomainAllocation,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_antennaPort,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_dmrs_SeqInitialization,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_precodingAndNumberOfLayers,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_srs_ResourceIndicator,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_mcsAndTBS,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_frequencyHoppingOffset,
        __ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant_pathlossReferenceIndex,
        _ConfiguredGrantConfig_rrc_ConfiguredUplinkGrant,
        ConfiguredGrantConfig,
        __CG_UCI_OnPUSCH_dynamic__item_,
        _CG_UCI_OnPUSCH_dynamic,
        _CG_UCI_OnPUSCH_semiStatic,
        CG_UCI_OnPUSCH,
        _ControlResourceSet_controlResourceSetId,
        _ControlResourceSet_frequencyDomainResources,
        _ControlResourceSet_duration,
        ___ControlResourceSet_cce_REG_MappingType_interleaved_reg_BundleSize,
        ___ControlResourceSet_cce_REG_MappingType_interleaved_interleaverSize,
        ___ControlResourceSet_cce_REG_MappingType_interleaved_shiftIndex,
        __ControlResourceSet_cce_REG_MappingType_interleaved,
        __ControlResourceSet_cce_REG_MappingType_nonInterleaved,
        _ControlResourceSet_cce_REG_MappingType,
        _ControlResourceSet_precoderGranularity,
        __ControlResourceSet_tci_StatesPDCCH__item_,
        _ControlResourceSet_tci_StatesPDCCH,
        _ControlResourceSet_tci_PresentInDCI,
        _ControlResourceSet_pdcch_DMRS_ScramblingID,
        ControlResourceSet,
        ControlResourceSetId,
        ___CrossCarrierSchedulingConfig_schedulingCellInfo_own_cif_Presence,
        __CrossCarrierSchedulingConfig_schedulingCellInfo_own,
        ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_schedulingCellId,
        ___CrossCarrierSchedulingConfig_schedulingCellInfo_other_cif_InSchedulingCell,
        __CrossCarrierSchedulingConfig_schedulingCellInfo_other,
        _CrossCarrierSchedulingConfig_schedulingCellInfo,
        CrossCarrierSchedulingConfig,
        _CSI_AperiodicTriggerStateList__item_,
        CSI_AperiodicTriggerStateList,
        __CSI_AperiodicTriggerState_associatedReportConfigInfoList__item_,
        _CSI_AperiodicTriggerState_associatedReportConfigInfoList,
        CSI_AperiodicTriggerState,
        _CSI_AssociatedReportConfigInfo_reportConfigId,
        ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_resourceSet,
        ____CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info__item_,
        ___CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS_qcl_info,
        __CSI_AssociatedReportConfigInfo_resourcesForChannel_nzp_CSI_RS,
        __CSI_AssociatedReportConfigInfo_resourcesForChannel_csi_SSB_ResourceSet,
        _CSI_AssociatedReportConfigInfo_resourcesForChannel,
        _CSI_AssociatedReportConfigInfo_csi_IM_ResourcesforInteference,
        _CSI_AssociatedReportConfigInfo_nzp_CSI_RS_ResourcesforInterference,
        CSI_AssociatedReportConfigInfo,
        _CSI_FrequencyOccupation_startingRB,
        _CSI_FrequencyOccupation_nrofRBs,
        CSI_FrequencyOccupation,
        _CSI_IM_Resource_csi_IM_ResourceId,
        ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_subcarrierLocation_p0,
        ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0_symbolLocation_p0,
        __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern0,
        ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_subcarrierLocation_p1,
        ___CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1_symbolLocation_p1,
        __CSI_IM_Resource_csi_IM_ResourceElementPattern_pattern1,
        _CSI_IM_Resource_csi_IM_ResourceElementPattern,
        _CSI_IM_Resource_freqBand,
        _CSI_IM_Resource_periodicityAndOffset,
        CSI_IM_Resource,
        CSI_IM_ResourceId,
        _CSI_IM_ResourceSet_csi_IM_ResourceSetId,
        __CSI_IM_ResourceSet_csi_IM_Resources__item_,
        _CSI_IM_ResourceSet_csi_IM_Resources,
        CSI_IM_ResourceSet,
        CSI_IM_ResourceSetId,
        __CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList__item_,
        _CSI_MeasConfig_nzp_CSI_RS_ResourceToAddModList,
        __CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList__item_,
        _CSI_MeasConfig_nzp_CSI_RS_ResourceToReleaseList,
        __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList__item_,
        _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToAddModList,
        __CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList__item_,
        _CSI_MeasConfig_nzp_CSI_RS_ResourceSetToReleaseList,
        __CSI_MeasConfig_csi_IM_ResourceToAddModList__item_,
        _CSI_MeasConfig_csi_IM_ResourceToAddModList,
        __CSI_MeasConfig_csi_IM_ResourceToReleaseList__item_,
        _CSI_MeasConfig_csi_IM_ResourceToReleaseList,
        __CSI_MeasConfig_csi_IM_ResourceSetToAddModList__item_,
        _CSI_MeasConfig_csi_IM_ResourceSetToAddModList,
        __CSI_MeasConfig_csi_IM_ResourceSetToReleaseList__item_,
        _CSI_MeasConfig_csi_IM_ResourceSetToReleaseList,
        __CSI_MeasConfig_csi_SSB_ResourceSetToAddModList__item_,
        _CSI_MeasConfig_csi_SSB_ResourceSetToAddModList,
        __CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList__item_,
        _CSI_MeasConfig_csi_SSB_ResourceSetToAddReleaseList,
        __CSI_MeasConfig_csi_ResourceConfigToAddModList__item_,
        _CSI_MeasConfig_csi_ResourceConfigToAddModList,
        __CSI_MeasConfig_csi_ResourceConfigToReleaseList__item_,
        _CSI_MeasConfig_csi_ResourceConfigToReleaseList,
        __CSI_MeasConfig_csi_ReportConfigToAddModList__item_,
        _CSI_MeasConfig_csi_ReportConfigToAddModList,
        __CSI_MeasConfig_csi_ReportConfigToReleaseList__item_,
        _CSI_MeasConfig_csi_ReportConfigToReleaseList,
        _CSI_MeasConfig_reportTriggerSize,
        __CSI_MeasConfig_aperiodicTriggerStateList_release,
        __CSI_MeasConfig_aperiodicTriggerStateList_setup,
        _CSI_MeasConfig_aperiodicTriggerStateList,
        __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_release,
        __CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList_setup,
        _CSI_MeasConfig_semiPersistentOnPUSCH_TriggerStateList,
        CSI_MeasConfig,
        maxNrofNZP_CSI_RS_ResourceSets,
        maxNrofNZP_CSI_RS_ResourceSets_1,
        maxNrofCSI_SSB_ResourceSets,
        maxNrofCSI_SSB_ResourceSets_1,
        maxNrofCSI_IM_ResourceSets,
        maxNrofCSI_IM_ResourceSets_1,
        _CSI_ReportConfig_reportConfigId,
        _CSI_ReportConfig_carrier,
        _CSI_ReportConfig_resourcesForChannelMeasurement,
        _CSI_ReportConfig_csi_IM_ResourcesForInterference,
        _CSI_ReportConfig_nzp_CSI_RS_ResourcesForInterference,
        ___CSI_ReportConfig_reportConfigType_periodic_reportSlotConfig,
        ____CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList__item_,
        ___CSI_ReportConfig_reportConfigType_periodic_pucch_CSI_ResourceList,
        __CSI_ReportConfig_reportConfigType_periodic,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_reportSlotConfig,
        ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList__item_,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH_pucch_CSI_ResourceList,
        __CSI_ReportConfig_reportConfigType_semiPersistentOnPUCCH,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotConfig,
        ____CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList__item_,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_reportSlotOffsetList,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_csi_RNTI,
        ___CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH_p0alpha,
        __CSI_ReportConfig_reportConfigType_semiPersistentOnPUSCH,
        ____CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList__item_,
        ___CSI_ReportConfig_reportConfigType_aperiodic_reportSlotOffsetList,
        __CSI_ReportConfig_reportConfigType_aperiodic,
        _CSI_ReportConfig_reportConfigType,
        __CSI_ReportConfig_reportQuantity_none,
        __CSI_ReportConfig_reportQuantity_cri_RI_PMI_CQI,
        __CSI_ReportConfig_reportQuantity_cri_RI_i1,
        ___CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI_pdsch_BundleSizeForCSI,
        __CSI_ReportConfig_reportQuantity_cri_RI_i1_CQI,
        __CSI_ReportConfig_reportQuantity_cri_RI_CQI,
        __CSI_ReportConfig_reportQuantity_cri_RSRP,
        __CSI_ReportConfig_reportQuantity_ssb_Index_RSRP,
        __CSI_ReportConfig_reportQuantity_cri_RI_LI_PMI_CQI,
        _CSI_ReportConfig_reportQuantity,
        __CSI_ReportConfig_reportFreqConfiguration_cqi_FormatIndicator,
        __CSI_ReportConfig_reportFreqConfiguration_pmi_FormatIndicator,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands3,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands4,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands5,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands6,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands7,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands8,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands9,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands10,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands11,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands12,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands13,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands14,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands15,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands16,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands17,
        ___CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand_subbands18,
        __CSI_ReportConfig_reportFreqConfiguration_csi_ReportingBand,
        _CSI_ReportConfig_reportFreqConfiguration,
        _CSI_ReportConfig_timeRestrictionForChannelMeasurements,
        _CSI_ReportConfig_timeRestrictionForInterferenceMeasurements,
        _CSI_ReportConfig_codebookConfig,
        _CSI_ReportConfig_nrofCQIsPerReport,
        __CSI_ReportConfig_groupBasedBeamReporting_enabled,
        ___CSI_ReportConfig_groupBasedBeamReporting_disabled_nrofReportedRS,
        __CSI_ReportConfig_groupBasedBeamReporting_disabled,
        _CSI_ReportConfig_groupBasedBeamReporting,
        _CSI_ReportConfig_cqi_Table,
        _CSI_ReportConfig_subbandSize,
        _CSI_ReportConfig_bler_Target,
        __CSI_ReportConfig_non_PMI_PortIndication__item_,
        _CSI_ReportConfig_non_PMI_PortIndication,
        CSI_ReportConfig,
        _CSI_ReportPeriodicityAndOffset_slots4,
        _CSI_ReportPeriodicityAndOffset_slots5,
        _CSI_ReportPeriodicityAndOffset_slots8,
        _CSI_ReportPeriodicityAndOffset_slots10,
        _CSI_ReportPeriodicityAndOffset_slots16,
        _CSI_ReportPeriodicityAndOffset_slots20,
        _CSI_ReportPeriodicityAndOffset_slots40,
        _CSI_ReportPeriodicityAndOffset_slots80,
        _CSI_ReportPeriodicityAndOffset_slots160,
        _CSI_ReportPeriodicityAndOffset_slots320,
        CSI_ReportPeriodicityAndOffset,
        _PUCCH_CSI_Resource_uplinkBandwidthPartId,
        _PUCCH_CSI_Resource_pucch_Resource,
        PUCCH_CSI_Resource,
        __PortIndexFor8Ranks_portIndex8_rank1_8,
        ___PortIndexFor8Ranks_portIndex8_rank2_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank2_8,
        ___PortIndexFor8Ranks_portIndex8_rank3_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank3_8,
        ___PortIndexFor8Ranks_portIndex8_rank4_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank4_8,
        ___PortIndexFor8Ranks_portIndex8_rank5_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank5_8,
        ___PortIndexFor8Ranks_portIndex8_rank6_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank6_8,
        ___PortIndexFor8Ranks_portIndex8_rank7_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank7_8,
        ___PortIndexFor8Ranks_portIndex8_rank8_8__item_,
        __PortIndexFor8Ranks_portIndex8_rank8_8,
        _PortIndexFor8Ranks_portIndex8,
        __PortIndexFor8Ranks_portIndex4_rank1_4,
        ___PortIndexFor8Ranks_portIndex4_rank2_4__item_,
        __PortIndexFor8Ranks_portIndex4_rank2_4,
        ___PortIndexFor8Ranks_portIndex4_rank3_4__item_,
        __PortIndexFor8Ranks_portIndex4_rank3_4,
        ___PortIndexFor8Ranks_portIndex4_rank4_4__item_,
        __PortIndexFor8Ranks_portIndex4_rank4_4,
        _PortIndexFor8Ranks_portIndex4,
        __PortIndexFor8Ranks_portIndex2_rank1_2,
        ___PortIndexFor8Ranks_portIndex2_rank2_2__item_,
        __PortIndexFor8Ranks_portIndex2_rank2_2,
        _PortIndexFor8Ranks_portIndex2,
        _PortIndexFor8Ranks_portIndex1,
        PortIndexFor8Ranks,
        PortIndex8,
        PortIndex4,
        PortIndex2,
        maxNrofNZP_CSI_RS_ResourcesPerConfig,
        CSI_ReportConfigId,
        _CSI_ResourceConfig_csi_ResourceConfigId,
        ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList__item_,
        ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_nzp_CSI_RS_ResourceSetList,
        ____CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList__item_,
        ___CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB_csi_SSB_ResourceSetList,
        __CSI_ResourceConfig_csi_RS_ResourceSetList_nzp_CSI_RS_SSB,
        ___CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList__item_,
        __CSI_ResourceConfig_csi_RS_ResourceSetList_csi_IM_ResourceSetList,
        _CSI_ResourceConfig_csi_RS_ResourceSetList,
        _CSI_ResourceConfig_bwp_Id,
        _CSI_ResourceConfig_resourceType,
        CSI_ResourceConfig,
        CSI_ResourceConfigId,
        _CSI_ResourcePeriodicityAndOffset_slots4,
        _CSI_ResourcePeriodicityAndOffset_slots5,
        _CSI_ResourcePeriodicityAndOffset_slots8,
        _CSI_ResourcePeriodicityAndOffset_slots10,
        _CSI_ResourcePeriodicityAndOffset_slots16,
        _CSI_ResourcePeriodicityAndOffset_slots20,
        _CSI_ResourcePeriodicityAndOffset_slots32,
        _CSI_ResourcePeriodicityAndOffset_slots40,
        _CSI_ResourcePeriodicityAndOffset_slots64,
        _CSI_ResourcePeriodicityAndOffset_slots80,
        _CSI_ResourcePeriodicityAndOffset_slots160,
        _CSI_ResourcePeriodicityAndOffset_slots320,
        _CSI_ResourcePeriodicityAndOffset_slots640,
        CSI_ResourcePeriodicityAndOffset,
        __CSI_RS_ResourceMapping_frequencyDomainAllocation_row1,
        __CSI_RS_ResourceMapping_frequencyDomainAllocation_row2,
        __CSI_RS_ResourceMapping_frequencyDomainAllocation_row4,
        __CSI_RS_ResourceMapping_frequencyDomainAllocation_other,
        _CSI_RS_ResourceMapping_frequencyDomainAllocation,
        _CSI_RS_ResourceMapping_nrofPorts,
        _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain,
        _CSI_RS_ResourceMapping_firstOFDMSymbolInTimeDomain2,
        _CSI_RS_ResourceMapping_cdm_Type,
        __CSI_RS_ResourceMapping_density_dot5,
        __CSI_RS_ResourceMapping_density_one,
        __CSI_RS_ResourceMapping_density_three,
        __CSI_RS_ResourceMapping_density_spare,
        _CSI_RS_ResourceMapping_density,
        _CSI_RS_ResourceMapping_freqBand,
        CSI_RS_ResourceMapping,
        _CSI_SemiPersistentOnPUSCH_TriggerStateList__item_,
        CSI_SemiPersistentOnPUSCH_TriggerStateList,
        _CSI_SemiPersistentOnPUSCH_TriggerState_associatedReportConfigInfo,
        CSI_SemiPersistentOnPUSCH_TriggerState,
        maxNrOfSemiPersistentPUSCH_Triggers,
        CSI_SSB_ResourceSetId,
        _CSI_SSB_ResourceSet_csi_SSB_ResourceSetId,
        __CSI_SSB_ResourceSet_csi_SSB_ResourceList__item_,
        _CSI_SSB_ResourceSet_csi_SSB_ResourceList,
        CSI_SSB_ResourceSet,
        DedicatedInfoNAS,
        _DMRS_DownlinkConfig_dmrs_Type,
        _DMRS_DownlinkConfig_dmrs_AdditionalPosition,
        _DMRS_DownlinkConfig_dmrs_group1,
        _DMRS_DownlinkConfig_dmrs_group2,
        _DMRS_DownlinkConfig_maxLength,
        _DMRS_DownlinkConfig_scramblingID0,
        _DMRS_DownlinkConfig_scramblingID1,
        __DMRS_DownlinkConfig_phaseTrackingRS_release,
        __DMRS_DownlinkConfig_phaseTrackingRS_setup,
        _DMRS_DownlinkConfig_phaseTrackingRS,
        DMRS_DownlinkConfig,
        _DMRS_UplinkConfig_dmrs_Type,
        _DMRS_UplinkConfig_dmrs_AdditionalPosition,
        __DMRS_UplinkConfig_phaseTrackingRS_release,
        __DMRS_UplinkConfig_phaseTrackingRS_setup,
        _DMRS_UplinkConfig_phaseTrackingRS,
        _DMRS_UplinkConfig_maxLength,
        ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID0,
        ___DMRS_UplinkConfig_transformPrecoding_disabled_scramblingID1,
        __DMRS_UplinkConfig_transformPrecoding_disabled,
        ___DMRS_UplinkConfig_transformPrecoding_enabled_nPUSCH_Identity,
        ___DMRS_UplinkConfig_transformPrecoding_enabled_disableSequenceGroupHopping,
        ___DMRS_UplinkConfig_transformPrecoding_enabled_sequenceHoppingEnabled,
        __DMRS_UplinkConfig_transformPrecoding_enabled,
        _DMRS_UplinkConfig_transformPrecoding,
        DMRS_UplinkConfig,
        _DownlinkPreemption_int_RNTI,
        _DownlinkPreemption_timeFrequencySet,
        _DownlinkPreemption_dci_PayloadSize,
        __DownlinkPreemption_int_ConfigurationPerServingCell__item_,
        _DownlinkPreemption_int_ConfigurationPerServingCell,
        DownlinkPreemption,
        _INT_ConfigurationPerServingCell_servingCellId,
        _INT_ConfigurationPerServingCell_positionInDCI,
        INT_ConfigurationPerServingCell,
        DRB_Identity,
        _EUTRA_MBSFN_SubframeConfigList__item_,
        EUTRA_MBSFN_SubframeConfigList,
        _EUTRA_MBSFN_SubframeConfig_radioframeAllocationPeriod,
        _EUTRA_MBSFN_SubframeConfig_radioframeAllocationOffset,
        __EUTRA_MBSFN_SubframeConfig_subframeAllocation_oneFrame,
        __EUTRA_MBSFN_SubframeConfig_subframeAllocation_fourFrames,
        _EUTRA_MBSFN_SubframeConfig_subframeAllocation,
        __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_oneFrame_v1430,
        __EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430_fourFrames_v1430,
        _EUTRA_MBSFN_SubframeConfig_subframeAllocation_v1430,
        EUTRA_MBSFN_SubframeConfig,
        FilterCoefficient,
        FreqBandIndicatorNR,
        _FrequencyInfoDL_absoluteFrequencySSB,
        _FrequencyInfoDL_ssb_SubcarrierOffset,
        _FrequencyInfoDL_frequencyBandList,
        _FrequencyInfoDL_absoluteFrequencyPointA,
        __FrequencyInfoDL_scs_SpecificCarrierList__item_,
        _FrequencyInfoDL_scs_SpecificCarrierList,
        FrequencyInfoDL,
        _FrequencyInfoUL_frequencyBandList,
        _FrequencyInfoUL_absoluteFrequencyPointA,
        __FrequencyInfoUL_scs_SpecificCarriers__item_,
        _FrequencyInfoUL_scs_SpecificCarriers,
        _FrequencyInfoUL_additionalSpectrumEmission,
        _FrequencyInfoUL_p_Max,
        _FrequencyInfoUL_frequencyShift7p5khz,
        FrequencyInfoUL,
        GSCN_ValueNR,
        Hysteresis,
        I_RNTI_Value,
        __LogicalChannelConfig_ul_SpecificParameters_priority,
        __LogicalChannelConfig_ul_SpecificParameters_prioritisedBitRate,
        __LogicalChannelConfig_ul_SpecificParameters_bucketSizeDuration,
        ___LogicalChannelConfig_ul_SpecificParameters_allowedServingCells__item_,
        __LogicalChannelConfig_ul_SpecificParameters_allowedServingCells,
        ___LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List__item_,
        __LogicalChannelConfig_ul_SpecificParameters_allowedSCS_List,
        __LogicalChannelConfig_ul_SpecificParameters_maxPUSCH_Duration,
        __LogicalChannelConfig_ul_SpecificParameters_configuredGrantType1Allowed,
        __LogicalChannelConfig_ul_SpecificParameters_logicalChannelGroup,
        __LogicalChannelConfig_ul_SpecificParameters_schedulingRequestID,
        __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_Mask,
        __LogicalChannelConfig_ul_SpecificParameters_logicalChannelSR_DelayTimerApplied,
        _LogicalChannelConfig_ul_SpecificParameters,
        LogicalChannelConfig,
        __MAC_CellGroupConfig_drx_Config_release,
        __MAC_CellGroupConfig_drx_Config_setup,
        _MAC_CellGroupConfig_drx_Config,
        _MAC_CellGroupConfig_schedulingRequestConfig,
        _MAC_CellGroupConfig_bsr_Config,
        _MAC_CellGroupConfig_tag_Config,
        __MAC_CellGroupConfig_phr_Config_release,
        __MAC_CellGroupConfig_phr_Config_setup,
        _MAC_CellGroupConfig_phr_Config,
        _MAC_CellGroupConfig_skipUplinkTxDynamic,
        __MAC_CellGroupConfig_cs_RNTI_release,
        __MAC_CellGroupConfig_cs_RNTI_setup,
        _MAC_CellGroupConfig_cs_RNTI,
        MAC_CellGroupConfig,
        __DRX_Config_drx_onDurationTimer_subMilliSeconds,
        __DRX_Config_drx_onDurationTimer_milliSeconds,
        _DRX_Config_drx_onDurationTimer,
        _DRX_Config_drx_InactivityTimer,
        _DRX_Config_drx_HARQ_RTT_TimerDL,
        _DRX_Config_drx_HARQ_RTT_TimerUL,
        _DRX_Config_drx_RetransmissionTimerDL,
        _DRX_Config_drx_RetransmissionTimerUL,
        __DRX_Config_drx_LongCycleStartOffset_ms10,
        __DRX_Config_drx_LongCycleStartOffset_ms20,
        __DRX_Config_drx_LongCycleStartOffset_ms32,
        __DRX_Config_drx_LongCycleStartOffset_ms40,
        __DRX_Config_drx_LongCycleStartOffset_ms60,
        __DRX_Config_drx_LongCycleStartOffset_ms64,
        __DRX_Config_drx_LongCycleStartOffset_ms70,
        __DRX_Config_drx_LongCycleStartOffset_ms80,
        __DRX_Config_drx_LongCycleStartOffset_ms128,
        __DRX_Config_drx_LongCycleStartOffset_ms160,
        __DRX_Config_drx_LongCycleStartOffset_ms256,
        __DRX_Config_drx_LongCycleStartOffset_ms320,
        __DRX_Config_drx_LongCycleStartOffset_ms512,
        __DRX_Config_drx_LongCycleStartOffset_ms640,
        __DRX_Config_drx_LongCycleStartOffset_ms1024,
        __DRX_Config_drx_LongCycleStartOffset_ms1280,
        __DRX_Config_drx_LongCycleStartOffset_ms2048,
        __DRX_Config_drx_LongCycleStartOffset_ms2560,
        __DRX_Config_drx_LongCycleStartOffset_ms5120,
        __DRX_Config_drx_LongCycleStartOffset_ms10240,
        _DRX_Config_drx_LongCycleStartOffset,
        __DRX_Config_shortDRX_drx_ShortCycle,
        __DRX_Config_shortDRX_drx_ShortCycleTimer,
        _DRX_Config_shortDRX,
        _DRX_Config_drx_SlotOffset,
        DRX_Config,
        _PHR_Config_phr_PeriodicTimer,
        _PHR_Config_phr_ProhibitTimer,
        _PHR_Config_phr_Tx_PowerFactorChange,
        _PHR_Config_multiplePHR,
        _PHR_Config_phr_Type2PCell,
        _PHR_Config_phr_Type2OtherCell,
        _PHR_Config_phr_ModeOtherCG,
        PHR_Config,
        __TAG_Config_tag_ToReleaseList__item_,
        _TAG_Config_tag_ToReleaseList,
        __TAG_Config_tag_ToAddModList__item_,
        _TAG_Config_tag_ToAddModList,
        TAG_Config,
        _TAG_ToAddMod_tag_Id,
        _TAG_ToAddMod_timeAlignmentTimer,
        TAG_ToAddMod,
        TAG_Id,
        TimeAlignmentTimer,
        _BSR_Config_periodicBSR_Timer,
        _BSR_Config_retxBSR_Timer,
        _BSR_Config_logicalChannelSR_DelayTimer,
        BSR_Config,
        _MeasConfig_measObjectToRemoveList,
        _MeasConfig_measObjectToAddModList,
        _MeasConfig_reportConfigToRemoveList,
        _MeasConfig_reportConfigToAddModList,
        _MeasConfig_measIdToRemoveList,
        _MeasConfig_measIdToAddModList,
        __MeasConfig_s_MeasureConfig_ssb_RSRP,
        __MeasConfig_s_MeasureConfig_csi_RSRP,
        _MeasConfig_s_MeasureConfig,
        _MeasConfig_quantityConfig,
        _MeasConfig_measGapConfig,
        MeasConfig,
        _MeasObjectToRemoveList__item_,
        MeasObjectToRemoveList,
        _MeasIdToRemoveList__item_,
        MeasIdToRemoveList,
        _ReportConfigToRemoveList__item_,
        ReportConfigToRemoveList,
        __MeasGapConfig_gapFR2_release,
        __MeasGapConfig_gapFR2_setup,
        _MeasGapConfig_gapFR2,
        MeasGapConfig,
        _GapConfig_gapOffset,
        _GapConfig_mgl,
        _GapConfig_mgrp,
        _GapConfig_mgta,
        GapConfig,
        MeasId,
        _MeasIdToAddModList__item_,
        MeasIdToAddModList,
        _MeasIdToAddMod_measId,
        _MeasIdToAddMod_measObjectId,
        _MeasIdToAddMod_reportConfigId,
        MeasIdToAddMod,
        MeasObjectId,
        _MeasObjectNR_ssbFrequency,
        _MeasObjectNR_refFreqCSI_RS,
        _MeasObjectNR_referenceSignalConfig,
        _MeasObjectNR_absThreshSS_BlocksConsolidation,
        _MeasObjectNR_absThreshCSI_RS_Consolidation,
        _MeasObjectNR_nrofSS_BlocksToAverage,
        _MeasObjectNR_nrofCSI_RS_ResourcesToAverage,
        _MeasObjectNR_quantityConfigIndex,
        _MeasObjectNR_offsetFreq,
        _MeasObjectNR_cellsToRemoveList,
        _MeasObjectNR_cellsToAddModList,
        _MeasObjectNR_blackCellsToRemoveList,
        _MeasObjectNR_blackCellsToAddModList,
        _MeasObjectNR_whiteCellsToRemoveList,
        _MeasObjectNR_whiteCellsToAddModList,
        MeasObjectNR,
        _ReferenceSignalConfig_ssb_ConfigMobility,
        __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_release,
        __ReferenceSignalConfig_csi_rs_ResourceConfigMobility_setup,
        _ReferenceSignalConfig_csi_rs_ResourceConfigMobility,
        ReferenceSignalConfig,
        _SSB_ConfigMobility_subcarrierSpacing,
        __SSB_ConfigMobility_ssb_ToMeasure_release,
        __SSB_ConfigMobility_ssb_ToMeasure_setup,
        _SSB_ConfigMobility_ssb_ToMeasure,
        _SSB_ConfigMobility_useServingCellTimingForSync,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf5,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf10,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf20,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf40,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf80,
        ___SSB_ConfigMobility_smtc1_periodicityAndOffset_sf160,
        __SSB_ConfigMobility_smtc1_periodicityAndOffset,
        __SSB_ConfigMobility_smtc1_duration,
        _SSB_ConfigMobility_smtc1,
        ___SSB_ConfigMobility_smtc2_pci_List__item_,
        __SSB_ConfigMobility_smtc2_pci_List,
        __SSB_ConfigMobility_smtc2_periodicity,
        _SSB_ConfigMobility_smtc2,
        ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz15,
        ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz30,
        ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz60,
        ___SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots_kHz120,
        __SSB_ConfigMobility_ss_RSSI_Measurement_measurementSlots,
        __SSB_ConfigMobility_ss_RSSI_Measurement_endSymbol,
        _SSB_ConfigMobility_ss_RSSI_Measurement,
        SSB_ConfigMobility,
        _CSI_RS_ResourceConfigMobility_isServingCellMO,
        _CSI_RS_ResourceConfigMobility_subcarrierSpacing,
        __CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility__item_,
        _CSI_RS_ResourceConfigMobility_csi_RS_CellList_Mobility,
        CSI_RS_ResourceConfigMobility,
        _CSI_RS_CellMobility_cellId,
        __CSI_RS_CellMobility_csi_rs_MeasurementBW_nrofPRBs,
        __CSI_RS_CellMobility_csi_rs_MeasurementBW_startPRB,
        _CSI_RS_CellMobility_csi_rs_MeasurementBW,
        _CSI_RS_CellMobility_density,
        __CSI_RS_CellMobility_csi_rs_ResourceList_Mobility__item_,
        _CSI_RS_CellMobility_csi_rs_ResourceList_Mobility,
        CSI_RS_CellMobility,
        _CSI_RS_Resource_Mobility_csi_RS_Index,
        __CSI_RS_Resource_Mobility_slotConfig_ms4,
        __CSI_RS_Resource_Mobility_slotConfig_ms5,
        __CSI_RS_Resource_Mobility_slotConfig_ms10,
        __CSI_RS_Resource_Mobility_slotConfig_ms20,
        __CSI_RS_Resource_Mobility_slotConfig_ms40,
        _CSI_RS_Resource_Mobility_slotConfig,
        __CSI_RS_Resource_Mobility_associatedSSB_ssb_Index,
        __CSI_RS_Resource_Mobility_associatedSSB_isQuasiColocated,
        _CSI_RS_Resource_Mobility_associatedSSB,
        __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row1,
        __CSI_RS_Resource_Mobility_frequencyDomainAllocation_row2,
        _CSI_RS_Resource_Mobility_frequencyDomainAllocation,
        _CSI_RS_Resource_Mobility_firstOFDMSymbolInTimeDomain,
        _CSI_RS_Resource_Mobility_sequenceGenerationConfig,
        CSI_RS_Resource_Mobility,
        CSI_RS_Index,
        _Q_OffsetRangeList_rsrpOffsetSSB,
        _Q_OffsetRangeList_rsrqOffsetSSB,
        _Q_OffsetRangeList_sinrOffsetSSB,
        _Q_OffsetRangeList_rsrpOffsetCSI_RS,
        _Q_OffsetRangeList_rsrqOffsetCSI_RS,
        _Q_OffsetRangeList_sinrOffsetCSI_RS,
        Q_OffsetRangeList,
        _SSB_ToMeasure_shortBitmap,
        _SSB_ToMeasure_mediumBitmap,
        _SSB_ToMeasure_longBitmap,
        SSB_ToMeasure,
        _ThresholdNR_thresholdRSRP,
        _ThresholdNR_thresholdRSRQ,
        _ThresholdNR_thresholdSINR,
        ThresholdNR,
        _CellsToAddModList__item_,
        CellsToAddModList,
        _CellsToAddMod_physCellId,
        _CellsToAddMod_cellIndividualOffset,
        CellsToAddMod,
        _BlackCellsToAddModList__item_,
        BlackCellsToAddModList,
        _BlackCellsToAddMod_pci_RangeIndex,
        _BlackCellsToAddMod_pci_Range,
        BlackCellsToAddMod,
        _WhiteCellsToAddModList__item_,
        WhiteCellsToAddModList,
        _WhiteCellsToAddMod_pci_RangeIndex,
        _WhiteCellsToAddMod_pci_Range,
        WhiteCellsToAddMod,
        _MeasObjectToAddModList__item_,
        MeasObjectToAddModList,
        _MeasObjectToAddMod_measObjectId,
        __MeasObjectToAddMod_measObject_measObjectNR,
        _MeasObjectToAddMod_measObject,
        MeasObjectToAddMod,
        _MeasResults_measId,
        _MeasResults_measResultServingFreqList,
        __MeasResults_measResultNeighCells_measResultListNR,
        _MeasResults_measResultNeighCells,
        MeasResults,
        _MeasResultServFreqList__item_,
        MeasResultServFreqList,
        _MeasResultServFreq_servFreqId,
        _MeasResultServFreq_measResultServingCell,
        _MeasResultServFreq_measResultBestNeighCell,
        MeasResultServFreq,
        _MeasResultListNR__item_,
        MeasResultListNR,
        _MeasResultNR_physCellId,
        _MeasResultNR_cgi_Info,
        ___MeasResultNR_measResult_cellResults_resultsSSB_Cell,
        ___MeasResultNR_measResult_cellResults_resultsCSI_RS_Cell,
        __MeasResultNR_measResult_cellResults,
        ___MeasResultNR_measResult_rsIndexResults_resultsSSB_Indexes,
        ___MeasResultNR_measResult_rsIndexResults_resultsCSI_RS_Indexes,
        __MeasResultNR_measResult_rsIndexResults,
        _MeasResultNR_measResult,
        MeasResultNR,
        _MeasQuantityResults_rsrp,
        _MeasQuantityResults_rsrq,
        _MeasQuantityResults_sinr,
        MeasQuantityResults,
        _ResultsPerSSB_IndexList__item_,
        ResultsPerSSB_IndexList,
        _ResultsPerSSB_Index_ssb_Index,
        _ResultsPerSSB_Index_ssb_Results,
        ResultsPerSSB_Index,
        _ResultsPerCSI_RS_IndexList__item_,
        ResultsPerCSI_RS_IndexList,
        _ResultsPerCSI_RS_Index_csi_RS_Index,
        _ResultsPerCSI_RS_Index_csi_RS_Results,
        ResultsPerCSI_RS_Index,
        _MeasResultSCG_Failure_measResultServFreqList,
        _MeasResultSCG_Failure_measResultNeighCells,
        MeasResultSCG_Failure,
        _MeasResultServFreqList2NR__item_,
        MeasResultServFreqList2NR,
        _MeasResultServFreq2NR_ssbFrequency,
        _MeasResultServFreq2NR_refFreqCSI_RS,
        _MeasResultServFreq2NR_measResultServingCell,
        _MeasResultServFreq2NR_measResultBestNeighCell,
        MeasResultServFreq2NR,
        _MeasResultList2NR__item_,
        MeasResultList2NR,
        _MeasResult2NR_ssbFrequency,
        _MeasResult2NR_refFreqCSI_RS,
        _MeasResult2NR_measResultListNR,
        MeasResult2NR,
        _MeasResultCellListSFTD__item_,
        MeasResultCellListSFTD,
        _MeasResultCellSFTD_physCellId,
        _MeasResultCellSFTD_sfn_OffsetResult,
        _MeasResultCellSFTD_frameBoundaryOffsetResult,
        _MeasResultCellSFTD_rsrp_Result,
        MeasResultCellSFTD,
        _MultiFrequencyBandListNR__item_,
        MultiFrequencyBandListNR,
        NextHopChainingCount,
        _NG_5G_S_TMSI_amf_SetId,
        _NG_5G_S_TMSI_amf_Pointer,
        _NG_5G_S_TMSI_ng_5g_TMSI,
        NG_5G_S_TMSI,
        _NZP_CSI_RS_ResourceSet_nzp_CSI_ResourceSetId,
        __NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources__item_,
        _NZP_CSI_RS_ResourceSet_nzp_CSI_RS_Resources,
        _NZP_CSI_RS_ResourceSet_repetition,
        _NZP_CSI_RS_ResourceSet_aperiodicTriggeringOffset,
        _NZP_CSI_RS_ResourceSet_trs_Info,
        NZP_CSI_RS_ResourceSet,
        NZP_CSI_RS_ResourceSetId,
        _NZP_CSI_RS_Resource_nzp_CSI_RS_ResourceId,
        _NZP_CSI_RS_Resource_resourceMapping,
        _NZP_CSI_RS_Resource_powerControlOffset,
        _NZP_CSI_RS_Resource_powerControlOffsetSS,
        _NZP_CSI_RS_Resource_scramblingID,
        _NZP_CSI_RS_Resource_periodicityAndOffset,
        _NZP_CSI_RS_Resource_qcl_InfoPeriodicCSI_RS,
        NZP_CSI_RS_Resource,
        NZP_CSI_RS_ResourceId,
        P_Max,
        _PCI_List__item_,
        PCI_List,
        _PCI_Range_start,
        _PCI_Range_range,
        PCI_Range,
        PCI_RangeIndex,
        _PCI_RangeIndexList__item_,
        PCI_RangeIndexList,
        __PDCCH_Config_controlResourceSetToAddModList__item_,
        _PDCCH_Config_controlResourceSetToAddModList,
        __PDCCH_Config_controlResourceSetToReleaseList__item_,
        _PDCCH_Config_controlResourceSetToReleaseList,
        __PDCCH_Config_searchSpacesToAddModList__item_,
        _PDCCH_Config_searchSpacesToAddModList,
        __PDCCH_Config_searchSpacesToReleaseList__item_,
        _PDCCH_Config_searchSpacesToReleaseList,
        __PDCCH_Config_downlinkPreemption_release,
        __PDCCH_Config_downlinkPreemption_setup,
        _PDCCH_Config_downlinkPreemption,
        __PDCCH_Config_slotFormatIndicator_release,
        __PDCCH_Config_slotFormatIndicator_setup,
        _PDCCH_Config_slotFormatIndicator,
        __PDCCH_Config_tpc_PUSCH_release,
        __PDCCH_Config_tpc_PUSCH_setup,
        _PDCCH_Config_tpc_PUSCH,
        __PDCCH_Config_tpc_PUCCH_release,
        __PDCCH_Config_tpc_PUCCH_setup,
        _PDCCH_Config_tpc_PUCCH,
        PDCCH_Config,
        __PDCCH_ConfigCommon_commonControlResourcesSets__item_,
        _PDCCH_ConfigCommon_commonControlResourcesSets,
        __PDCCH_ConfigCommon_commonSearchSpaces__item_,
        _PDCCH_ConfigCommon_commonSearchSpaces,
        _PDCCH_ConfigCommon_searchSpaceSIB1,
        _PDCCH_ConfigCommon_searchSpaceOtherSystemInformation,
        _PDCCH_ConfigCommon_pagingSearchSpace,
        _PDCCH_ConfigCommon_ra_ControlResourceSet,
        _PDCCH_ConfigCommon_ra_SearchSpace,
        PDCCH_ConfigCommon,
        __PDCP_Config_drb_discardTimer,
        __PDCP_Config_drb_pdcp_SN_SizeUL,
        __PDCP_Config_drb_pdcp_SN_SizeDL,
        ___PDCP_Config_drb_headerCompression_notUsed,
        ____PDCP_Config_drb_headerCompression_rohc_maxCID,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0001,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0002,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0003,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0004,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0006,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0101,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0102,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0103,
        _____PDCP_Config_drb_headerCompression_rohc_profiles_profile0x0104,
        ____PDCP_Config_drb_headerCompression_rohc_profiles,
        ____PDCP_Config_drb_headerCompression_rohc_drb_ContinueROHC,
        ___PDCP_Config_drb_headerCompression_rohc,
        ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_maxCID,
        _____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles_profile0x0006,
        ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_profiles,
        ____PDCP_Config_drb_headerCompression_uplinkOnlyROHC_drb_ContinueROHC,
        ___PDCP_Config_drb_headerCompression_uplinkOnlyROHC,
        __PDCP_Config_drb_headerCompression,
        __PDCP_Config_drb_integrityProtection,
        __PDCP_Config_drb_statusReportRequired,
        __PDCP_Config_drb_outOfOrderDelivery,
        _PDCP_Config_drb,
        ___PDCP_Config_moreThanOneRLC_primaryPath_cellGroup,
        ___PDCP_Config_moreThanOneRLC_primaryPath_logicalChannel,
        __PDCP_Config_moreThanOneRLC_primaryPath,
        __PDCP_Config_moreThanOneRLC_ul_DataSplitThreshold,
        __PDCP_Config_moreThanOneRLC_pdcp_Duplication,
        _PDCP_Config_moreThanOneRLC,
        _PDCP_Config_t_Reordering,
        PDCP_Config,
        UL_DataSplitThreshold,
        _PDSCH_Config_dataScramblingIdentityPDSCH,
        __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_release,
        __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA_setup,
        _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeA,
        __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_release,
        __PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB_setup,
        _PDSCH_Config_dmrs_DownlinkForPDSCH_MappingTypeB,
        __PDSCH_Config_tci_StatesToAddModList__item_,
        _PDSCH_Config_tci_StatesToAddModList,
        __PDSCH_Config_tci_StatesToReleaseList__item_,
        _PDSCH_Config_tci_StatesToReleaseList,
        _PDSCH_Config_vrb_ToPRB_Interleaver,
        _PDSCH_Config_resourceAllocation,
        __PDSCH_Config_pdsch_AllocationList__item_,
        _PDSCH_Config_pdsch_AllocationList,
        _PDSCH_Config_pdsch_AggregationFactor,
        __PDSCH_Config_rateMatchPatternToAddModList__item_,
        _PDSCH_Config_rateMatchPatternToAddModList,
        __PDSCH_Config_rateMatchPatternToReleaseList__item_,
        _PDSCH_Config_rateMatchPatternToReleaseList,
        __PDSCH_Config_rateMatchPatternGroup1__item_,
        _PDSCH_Config_rateMatchPatternGroup1,
        __PDSCH_Config_rateMatchPatternGroup2__item_,
        _PDSCH_Config_rateMatchPatternGroup2,
        _PDSCH_Config_rbg_Size,
        _PDSCH_Config_mcs_Table,
        _PDSCH_Config_maxNrofCodeWordsScheduledByDCI,
        ___PDSCH_Config_prb_BundlingType_static_bundleSize,
        __PDSCH_Config_prb_BundlingType_static,
        ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet1,
        ___PDSCH_Config_prb_BundlingType_dynamic_bundleSizeSet2,
        __PDSCH_Config_prb_BundlingType_dynamic,
        _PDSCH_Config_prb_BundlingType,
        __PDSCH_Config_zp_CSI_RS_ResourceToAddModList__item_,
        _PDSCH_Config_zp_CSI_RS_ResourceToAddModList,
        __PDSCH_Config_zp_CSI_RS_ResourceToReleaseList__item_,
        _PDSCH_Config_zp_CSI_RS_ResourceToReleaseList,
        __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList__item_,
        _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToAddModList,
        __PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList__item_,
        _PDSCH_Config_aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList,
        __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList__item_,
        _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToAddModList,
        __PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList__item_,
        _PDSCH_Config_sp_ZP_CSI_RS_ResourceSetsToReleaseList,
        PDSCH_Config,
        __PDSCH_ConfigCommon_pdsch_AllocationList__item_,
        _PDSCH_ConfigCommon_pdsch_AllocationList,
        PDSCH_ConfigCommon,
        __PDSCH_ServingCellConfig_codeBlockGroupTransmission_release,
        __PDSCH_ServingCellConfig_codeBlockGroupTransmission_setup,
        _PDSCH_ServingCellConfig_codeBlockGroupTransmission,
        _PDSCH_ServingCellConfig_xOverhead,
        _PDSCH_ServingCellConfig_nrofHARQ_ProcessesForPDSCH,
        _PDSCH_ServingCellConfig_pucch_Cell,
        PDSCH_ServingCellConfig,
        _PDSCH_CodeBlockGroupTransmission_maxCodeBlockGroupsPerTransportBlock,
        _PDSCH_CodeBlockGroupTransmission_codeBlockGroupFlushIndicator,
        PDSCH_CodeBlockGroupTransmission,
        _PDSCH_TimeDomainResourceAllocation_k0,
        _PDSCH_TimeDomainResourceAllocation_mappingType,
        _PDSCH_TimeDomainResourceAllocation_startSymbolAndLength,
        PDSCH_TimeDomainResourceAllocation,
        _PLMN_Identity_mcc,
        _PLMN_Identity_mnc,
        PLMN_Identity,
        _MCC__item_,
        MCC,
        _MNC__item_,
        MNC,
        MCC_MNC_Digit,
        PhysCellId,
        PRB_Id,
        __PTRS_DownlinkConfig_frequencyDensity__item_,
        _PTRS_DownlinkConfig_frequencyDensity,
        __PTRS_DownlinkConfig_timeDensity__item_,
        _PTRS_DownlinkConfig_timeDensity,
        _PTRS_DownlinkConfig_epre_RatioPort1,
        __PTRS_DownlinkConfig_epre_RatioPort2__item_,
        _PTRS_DownlinkConfig_epre_RatioPort2,
        _PTRS_DownlinkConfig_resourceElementOffset,
        PTRS_DownlinkConfig,
        ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity__item_,
        ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_frequencyDensity,
        ____PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity__item_,
        ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_timeDensity,
        ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_maxNrofPorts,
        ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_resourceElementOffset,
        ___PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM_ptrs_Power,
        __PTRS_UplinkConfig_modeSpecificParameters_cp_OFDM,
        ____PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity__item_,
        ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_sampleDensity,
        ___PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM_timeDensity,
        __PTRS_UplinkConfig_modeSpecificParameters_dft_S_OFDM,
        _PTRS_UplinkConfig_modeSpecificParameters,
        PTRS_UplinkConfig,
        __PUCCH_Config_resourceSetToAddModList__item_,
        _PUCCH_Config_resourceSetToAddModList,
        __PUCCH_Config_resourceSetToReleaseList__item_,
        _PUCCH_Config_resourceSetToReleaseList,
        __PUCCH_Config_resourceToAddModList__item_,
        _PUCCH_Config_resourceToAddModList,
        __PUCCH_Config_resourceToReleaseList__item_,
        _PUCCH_Config_resourceToReleaseList,
        __PUCCH_Config_format1_release,
        __PUCCH_Config_format1_setup,
        _PUCCH_Config_format1,
        __PUCCH_Config_format2_release,
        __PUCCH_Config_format2_setup,
        _PUCCH_Config_format2,
        __PUCCH_Config_format3_release,
        __PUCCH_Config_format3_setup,
        _PUCCH_Config_format3,
        __PUCCH_Config_format4_release,
        __PUCCH_Config_format4_setup,
        _PUCCH_Config_format4,
        __PUCCH_Config_schedulingRequestResourceToAddModList__item_,
        _PUCCH_Config_schedulingRequestResourceToAddModList,
        __PUCCH_Config_schedulingRequestResourceToReleaseList__item_,
        _PUCCH_Config_schedulingRequestResourceToReleaseList,
        __PUCCH_Config_multi_CSI_PUCCH_ResourceList__item_,
        _PUCCH_Config_multi_CSI_PUCCH_ResourceList,
        __PUCCH_Config_dl_DataToUL_ACK__item_,
        _PUCCH_Config_dl_DataToUL_ACK,
        __PUCCH_Config_spatialRelationInfoToAddModList__item_,
        _PUCCH_Config_spatialRelationInfoToAddModList,
        __PUCCH_Config_spatialRelationInfoToReleaseList__item_,
        _PUCCH_Config_spatialRelationInfoToReleaseList,
        _PUCCH_Config_pucch_PowerControl,
        PUCCH_Config,
        _PUCCH_FormatConfig_interslotFrequencyHopping,
        _PUCCH_FormatConfig_additionalDMRS,
        _PUCCH_FormatConfig_maxCodeRate,
        _PUCCH_FormatConfig_nrofSlots,
        _PUCCH_FormatConfig_pi2PBSK,
        _PUCCH_FormatConfig_simultaneousHARQ_ACK_CSI,
        PUCCH_FormatConfig,
        PUCCH_MaxCodeRate,
        _PUCCH_SpatialRelationInfo_pucch_SpatialRelationInfoId,
        __PUCCH_SpatialRelationInfo_referenceSignal_ssb_Index,
        __PUCCH_SpatialRelationInfo_referenceSignal_csi_RS_Index,
        __PUCCH_SpatialRelationInfo_referenceSignal_srs,
        _PUCCH_SpatialRelationInfo_referenceSignal,
        _PUCCH_SpatialRelationInfo_pucch_PathlossReferenceRS_Id,
        _PUCCH_SpatialRelationInfo_p0_PUCCH_Id,
        _PUCCH_SpatialRelationInfo_closedLoopIndex,
        PUCCH_SpatialRelationInfo,
        PUCCH_SpatialRelationInfoId,
        _PUCCH_ResourceSet_pucch_ResourceSetId,
        __PUCCH_ResourceSet_resources__item_,
        _PUCCH_ResourceSet_resources,
        _PUCCH_ResourceSet_maxPayloadMinus1,
        PUCCH_ResourceSet,
        PUCCH_ResourceSetId,
        _PUCCH_Resource_pucch_ResourceId,
        _PUCCH_Resource_startingPRB,
        _PUCCH_Resource_intraSlotFrequencyHopping,
        _PUCCH_Resource_secondHopPRB,
        __PUCCH_Resource_format_format0,
        __PUCCH_Resource_format_format1,
        __PUCCH_Resource_format_format2,
        __PUCCH_Resource_format_format3,
        __PUCCH_Resource_format_format4,
        _PUCCH_Resource_format,
        PUCCH_Resource,
        PUCCH_ResourceId,
        _PUCCH_format0_initialCyclicShift,
        _PUCCH_format0_nrofSymbols,
        _PUCCH_format0_startingSymbolIndex,
        PUCCH_format0,
        _PUCCH_format1_initialCyclicShift,
        _PUCCH_format1_nrofSymbols,
        _PUCCH_format1_startingSymbolIndex,
        _PUCCH_format1_timeDomainOCC,
        PUCCH_format1,
        _PUCCH_format2_nrofPRBs,
        _PUCCH_format2_nrofSymbols,
        _PUCCH_format2_startingSymbolIndex,
        PUCCH_format2,
        _PUCCH_format3_nrofPRBs,
        _PUCCH_format3_nrofSymbols,
        _PUCCH_format3_startingSymbolIndex,
        PUCCH_format3,
        _PUCCH_format4_nrofSymbols,
        _PUCCH_format4_occ_Length,
        _PUCCH_format4_occ_Index,
        _PUCCH_format4_startingSymbolIndex,
        PUCCH_format4,
        _PUCCH_ConfigCommon_pucch_ResourceCommon,
        _PUCCH_ConfigCommon_pucch_GroupHopping,
        _PUCCH_ConfigCommon_hoppingId,
        _PUCCH_ConfigCommon_p0_nominal,
        PUCCH_ConfigCommon,
        _PUCCH_PowerControl_deltaF_PUCCH_f0,
        _PUCCH_PowerControl_deltaF_PUCCH_f1,
        _PUCCH_PowerControl_deltaF_PUCCH_f2,
        _PUCCH_PowerControl_deltaF_PUCCH_f3,
        _PUCCH_PowerControl_deltaF_PUCCH_f4,
        __PUCCH_PowerControl_p0_Set__item_,
        _PUCCH_PowerControl_p0_Set,
        __PUCCH_PowerControl_pathlossReferenceRSs__item_,
        _PUCCH_PowerControl_pathlossReferenceRSs,
        _PUCCH_PowerControl_twoPUCCH_PC_AdjustmentStates,
        PUCCH_PowerControl,
        _P0_PUCCH_p0_PUCCH_Id,
        _P0_PUCCH_p0_PUCCH_Value,
        P0_PUCCH,
        P0_PUCCH_Id,
        _PUCCH_PathlossReferenceRS_pucch_PathlossReferenceRS_Id,
        __PUCCH_PathlossReferenceRS_referenceSignal_ssb_Index,
        __PUCCH_PathlossReferenceRS_referenceSignal_csi_RS_Index,
        _PUCCH_PathlossReferenceRS_referenceSignal,
        PUCCH_PathlossReferenceRS,
        PUCCH_PathlossReferenceRS_Id,
        _PUCCH_TPC_CommandConfig_tpc_IndexPCell,
        _PUCCH_TPC_CommandConfig_tpc_IndexPUCCH_SCell,
        PUCCH_TPC_CommandConfig,
        _PUSCH_Config_dataScramblingIdentityPUSCH,
        _PUSCH_Config_txConfig,
        __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_release,
        __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA_setup,
        _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeA,
        __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_release,
        __PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB_setup,
        _PUSCH_Config_dmrs_UplinkForPUSCH_MappingTypeB,
        _PUSCH_Config_pusch_PowerControl,
        _PUSCH_Config_frequencyHopping,
        __PUSCH_Config_frequencyHoppingOffsetLists__item_,
        _PUSCH_Config_frequencyHoppingOffsetLists,
        _PUSCH_Config_resourceAllocation,
        __PUSCH_Config_pusch_AllocationList__item_,
        _PUSCH_Config_pusch_AllocationList,
        _PUSCH_Config_pusch_AggregationFactor,
        _PUSCH_Config_mcs_Table,
        _PUSCH_Config_mcs_TableTransformPrecoder,
        _PUSCH_Config_transformPrecoder,
        _PUSCH_Config_codebookSubset,
        _PUSCH_Config_maxRank,
        _PUSCH_Config_rbg_Size,
        __PUSCH_Config_uci_OnPUSCH_release,
        __PUSCH_Config_uci_OnPUSCH_setup,
        _PUSCH_Config_uci_OnPUSCH,
        _PUSCH_Config_vrb_ToPRB_Interleaver,
        PUSCH_Config,
        ___UCI_OnPUSCH_betaOffsets_dynamic__item_,
        __UCI_OnPUSCH_betaOffsets_dynamic,
        __UCI_OnPUSCH_betaOffsets_semiStatic,
        _UCI_OnPUSCH_betaOffsets,
        _UCI_OnPUSCH_scaling,
        UCI_OnPUSCH,
        _PUSCH_ConfigCommon_groupHoppingEnabledTransformPrecoding,
        __PUSCH_ConfigCommon_pusch_AllocationList__item_,
        _PUSCH_ConfigCommon_pusch_AllocationList,
        _PUSCH_ConfigCommon_msg3_DeltaPreamble,
        _PUSCH_ConfigCommon_p0_NominalWithGrant,
        PUSCH_ConfigCommon,
        _PUSCH_PowerControl_tpc_Accumulation,
        _PUSCH_PowerControl_msg3_Alpha,
        _PUSCH_PowerControl_p0_NominalWithoutGrant,
        __PUSCH_PowerControl_p0_AlphaSets__item_,
        _PUSCH_PowerControl_p0_AlphaSets,
        __PUSCH_PowerControl_pathlossReferenceRSToAddModList__item_,
        _PUSCH_PowerControl_pathlossReferenceRSToAddModList,
        __PUSCH_PowerControl_pathlossReferenceRSToReleaseList__item_,
        _PUSCH_PowerControl_pathlossReferenceRSToReleaseList,
        _PUSCH_PowerControl_twoPUSCH_PC_AdjustmentStates,
        _PUSCH_PowerControl_deltaMCS,
        __PUSCH_PowerControl_sri_PUSCH_MappingToAddModList__item_,
        _PUSCH_PowerControl_sri_PUSCH_MappingToAddModList,
        __PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList__item_,
        _PUSCH_PowerControl_sri_PUSCH_MappingToReleaseList,
        PUSCH_PowerControl,
        _P0_PUSCH_AlphaSet_p0_PUSCH_AlphaSetId,
        _P0_PUSCH_AlphaSet_p0,
        _P0_PUSCH_AlphaSet_alpha,
        P0_PUSCH_AlphaSet,
        P0_PUSCH_AlphaSetId,
        _PUSCH_PathlossReferenceRS_pusch_PathlossReferenceRS_Id,
        __PUSCH_PathlossReferenceRS_referenceSignal_ssb_Index,
        __PUSCH_PathlossReferenceRS_referenceSignal_csi_RS_Index,
        _PUSCH_PathlossReferenceRS_referenceSignal,
        PUSCH_PathlossReferenceRS,
        PUSCH_PathlossReferenceRS_Id,
        _SRI_PUSCH_PowerControl_sri_PUSCH_PowerControlId,
        _SRI_PUSCH_PowerControl_sri_PUSCH_PathlossReferenceRS_Id,
        _SRI_PUSCH_PowerControl_sri_P0_PUSCH_AlphaSetId,
        _SRI_PUSCH_PowerControl_sri_PUSCH_ClosedLoopIndex,
        SRI_PUSCH_PowerControl,
        SRI_PUSCH_PowerControlId,
        _BetaOffsets_betaOffsetACK_Index1,
        _BetaOffsets_betaOffsetACK_Index2,
        _BetaOffsets_betaOffsetACK_Index3,
        _BetaOffsets_betaOffsetCSI_Part1_Index1,
        _BetaOffsets_betaOffsetCSI_Part1_Index2,
        _BetaOffsets_betaOffsetCSI_Part2_Index1,
        _BetaOffsets_betaOffsetCSI_Part2_Index2,
        BetaOffsets,
        __PUSCH_ServingCellConfig_codeBlockGroupTransmission_release,
        __PUSCH_ServingCellConfig_codeBlockGroupTransmission_setup,
        _PUSCH_ServingCellConfig_codeBlockGroupTransmission,
        _PUSCH_ServingCellConfig_rateMatching,
        _PUSCH_ServingCellConfig_xOverhead,
        PUSCH_ServingCellConfig,
        _PUSCH_CodeBlockGroupGransmission_maxCodeBlockGroupsPerTransportBlock,
        PUSCH_CodeBlockGroupGransmission,
        _PUSCH_TimeDomainResourceAllocation_k2,
        _PUSCH_TimeDomainResourceAllocation_mappingType,
        _PUSCH_TimeDomainResourceAllocation_startSymbolAndLength,
        PUSCH_TimeDomainResourceAllocation,
        _PUSCH_TPC_CommandConfig_tpc_Index,
        _PUSCH_TPC_CommandConfig_tpc_IndexSUL,
        _PUSCH_TPC_CommandConfig_targetCell,
        PUSCH_TPC_CommandConfig,
        Q_OffsetRange,
        _QuantityConfig_quantityConfigNR_List,
        QuantityConfig,
        _QuantityConfigNR_List__item_,
        QuantityConfigNR_List,
        _QuantityConfigNR_quantityConfigCell,
        _QuantityConfigNR_quantityConfigRS_Index,
        QuantityConfigNR,
        _QuantityConfigRS_ssb_FilterConfig,
        _QuantityConfigRS_cs_RS_FilterConfig,
        QuantityConfigRS,
        _FilterConfig_filterCoefficientRSRP,
        _FilterConfig_filterCoefficientRSRQ,
        _FilterConfig_filterCoefficientRS_SINR,
        FilterConfig,
        _RACH_ConfigCommon_rach_ConfigGeneric,
        _RACH_ConfigCommon_totalNumberOfRA_Preambles,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneEighth,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneFourth,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_oneHalf,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_one,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_two,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_four,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_eight,
        __RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB_sixteen,
        _RACH_ConfigCommon_ssb_perRACH_OccasionAndCB_PreamblesPerSSB,
        __RACH_ConfigCommon_groupBconfigured_ra_Msg3SizeGroupA,
        __RACH_ConfigCommon_groupBconfigured_messagePowerOffsetGroupB,
        __RACH_ConfigCommon_groupBconfigured_numberOfRA_PreamblesGroupA,
        _RACH_ConfigCommon_groupBconfigured,
        _RACH_ConfigCommon_ra_ContentionResolutionTimer,
        _RACH_ConfigCommon_rsrp_ThresholdSSB,
        _RACH_ConfigCommon_rsrp_ThresholdSSB_SUL,
        __RACH_ConfigCommon_prach_RootSequenceIndex_l839,
        __RACH_ConfigCommon_prach_RootSequenceIndex_l139,
        _RACH_ConfigCommon_prach_RootSequenceIndex,
        _RACH_ConfigCommon_msg1_SubcarrierSpacing,
        _RACH_ConfigCommon_restrictedSetConfig,
        _RACH_ConfigCommon_msg3_transformPrecoding,
        RACH_ConfigCommon,
        _RACH_ConfigGeneric_prach_ConfigurationIndex,
        _RACH_ConfigGeneric_msg1_FDM,
        _RACH_ConfigGeneric_msg1_FrequencyStart,
        _RACH_ConfigGeneric_zeroCorrelationZoneConfig,
        _RACH_ConfigGeneric_preambleReceivedTargetPower,
        _RACH_ConfigGeneric_preambleTransMax,
        _RACH_ConfigGeneric_powerRampingStep,
        _RACH_ConfigGeneric_ra_ResponseWindow,
        RACH_ConfigGeneric,
        _RACH_ConfigDedicated_cfra_Resources,
        RACH_ConfigDedicated,
        ___CFRA_Resources_ssb_ssb_ResourceList__item_,
        __CFRA_Resources_ssb_ssb_ResourceList,
        __CFRA_Resources_ssb_ra_ssb_OccasionMaskIndex,
        _CFRA_Resources_ssb,
        ___CFRA_Resources_csirs_csirs_ResourceList__item_,
        __CFRA_Resources_csirs_csirs_ResourceList,
        __CFRA_Resources_csirs_cfra_csirs_DedicatedRACH_Threshold,
        _CFRA_Resources_csirs,
        CFRA_Resources,
        _CFRA_SSB_Resource_ssb,
        _CFRA_SSB_Resource_ra_PreambleIndex,
        CFRA_SSB_Resource,
        _CFRA_CSIRS_Resource_csi_RS,
        __CFRA_CSIRS_Resource_ra_OccasionList__item_,
        _CFRA_CSIRS_Resource_ra_OccasionList,
        _CFRA_CSIRS_Resource_ra_PreambleIndex,
        CFRA_CSIRS_Resource,
        _RadioBearerConfig_srb_ToAddModList,
        _RadioBearerConfig_srb3_ToRelease,
        _RadioBearerConfig_drb_ToAddModList,
        _RadioBearerConfig_drb_ToReleaseList,
        _RadioBearerConfig_securityConfig,
        RadioBearerConfig,
        _SRB_ToAddModList__item_,
        SRB_ToAddModList,
        _SRB_ToAddMod_srb_Identity,
        _SRB_ToAddMod_reestablishPDCP,
        _SRB_ToAddMod_discardOnPDCP,
        _SRB_ToAddMod_pdcp_Config,
        SRB_ToAddMod,
        _DRB_ToAddModList__item_,
        DRB_ToAddModList,
        __DRB_ToAddMod_cnAssociation_eps_BearerIdentity,
        __DRB_ToAddMod_cnAssociation_sdap_Config,
        _DRB_ToAddMod_cnAssociation,
        _DRB_ToAddMod_drb_Identity,
        _DRB_ToAddMod_reestablishPDCP,
        _DRB_ToAddMod_recoverPDCP,
        _DRB_ToAddMod_pdcp_Config,
        DRB_ToAddMod,
        _DRB_ToReleaseList__item_,
        DRB_ToReleaseList,
        _SecurityConfig_securityAlgorithmConfig,
        _SecurityConfig_keyToUse,
        SecurityConfig,
        __RadioLinkMonitoringConfig_failureDetectionResources__item_,
        _RadioLinkMonitoringConfig_failureDetectionResources,
        _RadioLinkMonitoringConfig_beamFailureInstanceMaxCount,
        _RadioLinkMonitoringConfig_beamFailureDetectionTimer,
        RadioLinkMonitoringConfig,
        _RadioLinkMonitoringRS_purpose,
        __RadioLinkMonitoringRS_detectionResource_ssb_Index,
        __RadioLinkMonitoringRS_detectionResource_csi_RS_Index,
        _RadioLinkMonitoringRS_detectionResource,
        RadioLinkMonitoringRS,
        _RateMatchPattern_rateMatchPatternId,
        ___RateMatchPattern_patternType_bitmaps_resourceBlocks,
        ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_oneSlot,
        ____RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock_twoSlots,
        ___RateMatchPattern_patternType_bitmaps_symbolsInResourceBlock,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n2,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n4,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n5,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n8,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n10,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n20,
        ____RateMatchPattern_patternType_bitmaps_periodicityAndPattern_n40,
        ___RateMatchPattern_patternType_bitmaps_periodicityAndPattern,
        __RateMatchPattern_patternType_bitmaps,
        __RateMatchPattern_patternType_controlResourceSet,
        _RateMatchPattern_patternType,
        _RateMatchPattern_subcarrierSpacing,
        _RateMatchPattern_mode,
        RateMatchPattern,
        RateMatchPatternId,
        _RateMatchPatternLTE_CRS_carrierFreqDL,
        _RateMatchPatternLTE_CRS_carrierBandwidthDL,
        _RateMatchPatternLTE_CRS_mbsfn_SubframeConfigList,
        _RateMatchPatternLTE_CRS_nrofCRS_Ports,
        _RateMatchPatternLTE_CRS_v_Shift,
        RateMatchPatternLTE_CRS,
        ReportConfigId,
        __ReportConfigNR_reportType_periodical,
        __ReportConfigNR_reportType_eventTriggered,
        __ReportConfigNR_reportType_reportCGI,
        _ReportConfigNR_reportType,
        ReportConfigNR,
        ___EventTriggerConfig_eventId_eventA1_a1_Threshold,
        ___EventTriggerConfig_eventId_eventA1_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA1_hysteresis,
        ___EventTriggerConfig_eventId_eventA1_timeToTrigger,
        __EventTriggerConfig_eventId_eventA1,
        ___EventTriggerConfig_eventId_eventA2_a2_Threshold,
        ___EventTriggerConfig_eventId_eventA2_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA2_hysteresis,
        ___EventTriggerConfig_eventId_eventA2_timeToTrigger,
        __EventTriggerConfig_eventId_eventA2,
        ___EventTriggerConfig_eventId_eventA3_a3_Offset,
        ___EventTriggerConfig_eventId_eventA3_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA3_hysteresis,
        ___EventTriggerConfig_eventId_eventA3_timeToTrigger,
        ___EventTriggerConfig_eventId_eventA3_useWhiteCellList,
        __EventTriggerConfig_eventId_eventA3,
        ___EventTriggerConfig_eventId_eventA4_a4_Threshold,
        ___EventTriggerConfig_eventId_eventA4_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA4_hysteresis,
        ___EventTriggerConfig_eventId_eventA4_timeToTrigger,
        ___EventTriggerConfig_eventId_eventA4_useWhiteCellList,
        __EventTriggerConfig_eventId_eventA4,
        ___EventTriggerConfig_eventId_eventA5_a5_Threshold1,
        ___EventTriggerConfig_eventId_eventA5_a5_Threshold2,
        ___EventTriggerConfig_eventId_eventA5_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA5_hysteresis,
        ___EventTriggerConfig_eventId_eventA5_timeToTrigger,
        ___EventTriggerConfig_eventId_eventA5_useWhiteCellList,
        __EventTriggerConfig_eventId_eventA5,
        ___EventTriggerConfig_eventId_eventA6_a6_Offset,
        ___EventTriggerConfig_eventId_eventA6_reportOnLeave,
        ___EventTriggerConfig_eventId_eventA6_hysteresis,
        ___EventTriggerConfig_eventId_eventA6_timeToTrigger,
        ___EventTriggerConfig_eventId_eventA6_useWhiteCellList,
        __EventTriggerConfig_eventId_eventA6,
        _EventTriggerConfig_eventId,
        _EventTriggerConfig_rsType,
        _EventTriggerConfig_reportInterval,
        _EventTriggerConfig_reportAmount,
        _EventTriggerConfig_reportQuantityCell,
        _EventTriggerConfig_maxReportCells,
        _EventTriggerConfig_reportQuantityRsIndexes,
        _EventTriggerConfig_maxNrofRSIndexesToReport,
        _EventTriggerConfig_includeBeamMeasurements,
        _EventTriggerConfig_reportAddNeighMeas,
        EventTriggerConfig,
        _PeriodicalReportConfig_rsType,
        _PeriodicalReportConfig_reportInterval,
        _PeriodicalReportConfig_reportAmount,
        _PeriodicalReportConfig_reportQuantityCell,
        _PeriodicalReportConfig_maxReportCells,
        _PeriodicalReportConfig_reportQuantityRsIndexes,
        _PeriodicalReportConfig_maxNrofRsIndexesToReport,
        _PeriodicalReportConfig_includeBeamMeasurements,
        _PeriodicalReportConfig_useWhiteCellList,
        PeriodicalReportConfig,
        NR_RS_Type,
        _MeasTriggerQuantity_rsrp,
        _MeasTriggerQuantity_rsrq,
        _MeasTriggerQuantity_sinr,
        MeasTriggerQuantity,
        _MeasTriggerQuantityOffset_rsrp,
        _MeasTriggerQuantityOffset_rsrq,
        _MeasTriggerQuantityOffset_sinr,
        MeasTriggerQuantityOffset,
        _MeasReportQuantity_rsrp,
        _MeasReportQuantity_rsrq,
        _MeasReportQuantity_sinr,
        MeasReportQuantity,
        _ReportConfigToAddModList__item_,
        ReportConfigToAddModList,
        _ReportConfigToAddMod_reportConfigId,
        __ReportConfigToAddMod_reportConfig_reportConfigNR,
        _ReportConfigToAddMod_reportConfig,
        ReportConfigToAddMod,
        ReportInterval,
        __RLC_Config_am_ul_AM_RLC,
        __RLC_Config_am_dl_AM_RLC,
        _RLC_Config_am,
        __RLC_Config_um_Bi_Directional_ul_UM_RLC,
        __RLC_Config_um_Bi_Directional_dl_UM_RLC,
        _RLC_Config_um_Bi_Directional,
        __RLC_Config_um_Uni_Directional_UL_ul_UM_RLC,
        _RLC_Config_um_Uni_Directional_UL,
        __RLC_Config_um_Uni_Directional_DL_dl_UM_RLC,
        _RLC_Config_um_Uni_Directional_DL,
        RLC_Config,
        _UL_AM_RLC_sn_FieldLength,
        _UL_AM_RLC_t_PollRetransmit,
        _UL_AM_RLC_pollPDU,
        _UL_AM_RLC_pollByte,
        _UL_AM_RLC_maxRetxThreshold,
        UL_AM_RLC,
        _DL_AM_RLC_sn_FieldLength,
        _DL_AM_RLC_t_Reassembly,
        _DL_AM_RLC_t_StatusProhibit,
        DL_AM_RLC,
        _UL_UM_RLC_sn_FieldLength,
        UL_UM_RLC,
        _DL_UM_RLC_sn_FieldLength,
        _DL_UM_RLC_t_Reassembly,
        DL_UM_RLC,
        T_PollRetransmit,
        PollPDU,
        PollByte,
        T_Reassembly,
        T_StatusProhibit,
        SN_FieldLengthUM,
        SN_FieldLengthAM,
        _RLF_TimersAndConstants_t310,
        _RLF_TimersAndConstants_n310,
        _RLF_TimersAndConstants_n311,
        RLF_TimersAndConstants,
        RNTI_Value,
        RSRP_Range,
        RSRQ_Range,
        SCellIndex,
        __SchedulingRequestConfig_schedulingRequestToAddModList__item_,
        _SchedulingRequestConfig_schedulingRequestToAddModList,
        __SchedulingRequestConfig_schedulingRequestToReleaseList__item_,
        _SchedulingRequestConfig_schedulingRequestToReleaseList,
        SchedulingRequestConfig,
        _SchedulingRequestToAddMod_sr_ConfigIndex,
        _SchedulingRequestToAddMod_sr_ProhibitTimer,
        _SchedulingRequestToAddMod_sr_TransMax,
        SchedulingRequestToAddMod,
        SchedulingRequestId,
        _SchedulingRequestResourceConfig_schedulingRequestResourceId,
        _SchedulingRequestResourceConfig_schedulingRequestID,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sym2,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sym6or7,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl1,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl2,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl4,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl5,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl8,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl10,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl16,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl20,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl40,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl80,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl160,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl320,
        __SchedulingRequestResourceConfig_periodicityAndOffset_sl640,
        _SchedulingRequestResourceConfig_periodicityAndOffset,
        _SchedulingRequestResourceConfig_resource,
        SchedulingRequestResourceConfig,
        SchedulingRequestResourceId,
        ScramblingId,
        _SCS_SpecificCarrier_offsetToCarrier,
        _SCS_SpecificCarrier_subcarrierSpacing,
        _SCS_SpecificCarrier_k0,
        _SCS_SpecificCarrier_carrierBandwidth,
        SCS_SpecificCarrier,
        _SDAP_Config_pdu_Session,
        _SDAP_Config_sdap_HeaderDL,
        _SDAP_Config_sdap_HeaderUL,
        _SDAP_Config_defaultDRB,
        __SDAP_Config_mappedQoS_FlowsToAdd__item_,
        _SDAP_Config_mappedQoS_FlowsToAdd,
        __SDAP_Config_mappedQoS_FlowsToRelease__item_,
        _SDAP_Config_mappedQoS_FlowsToRelease,
        SDAP_Config,
        QFI,
        PDU_SessionID,
        _SearchSpace_searchSpaceId,
        _SearchSpace_controlResourceSetId,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl1,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl2,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl4,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl5,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl8,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl10,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl16,
        __SearchSpace_monitoringSlotPeriodicityAndOffset_sl20,
        _SearchSpace_monitoringSlotPeriodicityAndOffset,
        _SearchSpace_monitoringSymbolsWithinSlot,
        __SearchSpace_nrofCandidates_aggregationLevel1,
        __SearchSpace_nrofCandidates_aggregationLevel2,
        __SearchSpace_nrofCandidates_aggregationLevel4,
        __SearchSpace_nrofCandidates_aggregationLevel8,
        __SearchSpace_nrofCandidates_aggregationLevel16,
        _SearchSpace_nrofCandidates,
        ___SearchSpace_searchSpaceType_common_dci_Format0_0_AndFormat1_0,
        _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel1,
        _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel2,
        _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel4,
        _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel8,
        _____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI_aggregationLevel16,
        ____SearchSpace_searchSpaceType_common_dci_Format2_0_nrofCandidates_SFI,
        ___SearchSpace_searchSpaceType_common_dci_Format2_0,
        ___SearchSpace_searchSpaceType_common_dci_Format2_1,
        ___SearchSpace_searchSpaceType_common_dci_Format2_2,
        ____SearchSpace_searchSpaceType_common_dci_Format2_3_monitoringPeriodicity,
        ____SearchSpace_searchSpaceType_common_dci_Format2_3_nrofPDCCH_Candidates,
        ___SearchSpace_searchSpaceType_common_dci_Format2_3,
        __SearchSpace_searchSpaceType_common,
        ___SearchSpace_searchSpaceType_ue_Specific_dci_Formats,
        __SearchSpace_searchSpaceType_ue_Specific,
        _SearchSpace_searchSpaceType,
        SearchSpace,
        SearchSpaceId,
        _SecurityAlgorithmConfig_cipheringAlgorithm,
        _SecurityAlgorithmConfig_integrityProtAlgorithm,
        SecurityAlgorithmConfig,
        IntegrityProtAlgorithm,
        CipheringAlgorithm,
        ServCellIndex,
        _ServingCellConfig_tdd_UL_DL_ConfigurationDedicated,
        _ServingCellConfig_initialDownlinkBWP,
        __ServingCellConfig_downlinkBWP_ToReleaseList__item_,
        _ServingCellConfig_downlinkBWP_ToReleaseList,
        __ServingCellConfig_downlinkBWP_ToAddModList__item_,
        _ServingCellConfig_downlinkBWP_ToAddModList,
        _ServingCellConfig_firstActiveDownlinkBWP_Id,
        _ServingCellConfig_bwp_InactivityTimer,
        _ServingCellConfig_defaultDownlinkBWP_Id,
        _ServingCellConfig_uplinkConfig,
        _ServingCellConfig_supplementaryUplink,
        __ServingCellConfig_pdsch_ServingCellConfig_release,
        __ServingCellConfig_pdsch_ServingCellConfig_setup,
        _ServingCellConfig_pdsch_ServingCellConfig,
        __ServingCellConfig_csi_MeasConfig_release,
        __ServingCellConfig_csi_MeasConfig_setup,
        _ServingCellConfig_csi_MeasConfig,
        __ServingCellConfig_carrierSwitching_release,
        __ServingCellConfig_carrierSwitching_setup,
        _ServingCellConfig_carrierSwitching,
        _ServingCellConfig_sCellDeactivationTimer,
        _ServingCellConfig_crossCarrierSchedulingConfig,
        _ServingCellConfig_tag_Id,
        _ServingCellConfig_ue_BeamLockFunction,
        _ServingCellConfig_pathlossReferenceLinking,
        ServingCellConfig,
        _UplinkConfig_initialUplinkBWP,
        __UplinkConfig_uplinkBWP_ToReleaseList__item_,
        _UplinkConfig_uplinkBWP_ToReleaseList,
        __UplinkConfig_uplinkBWP_ToAddModList__item_,
        _UplinkConfig_uplinkBWP_ToAddModList,
        _UplinkConfig_firstActiveUplinkBWP_Id,
        __UplinkConfig_pusch_ServingCellConfig_release,
        __UplinkConfig_pusch_ServingCellConfig_setup,
        _UplinkConfig_pusch_ServingCellConfig,
        UplinkConfig,
        _ServingCellConfigCommon_physCellId,
        _ServingCellConfigCommon_frequencyInfoDL,
        _ServingCellConfigCommon_initialDownlinkBWP,
        _ServingCellConfigCommon_uplinkConfigCommon,
        _ServingCellConfigCommon_supplementaryUplinkConfig,
        __ServingCellConfigCommon_ssb_PositionsInBurst_shortBitmap,
        __ServingCellConfigCommon_ssb_PositionsInBurst_mediumBitmap,
        __ServingCellConfigCommon_ssb_PositionsInBurst_longBitmap,
        _ServingCellConfigCommon_ssb_PositionsInBurst,
        _ServingCellConfigCommon_ssb_periodicityServingCell,
        _ServingCellConfigCommon_dmrs_TypeA_Position,
        __ServingCellConfigCommon_lte_CRS_ToMatchAround_release,
        __ServingCellConfigCommon_lte_CRS_ToMatchAround_setup,
        _ServingCellConfigCommon_lte_CRS_ToMatchAround,
        __ServingCellConfigCommon_rateMatchPatternToAddModList__item_,
        _ServingCellConfigCommon_rateMatchPatternToAddModList,
        __ServingCellConfigCommon_rateMatchPatternToReleaseList__item_,
        _ServingCellConfigCommon_rateMatchPatternToReleaseList,
        _ServingCellConfigCommon_subcarrierSpacing,
        _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon,
        _ServingCellConfigCommon_tdd_UL_DL_ConfigurationCommon2,
        _ServingCellConfigCommon_ss_PBCH_BlockPower,
        ServingCellConfigCommon,
        _UplinkConfigCommon_frequencyInfoUL,
        _UplinkConfigCommon_initialUplinkBWP,
        UplinkConfigCommon,
        SINR_Range,
        _SlotFormatCombinationsPerCell_servingCellId,
        _SlotFormatCombinationsPerCell_subcarrierSpacing,
        _SlotFormatCombinationsPerCell_subcarrierSpacing2,
        __SlotFormatCombinationsPerCell_slotFormatCombinations__item_,
        _SlotFormatCombinationsPerCell_slotFormatCombinations,
        _SlotFormatCombinationsPerCell_positionInDCI,
        SlotFormatCombinationsPerCell,
        _SlotFormatCombination_slotFormatCombinationId,
        __SlotFormatCombination_slotFormats__item_,
        _SlotFormatCombination_slotFormats,
        SlotFormatCombination,
        SlotFormatCombinationId,
        _SlotFormatIndicator_sfi_RNTI,
        _SlotFormatIndicator_dci_PayloadSize,
        __SlotFormatIndicator_slotFormatCombToAddModList__item_,
        _SlotFormatIndicator_slotFormatCombToAddModList,
        __SlotFormatIndicator_slotFormatCombToReleaseList__item_,
        _SlotFormatIndicator_slotFormatCombToReleaseList,
        SlotFormatIndicator,
        S_NSSAI,
        _SPS_Config_periodicity,
        _SPS_Config_nrofHARQ_Processes,
        _SPS_Config_n1PUCCH_AN,
        SPS_Config,
        SRB_Identity,
        __SRS_Config_srs_ResourceSetToReleaseList__item_,
        _SRS_Config_srs_ResourceSetToReleaseList,
        __SRS_Config_srs_ResourceSetToAddModList__item_,
        _SRS_Config_srs_ResourceSetToAddModList,
        __SRS_Config_srs_ResourceToReleaseList__item_,
        _SRS_Config_srs_ResourceToReleaseList,
        __SRS_Config_srs_ResourceToAddModList__item_,
        _SRS_Config_srs_ResourceToAddModList,
        _SRS_Config_tpc_Accumulation,
        SRS_Config,
        _SRS_ResourceSet_srs_ResourceSetId,
        __SRS_ResourceSet_srs_ResourceIdList__item_,
        _SRS_ResourceSet_srs_ResourceIdList,
        ___SRS_ResourceSet_resourceType_aperiodic_aperiodicSRS_ResourceTrigger,
        ___SRS_ResourceSet_resourceType_aperiodic_csi_RS,
        ___SRS_ResourceSet_resourceType_aperiodic_slotOffset,
        __SRS_ResourceSet_resourceType_aperiodic,
        ___SRS_ResourceSet_resourceType_semi_persistent_associatedCSI_RS,
        __SRS_ResourceSet_resourceType_semi_persistent,
        ___SRS_ResourceSet_resourceType_periodic_associatedCSI_RS,
        __SRS_ResourceSet_resourceType_periodic,
        _SRS_ResourceSet_resourceType,
        _SRS_ResourceSet_usage,
        _SRS_ResourceSet_alpha,
        _SRS_ResourceSet_p0,
        __SRS_ResourceSet_pathlossReferenceRS_ssb_Index,
        __SRS_ResourceSet_pathlossReferenceRS_csi_RS_Index,
        _SRS_ResourceSet_pathlossReferenceRS,
        _SRS_ResourceSet_srs_PowerControlAdjustmentStates,
        SRS_ResourceSet,
        SRS_ResourceSetId,
        _SRS_Resource_srs_ResourceId,
        _SRS_Resource_nrofSRS_Ports,
        _SRS_Resource_ptrs_PortIndex,
        ___SRS_Resource_transmissionComb_n2_combOffset_n2,
        ___SRS_Resource_transmissionComb_n2_cyclicShift_n2,
        __SRS_Resource_transmissionComb_n2,
        ___SRS_Resource_transmissionComb_n4_combOffset_n4,
        ___SRS_Resource_transmissionComb_n4_cyclicShift_n4,
        __SRS_Resource_transmissionComb_n4,
        _SRS_Resource_transmissionComb,
        __SRS_Resource_resourceMapping_startPosition,
        __SRS_Resource_resourceMapping_nrofSymbols,
        __SRS_Resource_resourceMapping_repetitionFactor,
        _SRS_Resource_resourceMapping,
        _SRS_Resource_freqDomainPosition,
        _SRS_Resource_freqDomainShift,
        __SRS_Resource_freqHopping_c_SRS,
        __SRS_Resource_freqHopping_b_SRS,
        __SRS_Resource_freqHopping_b_hop,
        _SRS_Resource_freqHopping,
        _SRS_Resource_groupOrSequenceHopping,
        __SRS_Resource_resourceType_aperiodic,
        ___SRS_Resource_resourceType_semi_persistent_periodicityAndOffset_sp,
        __SRS_Resource_resourceType_semi_persistent,
        ___SRS_Resource_resourceType_periodic_periodicityAndOffset_p,
        __SRS_Resource_resourceType_periodic,
        _SRS_Resource_resourceType,
        _SRS_Resource_sequenceId,
        __SRS_Resource_spatialRelationInfo_ssb_Index,
        __SRS_Resource_spatialRelationInfo_csi_RS_Index,
        __SRS_Resource_spatialRelationInfo_srs,
        _SRS_Resource_spatialRelationInfo,
        SRS_Resource,
        SRS_ResourceId,
        _SRS_PeriodicityAndOffset_sl1,
        _SRS_PeriodicityAndOffset_sl2,
        _SRS_PeriodicityAndOffset_sl4,
        _SRS_PeriodicityAndOffset_sl5,
        _SRS_PeriodicityAndOffset_sl8,
        _SRS_PeriodicityAndOffset_sl10,
        _SRS_PeriodicityAndOffset_sl16,
        _SRS_PeriodicityAndOffset_sl20,
        _SRS_PeriodicityAndOffset_sl32,
        _SRS_PeriodicityAndOffset_sl40,
        _SRS_PeriodicityAndOffset_sl64,
        _SRS_PeriodicityAndOffset_sl80,
        _SRS_PeriodicityAndOffset_sl160,
        _SRS_PeriodicityAndOffset_sl320,
        _SRS_PeriodicityAndOffset_sl640,
        _SRS_PeriodicityAndOffset_sl1280,
        _SRS_PeriodicityAndOffset_sl2560,
        SRS_PeriodicityAndOffset,
        _SRS_CarrierSwitching_srs_SwitchFromServCellIndex,
        ___SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA__item_,
        __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeA,
        __SRS_CarrierSwitching_srs_TPC_PDCCH_Group_typeB,
        _SRS_CarrierSwitching_srs_TPC_PDCCH_Group,
        __SRS_CarrierSwitching_srs_CellToSFI__item_,
        _SRS_CarrierSwitching_srs_CellToSFI,
        __SRS_CarrierSwitching_monitoringCells__item_,
        _SRS_CarrierSwitching_monitoringCells,
        SRS_CarrierSwitching,
        _SRS_TPC_PDCCH_Config_startingBitOfFormat2_3,
        _SRS_TPC_PDCCH_Config_fieldTypeFormat2_3,
        __SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist__item_,
        _SRS_TPC_PDCCH_Config_srs_CC_SetIndexlist,
        SRS_TPC_PDCCH_Config,
        _SRS_CC_SetIndex_cc_SetIndex,
        _SRS_CC_SetIndex_cc_IndexInOneCC_Set,
        SRS_CC_SetIndex,
        SSB_Index,
        SubcarrierSpacing,
        _TCI_State_tci_StateId,
        _TCI_State_qcl_Type1,
        _TCI_State_qcl_Type2,
        _TCI_State_nrofPTRS_Ports,
        TCI_State,
        _QCL_Info_cell,
        _QCL_Info_bwp_Id,
        __QCL_Info_referenceSignal_csi_rs,
        __QCL_Info_referenceSignal_ssb,
        __QCL_Info_referenceSignal_csi_RS_for_tracking,
        _QCL_Info_referenceSignal,
        _QCL_Info_qcl_Type,
        QCL_Info,
        TCI_StateId,
        _TDD_UL_DL_ConfigCommon_referenceSubcarrierSpacing,
        _TDD_UL_DL_ConfigCommon_dl_UL_TransmissionPeriodicity,
        _TDD_UL_DL_ConfigCommon_nrofDownlinkSlots,
        _TDD_UL_DL_ConfigCommon_nrofDownlinkSymbols,
        _TDD_UL_DL_ConfigCommon_nrofUplinkSlots,
        _TDD_UL_DL_ConfigCommon_nrofUplinkSymbols,
        TDD_UL_DL_ConfigCommon,
        __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList__item_,
        _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToAddModList,
        __TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList__item_,
        _TDD_UL_DL_ConfigDedicated_slotSpecificConfigurationsToreleaseList,
        TDD_UL_DL_ConfigDedicated,
        _TDD_UL_DL_SlotConfig_slotIndex,
        __TDD_UL_DL_SlotConfig_symbols_allDownlink,
        __TDD_UL_DL_SlotConfig_symbols_allUplink,
        ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofDownlinkSymbols,
        ___TDD_UL_DL_SlotConfig_symbols_explicit_nrofUplinkSymbols,
        __TDD_UL_DL_SlotConfig_symbols_explicit,
        _TDD_UL_DL_SlotConfig_symbols,
        TDD_UL_DL_SlotConfig,
        TDD_UL_DL_SlotIndex,
        TimeToTrigger,
        _ZP_CSI_RS_Resource_zp_CSI_RS_ResourceId,
        _ZP_CSI_RS_Resource_resourceMapping,
        _ZP_CSI_RS_Resource_periodicityAndOffset,
        ZP_CSI_RS_Resource,
        ZP_CSI_RS_ResourceId,
        _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceSetId,
        __ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList__item_,
        _ZP_CSI_RS_ResourceSet_zp_CSI_RS_ResourceIdList,
        _ZP_CSI_RS_ResourceSet_resourceType,
        ZP_CSI_RS_ResourceSet,
        ZP_CSI_RS_ResourceSetId,
        _BandCombinationList__item_,
        BandCombinationList,
        _BandCombination_bandAndDL_ParametersList,
        _BandCombination_bandCombinationsUL,
        __BandCombination_bandCombinationParametersList__item_,
        _BandCombination_bandCombinationParametersList,
        BandCombination,
        _BandAndDL_ParametersList__item_,
        BandAndDL_ParametersList,
        _BandAndDL_Parameters_bandAndDL_ParametersEUTRA,
        _BandAndDL_Parameters_bandAndDL_ParametersNR,
        BandAndDL_Parameters,
        _BandCombinationParameters_ca_ParametersNR,
        _BandCombinationParameters_mrdc_Parameters,
        BandCombinationParameters,
        _CA_ParametersNR_multipleTimingAdvances,
        _CA_ParametersNR_simultaneousRxTxInterBandCA,
        _CA_ParametersNR_supportedBandwidthCombinationSet,
        CA_ParametersNR,
        _MRDC_Parameters_singleUL_Transmission,
        _MRDC_Parameters_ul_SharingEUTRA_NR,
        _MRDC_Parameters_ul_SwitchingTimeEUTRA_NR,
        _MRDC_Parameters_simultaneousRxTxInterBandENDC,
        _MRDC_Parameters_asyncIntraBandENDC,
        _MRDC_Parameters_basebandProcesingCombinationMRDC,
        MRDC_Parameters,
        _BandAndDL_ParametersEUTRA_bandEUTRA,
        _BandAndDL_ParametersEUTRA_ca_BandwidthClassDL_EUTRA,
        __BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List__item_,
        _BandAndDL_ParametersEUTRA_intraBandContiguousCC_InfoDL_EUTRA_List,
        BandAndDL_ParametersEUTRA,
        _BandAndDL_ParametersNR_bandNR,
        _BandAndDL_ParametersNR_ca_BandwidthClassDL,
        _BandAndDL_ParametersNR_intraBandFreqSeparationDL,
        __BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List__item_,
        _BandAndDL_ParametersNR_intraBandContiguousCC_InfoDL_List,
        BandAndDL_ParametersNR,
        _IntraBandContiguousCC_InfoDL_maxNumberMIMO_LayersPDSCH,
        IntraBandContiguousCC_InfoDL,
        _IntraBandContiguousCC_InfoDL_EUTRA_mimo_CapabilityDL,
        IntraBandContiguousCC_InfoDL_EUTRA,
        _BandCombinationParametersUL_List__item_,
        BandCombinationParametersUL_List,
        _BandCombinationParametersUL__item_,
        BandCombinationParametersUL,
        _BandParametersUL_bandParametersUL_EUTRA,
        _BandParametersUL_bandParametersUL_NR,
        BandParametersUL,
        _BandParametersUL_EUTRA_ca_BandwidthClassUL_EUTRA,
        __BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List__item_,
        _BandParametersUL_EUTRA_intraBandContiguousCC_InfoUL_EUTRA_List,
        BandParametersUL_EUTRA,
        _BandParametersUL_NR_ca_BandwidthClassUL,
        _BandParametersUL_NR_intraBandFreqSeparationUL,
        __BandParametersUL_NR_intraBandContiguousCC_InfoUL_List__item_,
        _BandParametersUL_NR_intraBandContiguousCC_InfoUL_List,
        BandParametersUL_NR,
        _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersCB_PUSCH,
        _IntraBandContiguousCC_InfoUL_maxNumberMIMO_LayersNonCB_PUSCH,
        IntraBandContiguousCC_InfoUL,
        _IntraBandContiguousCC_InfoUL_EUTRA_mimo_CapabilityUL,
        IntraBandContiguousCC_InfoUL_EUTRA,
        _BasebandCombinationParametersUL_List__item_,
        BasebandCombinationParametersUL_List,
        _BasebandCombinationParametersUL__item_,
        BasebandCombinationParametersUL,
        _BasebandParametersPerBandUL_ca_BandwidthClassUL,
        _BasebandParametersPerBandUL_freqRange,
        __BasebandParametersPerBandUL_basebandParametersPerCC_UL__item_,
        _BasebandParametersPerBandUL_basebandParametersPerCC_UL,
        BasebandParametersPerBandUL,
        _BasebandParametersPerCC_UL_supportedSubcarrierSpacingUL,
        __BasebandParametersPerCC_UL_supportedBandwidthUL_fr1,
        __BasebandParametersPerCC_UL_supportedBandwidthUL_fr2,
        _BasebandParametersPerCC_UL_supportedBandwidthUL,
        _BasebandParametersPerCC_UL_scalingFactor0dot75,
        _BasebandParametersPerCC_UL_maxNumberMIMO_LayersCB_PUSCH,
        _BasebandParametersPerCC_UL_maxNumberMIMO_LayersNonCB_PUSCH,
        _BasebandParametersPerCC_UL_supportedModulationOrderUL,
        _BasebandParametersPerCC_UL_supportedSRS_Resources,
        _BasebandParametersPerCC_UL_srs_TxSwitch,
        _BasebandParametersPerCC_UL_lowLatencyCSI_Feedback,
        __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_15kHz,
        __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_30kHz,
        __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_60kHz,
        __BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot_scs_120kHz,
        _BasebandParametersPerCC_UL_pusch_DifferentTB_PerSlot,
        _BasebandParametersPerCC_UL_twoPUCCH_Group,
        _BasebandParametersPerCC_UL_diffNumerologyAcrossPUCCH_Group,
        _BasebandParametersPerCC_UL_diffNumerologyWithinPUCCH_Group,
        _BasebandParametersPerCC_UL_crossCarrierScheduling,
        _BasebandParametersPerCC_UL_supportedNumberTAG,
        _BasebandParametersPerCC_UL_dynamicSwitchSUL,
        _BasebandParametersPerCC_UL_simultaneousTxSUL_NonSUL,
        _BasebandParametersPerCC_UL_searchSpaceSharingCA_UL,
        BasebandParametersPerCC_UL,
        _BasebandProcessingCombinationMRDC__item_,
        BasebandProcessingCombinationMRDC,
        _BasebandProcessingCombinationLink_basebandProcessingCombinationIndexMN,
        __BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN__item_,
        _BasebandProcessingCombinationLink_basebandProcessingCombinationLinkedIndexSN,
        BasebandProcessingCombinationLink,
        BasebandProcessingCombinationIndex,
        CA_BandwidthClassNR,
        CA_BandwidthClassEUTRA,
        FreqBandIndicatorEUTRA,
        _FreqBandList__item_,
        FreqBandList,
        _FreqBandInformation_bandEUTRA,
        _FreqBandInformation_bandNR,
        FreqBandInformation,
        FreqSeparationClass,
        MIMO_LayersDL,
        MIMO_LayersUL,
        ModulationOrder,
        RAT_Type,
        _SupportedBasebandProcessingCombination__item_,
        SupportedBasebandProcessingCombination,
        __BasebandProcessingCombination_basebandParametersDL__item_,
        _BasebandProcessingCombination_basebandParametersDL,
        _BasebandProcessingCombination_basebandParametersUL,
        BasebandProcessingCombination,
        _BasebandParametersPerBandDL_ca_BandwidthClassDL,
        _BasebandParametersPerBandDL_freqRange,
        __BasebandParametersPerBandDL_basebandParametersPerCC_DL__item_,
        _BasebandParametersPerBandDL_basebandParametersPerCC_DL,
        BasebandParametersPerBandDL,
        _BasebandParametersPerCC_DL_supportedSubcarrierSpacingDL,
        __BasebandParametersPerCC_DL_supportedBandwidthDL_fr1,
        __BasebandParametersPerCC_DL_supportedBandwidthDL_fr2,
        _BasebandParametersPerCC_DL_supportedBandwidthDL,
        _BasebandParametersPerCC_DL_scalingFactor0dot75,
        __BasebandParametersPerCC_DL_timeDurationForQCL_scs_60kHz,
        __BasebandParametersPerCC_DL_timeDurationForQCL_sch_120kHz,
        _BasebandParametersPerCC_DL_timeDurationForQCL,
        _BasebandParametersPerCC_DL_scellWithoutSSB,
        _BasebandParametersPerCC_DL_csi_RS_MeasSCellWithoutSSB,
        _BasebandParametersPerCC_DL_maxNumberMIMO_LayersPDSCH,
        _BasebandParametersPerCC_DL_supportedModulationOrderDL,
        _BasebandParametersPerCC_DL_srs_AssocCSI_RS,
        _BasebandParametersPerCC_DL_type1_3_CSS,
        _BasebandParametersPerCC_DL_pdcchMonitoringAnyOccasions,
        _BasebandParametersPerCC_DL_ue_SpecificUL_DL_Assignment,
        __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_15kHz,
        __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_30kHz,
        __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_60kHz,
        __BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot_scs_120kHz,
        _BasebandParametersPerCC_DL_pdsch_DifferentTB_PerSlot,
        _BasebandParametersPerCC_DL_crossCarrierScheduling,
        _BasebandParametersPerCC_DL_searchSpaceSharingCA_DL,
        BasebandParametersPerCC_DL,
        _UE_CapabilityRAT_ContainerList__item_,
        UE_CapabilityRAT_ContainerList,
        _UE_CapabilityRAT_Container_rat_Type,
        _UE_CapabilityRAT_Container_ue_CapabilityRAT_Container,
        UE_CapabilityRAT_Container,
        _UE_MRDC_Capability_measParametersMRDC,
        _UE_MRDC_Capability_rf_ParametersMRDC,
        _UE_MRDC_Capability_phy_ParametersMRDC,
        _UE_MRDC_Capability_generalParametersMRDC,
        _UE_MRDC_Capability_fdd_Add_UE_MRDC_Capabilities,
        _UE_MRDC_Capability_tdd_Add_UE_MRDC_Capabilities,
        _UE_MRDC_Capability_fr1_Add_UE_MRDC_Capabilities,
        _UE_MRDC_Capability_fr2_Add_UE_MRDC_Capabilities,
        _UE_MRDC_Capability_lateNonCriticalExtension,
        _UE_MRDC_Capability_nonCriticalExtension,
        UE_MRDC_Capability,
        _UE_MRDC_CapabilityAddXDD_Mode_phy_ParametersMRDC_XDD_Diff,
        _UE_MRDC_CapabilityAddXDD_Mode_measParametersMRDC_XDD_Diff,
        _UE_MRDC_CapabilityAddXDD_Mode_generalParametersMRDC_XDD_Diff,
        UE_MRDC_CapabilityAddXDD_Mode,
        _UE_MRDC_CapabilityAddFRX_Mode_phy_ParametersMRDC_FRX_Diff,
        _UE_MRDC_CapabilityAddFRX_Mode_measParametersMRDC_FRX_Diff,
        UE_MRDC_CapabilityAddFRX_Mode,
        _RF_ParametersMRDC_supportedBandCombination,
        _RF_ParametersMRDC_bandCombinationParametersUL_List,
        RF_ParametersMRDC,
        _Phy_ParametersMRDC_phy_ParametersMRDC_XDD_Diff,
        _Phy_ParametersMRDC_phy_ParametersMRDC_FRX_Diff,
        Phy_ParametersMRDC,
        _Phy_ParametersMRDC_XDD_Diff_dynamicPowerSharing,
        _Phy_ParametersMRDC_XDD_Diff_tdm_Pattern,
        Phy_ParametersMRDC_XDD_Diff,
        _Phy_ParametersMRDC_FRX_Diff_dynamicPowerSharing,
        _Phy_ParametersMRDC_FRX_Diff_tdm_Pattern,
        Phy_ParametersMRDC_FRX_Diff,
        _MeasParametersMRDC_measParametersMRDC_Common,
        _MeasParametersMRDC_measParametersMRDC_XDD_Diff,
        _MeasParametersMRDC_measParametersMRDC_FRX_Diff,
        MeasParametersMRDC,
        _MeasParametersMRDC_Common_independentGapConfig,
        MeasParametersMRDC_Common,
        _MeasParametersMRDC_XDD_Diff_sftd_MeasPSCell,
        _MeasParametersMRDC_XDD_Diff_sftd_MeasNR_Cell,
        MeasParametersMRDC_XDD_Diff,
        _MeasParametersMRDC_FRX_Diff_simultaneousRxDataSSB_DiffNumerology,
        MeasParametersMRDC_FRX_Diff,
        _GeneralParametersMRDC_XDD_Diff_splitSRB_WithOneUL_Path,
        _GeneralParametersMRDC_XDD_Diff_splitDRB_withUL_Both_MCG_SCG,
        _GeneralParametersMRDC_XDD_Diff_srb3,
        GeneralParametersMRDC_XDD_Diff,
        _UE_NR_Capability_pdcp_Parameters,
        _UE_NR_Capability_rlc_Parameters,
        _UE_NR_Capability_mac_Parameters,
        _UE_NR_Capability_phy_Parameters,
        _UE_NR_Capability_rf_Parameters,
        _UE_NR_Capability_measParameters,
        _UE_NR_Capability_fdd_Add_UE_NR_Capabilities,
        _UE_NR_Capability_tdd_Add_UE_NR_Capabilities,
        _UE_NR_Capability_fr1_Add_UE_NR_Capabilities,
        _UE_NR_Capability_fr2_Add_UE_NR_Capabilities,
        _UE_NR_Capability_lateNonCriticalExtension,
        _UE_NR_Capability_nonCriticalExtension,
        UE_NR_Capability,
        _UE_NR_CapabilityAddXDD_Mode_phy_ParametersXDD_Diff,
        _UE_NR_CapabilityAddXDD_Mode_mac_ParametersXDD_Diff,
        _UE_NR_CapabilityAddXDD_Mode_measParametersXDD_Diff,
        UE_NR_CapabilityAddXDD_Mode,
        _UE_NR_CapabilityAddFRX_Mode_phy_ParametersFRX_Diff,
        _UE_NR_CapabilityAddFRX_Mode_measParametersFRX_Diff,
        UE_NR_CapabilityAddFRX_Mode,
        _Phy_Parameters_phy_ParametersCommon,
        _Phy_Parameters_phy_ParametersXDD_Diff,
        _Phy_Parameters_phy_ParametersFRX_Diff,
        _Phy_Parameters_phy_ParametersFR1,
        _Phy_Parameters_phy_ParametersFR2,
        _Phy_Parameters_supportedBasebandProcessingCombination,
        _Phy_Parameters_basebandCombinationParametersUL_List,
        Phy_Parameters,
        _Phy_ParametersCommon_csi_RS_CFRA_ForHO,
        _Phy_ParametersCommon_dynamicPRB_BundlingDL,
        _Phy_ParametersCommon_sp_CSI_ReportPUCCH,
        _Phy_ParametersCommon_sp_CSI_ReportPUSCH,
        _Phy_ParametersCommon_nzp_CSI_RS_IntefMgmt,
        _Phy_ParametersCommon_type2_SP_CSI_Feedback_LongPUCCH,
        _Phy_ParametersCommon_multipleCORESET,
        _Phy_ParametersCommon_dynamicSFI,
        _Phy_ParametersCommon_precoderGranularityCORESET,
        _Phy_ParametersCommon_dynamicHARQ_ACK_Codebook,
        _Phy_ParametersCommon_semiStaticHARQ_ACK_Codebook,
        _Phy_ParametersCommon_spatialBundlingHARQ_ACK,
        _Phy_ParametersCommon_dynamicBetaOffsetInd_HARQ_ACK_CSI,
        _Phy_ParametersCommon_pucch_Repetition_F1_3_4,
        _Phy_ParametersCommon_ra_Type0_PUSCH,
        _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PDSCH,
        _Phy_ParametersCommon_dynamicSwitchRA_Type0_1_PUSCH,
        _Phy_ParametersCommon_pdsch_MappingTypeA,
        _Phy_ParametersCommon_pdsch_MappingTypeB,
        _Phy_ParametersCommon_interleavingVRB_ToPRB_PDSCH,
        _Phy_ParametersCommon_interleavingVRB_ToPRB_PUSCH,
        _Phy_ParametersCommon_interSlotFreqHopping_PUSCH,
        _Phy_ParametersCommon_type1_PUSCH_RepetitionOneSlot,
        _Phy_ParametersCommon_type1_PUSCH_RepetitionMultiSlots,
        _Phy_ParametersCommon_type2_PUSCH_RepetitionOneSlot,
        _Phy_ParametersCommon_type2_PUSCH_RepetitionMultiSlots,
        _Phy_ParametersCommon_pusch_RepetitionMultiSlots,
        _Phy_ParametersCommon_pdsch_RepetitionMultiSlots,
        _Phy_ParametersCommon_downlinkSPS,
        _Phy_ParametersCommon_configuredUL_GrantType1,
        _Phy_ParametersCommon_configuredUL_GrantType2,
        _Phy_ParametersCommon_pre_EmptIndication_DL,
        _Phy_ParametersCommon_cbg_TransIndication,
        _Phy_ParametersCommon_cbg_FlushIndication_DL,
        _Phy_ParametersCommon_dynamicHARQ_ACK_CodeB_CBG_Retx_DL,
        _Phy_ParametersCommon_rateMatchingResrcSetSemi_Static,
        _Phy_ParametersCommon_rateMatchingResrcSetDynamic,
        _Phy_ParametersCommon_rateMatchingLTE_CRS,
        _Phy_ParametersCommon_bwp_SwitchingDelay,
        Phy_ParametersCommon,
        _Phy_ParametersXDD_Diff_twoPUCCH_F0_2_ConsecSymbols,
        _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUSCH,
        _Phy_ParametersXDD_Diff_twoDifferentTPC_Loop_PUCCH,
        Phy_ParametersXDD_Diff,
        _Phy_ParametersFRX_Diff_oneFL_DMRS_TwoAdditionalDMRS,
        _Phy_ParametersFRX_Diff_twoFL_DMRS,
        _Phy_ParametersFRX_Diff_twoFL_DMRS_TwoAdditionalDMRS,
        _Phy_ParametersFRX_Diff_oneFL_DMRS_ThreeAdditionalDMRS,
        _Phy_ParametersFRX_Diff_supportedDMRS_TypeDL,
        _Phy_ParametersFRX_Diff_supportedDMRS_TypeUL,
        _Phy_ParametersFRX_Diff_semiOpenLoopCSI,
        _Phy_ParametersFRX_Diff_csi_ReportWithoutPMI,
        _Phy_ParametersFRX_Diff_csi_ReportWithCRI,
        _Phy_ParametersFRX_Diff_csi_ReportWithoutCQI,
        _Phy_ParametersFRX_Diff_onePortsPTRS,
        _Phy_ParametersFRX_Diff_twoPUCCH_F0_2_ConsecSymbols,
        _Phy_ParametersFRX_Diff_pucch_F2_WithFH,
        _Phy_ParametersFRX_Diff_pucch_F3_WithFH,
        _Phy_ParametersFRX_Diff_pucch_F4_WithFH,
        _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F0_2,
        _Phy_ParametersFRX_Diff_freqHoppingPUCCH_F1_3_4,
        _Phy_ParametersFRX_Diff_mux_SR_HARQ_ACK_CSI_PUCCH,
        _Phy_ParametersFRX_Diff_uci_CodeBlockSegmentation,
        _Phy_ParametersFRX_Diff_onePUCCH_LongAndShortFormat,
        _Phy_ParametersFRX_Diff_twoPUCCH_AnyOthersInSlot,
        _Phy_ParametersFRX_Diff_intraSlotFreqHopping_PUSCH,
        _Phy_ParametersFRX_Diff_pusch_LBRM,
        _Phy_ParametersFRX_Diff_pdcch_BlindDetectionCA,
        _Phy_ParametersFRX_Diff_tpc_PUSCH_RNTI,
        _Phy_ParametersFRX_Diff_tpc_PUCCH_RNTI,
        _Phy_ParametersFRX_Diff_tpc_SRS_RNTI,
        _Phy_ParametersFRX_Diff_absoluteTPC_Command,
        _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUSCH,
        _Phy_ParametersFRX_Diff_twoDifferentTPC_Loop_PUCCH,
        _Phy_ParametersFRX_Diff_pusch_HalfPi_BPSK,
        _Phy_ParametersFRX_Diff_pucch_F3_4_HalfPi_BPSK,
        _Phy_ParametersFRX_Diff_oneSymbolGP_TDD,
        _Phy_ParametersFRX_Diff_almostContiguousCP_OFDM_UL,
        Phy_ParametersFRX_Diff,
        _Phy_ParametersFR1_pdcchMonitoringSingleOccasion,
        _Phy_ParametersFR1_scs_60kHz,
        _Phy_ParametersFR1_pdsch_256QAM_FR1,
        Phy_ParametersFR1,
        _Phy_ParametersFR2_calibrationGapPA,
        Phy_ParametersFR2,
        _RF_Parameters_supportedBandListNR,
        _RF_Parameters_supportedBandCombination,
        _RF_Parameters_bandCombinationParametersUL_List,
        RF_Parameters,
        _SupportedBandListNR__item_,
        SupportedBandListNR,
        _BandNR_bandNR,
        _BandNR_modifiedMPR_Behaviour,
        _BandNR_maxChannelBW_PerCC,
        _BandNR_mimo_ParametersPerBand,
        _BandNR_extendedCP,
        _BandNR_phaseCoherenceUL,
        _BandNR_scellWithoutSSB,
        _BandNR_csi_RS_MeasSCellWithoutSSB,
        _BandNR_srs_AssocCSI_RS,
        _BandNR_type1_3_CSS,
        _BandNR_multipleTCI,
        _BandNR_pdcchMonitoringAnyOccasions,
        _BandNR_ue_SpecificUL_DL_Assignment,
        __BandNR_pdsch_DifferentTB_PerSlot_scs_15kHz,
        __BandNR_pdsch_DifferentTB_PerSlot_scs_30kHz,
        __BandNR_pdsch_DifferentTB_PerSlot_scs_60kHz,
        __BandNR_pdsch_DifferentTB_PerSlot_scs_120kHz,
        _BandNR_pdsch_DifferentTB_PerSlot,
        __BandNR_pusch_DifferentTB_PerSlot_scs_15kHz,
        __BandNR_pusch_DifferentTB_PerSlot_scs_30kHz,
        __BandNR_pusch_DifferentTB_PerSlot_scs_60kHz,
        __BandNR_pusch_DifferentTB_PerSlot_scs_120kHz,
        _BandNR_pusch_DifferentTB_PerSlot,
        _BandNR_bwp_SameNumerology,
        _BandNR_bwp_DiffNumerology,
        _BandNR_twoPUCCH_Group,
        _BandNR_diffNumerologyAcrossPUCCH_Group,
        _BandNR_diffNumerologyWithinPUCCH_Group,
        _BandNR_crossCarrierScheduling,
        _BandNR_supportedNumberTAG,
        _BandNR_simultaneousTxSUL_NonSUL,
        _BandNR_searchSpaceSharingCA_DL,
        _BandNR_searchSpaceSharingCA_UL,
        _BandNR_pdsch_256QAM_FR2,
        _BandNR_pusch_256QAM,
        BandNR,
        __MIMO_ParametersPerBand_timeDurationForQCL_scs_60kHz,
        __MIMO_ParametersPerBand_timeDurationForQCL_sch_120kHz,
        _MIMO_ParametersPerBand_timeDurationForQCL,
        _MIMO_ParametersPerBand_maxNumberMIMO_LayersPDSCH,
        _MIMO_ParametersPerBand_maxNumberMIMO_LayersCB_PUSCH,
        _MIMO_ParametersPerBand_maxNumberMIMO_LayersNonCB_PUSCH,
        _MIMO_ParametersPerBand_maxNumberConfiguredTCIstates,
        _MIMO_ParametersPerBand_maxNumberActiveTCI_PerCC,
        _MIMO_ParametersPerBand_pusch_TransCoherence,
        _MIMO_ParametersPerBand_beamCorrespondence,
        _MIMO_ParametersPerBand_periodicBeamReport,
        _MIMO_ParametersPerBand_aperiodicBeamReport,
        _MIMO_ParametersPerBand_sp_BeamReportPUCCH,
        _MIMO_ParametersPerBand_sp_BeamReportPUSCH,
        _MIMO_ParametersPerBand_beamManagementSSB_CSI_RS,
        _MIMO_ParametersPerBand_maxNumberRxBeam,
        __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_15kHz,
        __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_30kHz,
        __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_60kHz,
        __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_120kHz,
        __MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL_scs_240kHz,
        _MIMO_ParametersPerBand_maxNumberRxTxBeamSwitchDL,
        _MIMO_ParametersPerBand_maxNumberNonGroupBeamReporting,
        _MIMO_ParametersPerBand_groupBeamReporting,
        __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourcePerSet,
        __MIMO_ParametersPerBand_uplinkBeamManagement_maxNumberSRS_ResourceSet,
        _MIMO_ParametersPerBand_uplinkBeamManagement,
        _MIMO_ParametersPerBand_maxNumberCSI_RS_BFR,
        _MIMO_ParametersPerBand_maxNumberSSB_BFR,
        _MIMO_ParametersPerBand_maxNumberCSI_RS_SSB_BFR,
        _MIMO_ParametersPerBand_twoPortsPTRS,
        _MIMO_ParametersPerBand_supportedSRS_Resources,
        _MIMO_ParametersPerBand_srs_TxSwitch,
        _MIMO_ParametersPerBand_maxNumberSimultaneousSRS_PerCC,
        _MIMO_ParametersPerBand_lowLatencyCSI_Feedback,
        MIMO_ParametersPerBand,
        _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceOneTx,
        _BeamManagementSSB_CSI_RS_maxNumberSSB_CSI_RS_ResourceTwoTx,
        _BeamManagementSSB_CSI_RS_supportedCSI_RS_Density,
        BeamManagementSSB_CSI_RS,
        _SRS_Resources_maxNumberAperiodicSRS_PerBWP,
        _SRS_Resources_maxNumberAperiodicSRS_PerBWP_PerSlot,
        _SRS_Resources_maxNumberPeriodicSRS_PerBWP,
        _SRS_Resources_maxNumberPeriodicSRS_PerBWP_PerSlot,
        _SRS_Resources_maxNumberSemiPersitentSRS_PerBWP,
        _SRS_Resources_maxNumberSP_SRS_PerBWP_PerSlot,
        _SRS_Resources_maxNumberSRS_Ports_PerResource,
        SRS_Resources,
        _SRS_TxSwitch_supportedSRS_TxPortSwitch,
        _SRS_TxSwitch_txSwitchImpactToRx,
        SRS_TxSwitch,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0000,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0001,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0002,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0003,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0004,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0006,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0101,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0102,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0103,
        __PDCP_Parameters_supportedROHC_Profiles_profile0x0104,
        _PDCP_Parameters_supportedROHC_Profiles,
        _PDCP_Parameters_maxNumberROHC_ContextSessions,
        _PDCP_Parameters_uplinkOnlyROHC_Profiles,
        _PDCP_Parameters_continueROHC_Context,
        _PDCP_Parameters_outOfOrderDelivery,
        _PDCP_Parameters_shortSN,
        PDCP_Parameters,
        _RLC_Parameters_am_WithShortSN,
        _RLC_Parameters_um_WithShortSN,
        _RLC_Parameters_um_WIthLongSN,
        RLC_Parameters,
        _MAC_Parameters_mac_ParametersCommon,
        _MAC_Parameters_mac_ParametersXDD_Diff,
        MAC_Parameters,
        _MAC_ParametersCommon_lcp_Restriction,
        _MAC_ParametersCommon_pucch_SpatialRelInfoMAC_CE,
        MAC_ParametersCommon,
        _MAC_ParametersXDD_Diff_skipUplinkTxDynamic,
        _MAC_ParametersXDD_Diff_logicalChannelSR_DelayTimer,
        _MAC_ParametersXDD_Diff_longDRX_Cycle,
        _MAC_ParametersXDD_Diff_shortDRX_Cycle,
        _MAC_ParametersXDD_Diff_multipleSR_Configurations,
        _MAC_ParametersXDD_Diff_multipleConfiguredGrantConfigurations,
        MAC_ParametersXDD_Diff,
        _MeasParameters_measParametersXDD_Diff,
        _MeasParameters_measParametersFRX_Diff,
        MeasParameters,
        _MeasParametersXDD_Diff_intraAndInterF_MeasAndReport,
        _MeasParametersXDD_Diff_eventA_MeasAndReport,
        MeasParametersXDD_Diff,
        _MeasParametersFRX_Diff_ss_SINR_Meas,
        _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithSSB,
        _MeasParametersFRX_Diff_csi_RSRP_AndRSRQ_MeasWithoutSSB,
        _MeasParametersFRX_Diff_csi_SINR_Meas,
        _MeasParametersFRX_Diff_csi_RS_RLM,
        MeasParametersFRX_Diff,
        RRC_TransactionIdentifier,
        maxBandComb,
        maxBasebandProcComb,
        maxEARFCN,
        maxNrofServingCells,
        maxNrofServingCells_1,
        maxNrofAggregatedCellsPerCellGroup,
        maxNrofSCells,
        maxNrofCellMeas,
        maxNrofSS_BlocksToAverage,
        maxNrofCSI_RS_ResourcesToAverage,
        maxNrofDL_Allocations,
        maxNrofSR_ConfigPerCellGroup,
        maxLCG_ID,
        maxLC_ID,
        maxNrofTAGs,
        maxNrofTAGs_1,
        maxNrofBWPs,
        maxNrofSymbols_1,
        maxNrofSlots,
        maxNrofSlots_1,
        maxNrofPhysicalResourceBlocks,
        maxNrofPhysicalResourceBlocks_1,
        maxNrofControlResourceSets,
        maxNrofControlResourceSets_1,
        maxCoReSetDuration,
        maxNrofSearchSpaces,
        maxNrofSearchSpaces_1,
        maxSFI_DCI_PayloadSize,
        maxSFI_DCI_PayloadSize_1,
        maxINT_DCI_PayloadSize,
        maxINT_DCI_PayloadSize_1,
        maxNrofRateMatchPatterns,
        maxNrofRateMatchPatterns_1,
        maxNrofCSI_ReportConfigurations,
        maxNrofCSI_ReportConfigurations_1,
        maxNrofCSI_ResourceConfigurations,
        maxNrofCSI_ResourceConfigurations_1,
        maxNrofAP_CSI_RS_ResourcesPerSet,
        maxNrOfCSI_AperiodicTriggers,
        maxNrofReportConfigPerAperiodicTrigger,
        maxNrofNZP_CSI_RS_Resources,
        maxNrofNZP_CSI_RS_Resources_1,
        maxNrofNZP_CSI_RS_ResourcesPerSet,
        maxNrofNZP_CSI_RS_ResourceSetsPerConfig,
        maxNrofZP_CSI_RS_Resources,
        maxNrofZP_CSI_RS_Resources_1,
        maxNrofZP_CSI_RS_ResourceSets_1,
        maxNrofZP_CSI_RS_ResourcesPerSet,
        maxNrofZP_CSI_RS_Sets,
        maxNrofCSI_IM_Resources,
        maxNrofCSI_IM_Resources_1,
        maxNrofCSI_IM_ResourcesPerSet,
        maxNrofCSI_IM_ResourceSetsPerConfig,
        maxNrofSSB_Resources_1,
        maxNrofCSI_SSB_ResourcePerSet,
        maxNrofCSI_SSB_ResourceSetsPerConfig,
        maxNrofFailureDetectionResources,
        maxNrofObjectId,
        maxNrofPageRec,
        maxNrofPCI_Ranges,
        maxNrofPLMN,
        maxNrofCSI_RS_ResourcesRRM,
        maxNrofCSI_RS_ResourcesRRM_1,
        maxNrofMeasId,
        maxNrofQuantityConfig,
        maxNrofCSI_RS_CellsRRM,
        maxNrofSRS_ResourceSets,
        maxNrofSRS_ResourceSets_1,
        maxNrofSRS_Resources,
        maxNrofSRS_Resources_1,
        maxNrofSRS_TriggerStates_1,
        maxRAT_CapabilityContainers,
        maxSimultaneousBands,
        maxNrofSlotFormatCombinationsPerCell,
        maxNrofSlotFormatCombinationsPerSet,
        maxNrofSlotFormatCombinationsPerSet_1,
        maxNrofPUCCH_Resources,
        maxNrofPUCCH_Resources_1,
        maxNrofPUCCH_ResourceSets,
        maxNrofPUCCH_ResourceSets_1,
        maxNrofPUCCH_ResourcesPerSet,
        maxNrofPUCCH_ResourcesPerSet_1,
        maxNrofPUCCH_P0_PerSet,
        maxNrofPUCCH_PathlossReferenceRSs,
        maxNrofPUCCH_PathlossReferenceRSs_1,
        maxNrofP0_PUSCH_AlphaSets,
        maxNrofP0_PUSCH_AlphaSets_1,
        maxNrofPUSCH_PathlossReferenceRSs,
        maxNrofPUSCH_PathlossReferenceRSs_1,
        maxBands,
        maxBandsMRDC,
        maxBandsEUTRA,
        maxCellPrep,
        maxCellReport,
        maxDRB,
        maxFreq,
        maxNrofCSI_RS,
        maxNrofCandidateBeams,
        maxNrofPCIsPerSMTC,
        maxNrofQFIs,
        maxNrofSR_Resources,
        maxNrofSlotFormatsPerCombination,
        maxNrofSpatialRelationInfos,
        maxNrofSRS_ResourcesPerSet,
        maxNrofIndexesToReport,
        maxNrofSSBs,
        maxNrofSSBs_1,
        maxNrofS_NSSAI,
        maxNrofTCI_StatesPDCCH,
        maxNrofTCI_States,
        maxNrofTCI_States_1,
        maxNrofUL_Allocations,
        maxQFI,
        maxRA_CSIRS_Resources,
        maxRA_OccasionsPerCSIRS,
        maxRA_Occasions_1,
        maxRA_SSB_Resources,
        maxSCSs,
        maxSecondaryCellGroups,
        maxNrofServingCellsEUTRA,
        maxMBSFN_Allocations,
        maxNrofMultiBands,
        maxCellSFTD,
        maxReportConfigId,
        maxNrofSRI_PUSCH_Mappings,
        maxNrofSRI_PUSCH_Mappings_1,
        CellIdentity,
        ShortMAC_I,
    ]

class NR_UE_Variables:

    _name_  = 'NR-UE-Variables'
    _oid_   = []
    
    _obj_ = [
        'VarMeasConfig',
        'VarMeasReportList',
        'VarMeasReport',
        'CellsTriggeredList',
        'VarResumeMAC-Input',
        ]
    _type_ = [
        'VarMeasConfig',
        'VarMeasReportList',
        'VarMeasReport',
        'CellsTriggeredList',
        'VarResumeMAC-Input',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< VarMeasConfig >-----#
    VarMeasConfig = SEQ(name='VarMeasConfig', mode=MODE_TYPE)
    _VarMeasConfig_measIdList = SEQ_OF(name='measIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasIdToAddModList')), opt=True)
    _VarMeasConfig_measObjectList = SEQ_OF(name='measObjectList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasObjectToAddModList')), opt=True)
    _VarMeasConfig_reportConfigList = SEQ_OF(name='reportConfigList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ReportConfigToAddModList')), opt=True)
    _VarMeasConfig_quantityConfig = SEQ(name='quantityConfig', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'QuantityConfig')), opt=True)
    _VarMeasConfig_s_MeasureConfig = CHOICE(name='s-MeasureConfig', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __VarMeasConfig_s_MeasureConfig_ssb_RSRP = INT(name='ssb-RSRP', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    __VarMeasConfig_s_MeasureConfig_csi_RSRP = INT(name='csi-RSRP', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RSRP-Range')))
    _VarMeasConfig_s_MeasureConfig._cont = ASN1Dict([
        ('ssb-RSRP', __VarMeasConfig_s_MeasureConfig_ssb_RSRP),
        ('csi-RSRP', __VarMeasConfig_s_MeasureConfig_csi_RSRP),
        ])
    _VarMeasConfig_s_MeasureConfig._ext = []
    VarMeasConfig._cont = ASN1Dict([
        ('measIdList', _VarMeasConfig_measIdList),
        ('measObjectList', _VarMeasConfig_measObjectList),
        ('reportConfigList', _VarMeasConfig_reportConfigList),
        ('quantityConfig', _VarMeasConfig_quantityConfig),
        ('s-MeasureConfig', _VarMeasConfig_s_MeasureConfig),
        ])
    VarMeasConfig._ext = []
    
    #-----< VarMeasReportList >-----#
    VarMeasReportList = SEQ_OF(name='VarMeasReportList', mode=MODE_TYPE)
    _VarMeasReportList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-UE-Variables', 'VarMeasReport')))
    VarMeasReportList._cont = _VarMeasReportList__item_
    VarMeasReportList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< VarMeasReport >-----#
    VarMeasReport = SEQ(name='VarMeasReport', mode=MODE_TYPE)
    _VarMeasReport_measId = INT(name='measId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasId')))
    _VarMeasReport_cellsTriggeredList = SEQ_OF(name='cellsTriggeredList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-UE-Variables', 'CellsTriggeredList')), opt=True)
    _VarMeasReport_numberOfReportsSent = INT(name='numberOfReportsSent', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    VarMeasReport._cont = ASN1Dict([
        ('measId', _VarMeasReport_measId),
        ('cellsTriggeredList', _VarMeasReport_cellsTriggeredList),
        ('numberOfReportsSent', _VarMeasReport_numberOfReportsSent),
        ])
    VarMeasReport._ext = []
    
    #-----< CellsTriggeredList >-----#
    CellsTriggeredList = SEQ_OF(name='CellsTriggeredList', mode=MODE_TYPE)
    _CellsTriggeredList__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __CellsTriggeredList__item__physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    __CellsTriggeredList__item__physCellIdEUTRA = ENUM(name='physCellIdEUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CellsTriggeredList__item__physCellIdEUTRA._cont = ASN1Dict([('ffsTypeAndValue', 0)])
    __CellsTriggeredList__item__physCellIdEUTRA._ext = []
    _CellsTriggeredList__item_._cont = ASN1Dict([
        ('physCellId', __CellsTriggeredList__item__physCellId),
        ('physCellIdEUTRA', __CellsTriggeredList__item__physCellIdEUTRA),
        ])
    _CellsTriggeredList__item_._ext = []
    CellsTriggeredList._cont = _CellsTriggeredList__item_
    CellsTriggeredList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< VarResumeMAC-Input >-----#
    VarResumeMAC_Input = SEQ(name='VarResumeMAC-Input', mode=MODE_TYPE)
    _VarResumeMAC_Input_sourcePhysCellId = INT(name='sourcePhysCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    _VarResumeMAC_Input_targetCellIdentity = BIT_STR(name='targetCellIdentity', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellIdentity')))
    _VarResumeMAC_Input_source_c_RNTI = INT(name='source-c-RNTI', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RNTI-Value')))
    _VarResumeMAC_Input_resumeDiscriminator = BIT_STR(name='resumeDiscriminator', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _VarResumeMAC_Input_resumeDiscriminator._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    VarResumeMAC_Input._cont = ASN1Dict([
        ('sourcePhysCellId', _VarResumeMAC_Input_sourcePhysCellId),
        ('targetCellIdentity', _VarResumeMAC_Input_targetCellIdentity),
        ('source-c-RNTI', _VarResumeMAC_Input_source_c_RNTI),
        ('resumeDiscriminator', _VarResumeMAC_Input_resumeDiscriminator),
        ])
    VarResumeMAC_Input._ext = []
    
    _all_ = [
        _VarMeasConfig_measIdList,
        _VarMeasConfig_measObjectList,
        _VarMeasConfig_reportConfigList,
        _VarMeasConfig_quantityConfig,
        __VarMeasConfig_s_MeasureConfig_ssb_RSRP,
        __VarMeasConfig_s_MeasureConfig_csi_RSRP,
        _VarMeasConfig_s_MeasureConfig,
        VarMeasConfig,
        _VarMeasReportList__item_,
        VarMeasReportList,
        _VarMeasReport_measId,
        _VarMeasReport_cellsTriggeredList,
        _VarMeasReport_numberOfReportsSent,
        VarMeasReport,
        __CellsTriggeredList__item__physCellId,
        __CellsTriggeredList__item__physCellIdEUTRA,
        _CellsTriggeredList__item_,
        CellsTriggeredList,
        _VarResumeMAC_Input_sourcePhysCellId,
        _VarResumeMAC_Input_targetCellIdentity,
        _VarResumeMAC_Input_source_c_RNTI,
        _VarResumeMAC_Input_resumeDiscriminator,
        VarResumeMAC_Input,
    ]

class NR_InterNodeDefinitions:

    _name_  = 'NR-InterNodeDefinitions'
    _oid_   = []
    
    _obj_ = [
        'HandoverCommand',
        'HandoverCommand-IEs',
        'HandoverPreparationInformation',
        'HandoverPreparationInformation-IEs',
        'AS-Context',
        'ReestabNCellInfoList',
        'ReestabNCellInfo',
        'RRM-Config',
        'CG-Config',
        'CG-Config-IEs',
        'MeasConfigSN',
        'NR-FreqInfo',
        'ConfigRestrictModReqSCG',
        'BandCombinationIndex',
        'CG-ConfigInfo',
        'CG-ConfigInfo-IEs',
        'ConfigRestrictInfoSCG',
        'BandCombinationIndexList',
        'BPC-IndexList',
        'BPC-Index',
        'DRX-Info',
        'MeasConfigMN',
        'MeasurementTimingConfiguration',
        'MeasurementTimingConfiguration-IEs',
        'MeasTimingList',
        'MeasTiming',
        'CandidateCellInfoList',
        'CandidateCellInfo',
        'CandidateRS-IndexInfoListSSB',
        'CandidateRS-IndexInfoSSB',
        'CandidateRS-IndexInfoListCSI-RS',
        'CandidateRS-IndexInfoCSI-RS',
        'maxMeasFreqsMN',
        ]
    _type_ = [
        'HandoverCommand',
        'HandoverCommand-IEs',
        'HandoverPreparationInformation',
        'HandoverPreparationInformation-IEs',
        'AS-Context',
        'ReestabNCellInfoList',
        'ReestabNCellInfo',
        'RRM-Config',
        'CG-Config',
        'CG-Config-IEs',
        'MeasConfigSN',
        'NR-FreqInfo',
        'ConfigRestrictModReqSCG',
        'BandCombinationIndex',
        'CG-ConfigInfo',
        'CG-ConfigInfo-IEs',
        'ConfigRestrictInfoSCG',
        'BandCombinationIndexList',
        'BPC-IndexList',
        'BPC-Index',
        'DRX-Info',
        'MeasConfigMN',
        'MeasurementTimingConfiguration',
        'MeasurementTimingConfiguration-IEs',
        'MeasTimingList',
        'MeasTiming',
        'CandidateCellInfoList',
        'CandidateCellInfo',
        'CandidateRS-IndexInfoListSSB',
        'CandidateRS-IndexInfoSSB',
        'CandidateRS-IndexInfoListCSI-RS',
        'CandidateRS-IndexInfoCSI-RS',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxMeasFreqsMN',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< HandoverCommand >-----#
    HandoverCommand = SEQ(name='HandoverCommand', mode=MODE_TYPE)
    _HandoverCommand_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __HandoverCommand_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___HandoverCommand_criticalExtensions_c1_handoverCommand = SEQ(name='handoverCommand', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'HandoverCommand-IEs')))
    ___HandoverCommand_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverCommand_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_criticalExtensions_c1._cont = ASN1Dict([
        ('handoverCommand', ___HandoverCommand_criticalExtensions_c1_handoverCommand),
        ('spare3', ___HandoverCommand_criticalExtensions_c1_spare3),
        ('spare2', ___HandoverCommand_criticalExtensions_c1_spare2),
        ('spare1', ___HandoverCommand_criticalExtensions_c1_spare1),
        ])
    __HandoverCommand_criticalExtensions_c1._ext = []
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __HandoverCommand_criticalExtensions_criticalExtensionsFuture._ext = []
    _HandoverCommand_criticalExtensions._cont = ASN1Dict([
        ('c1', __HandoverCommand_criticalExtensions_c1),
        ('criticalExtensionsFuture', __HandoverCommand_criticalExtensions_criticalExtensionsFuture),
        ])
    _HandoverCommand_criticalExtensions._ext = []
    HandoverCommand._cont = ASN1Dict([
        ('criticalExtensions', _HandoverCommand_criticalExtensions),
        ])
    HandoverCommand._ext = []
    
    #-----< HandoverCommand-IEs >-----#
    HandoverCommand_IEs = SEQ(name='HandoverCommand-IEs', mode=MODE_TYPE)
    _HandoverCommand_IEs_handoverCommandMessage = OCT_STR(name='handoverCommandMessage', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverCommand_IEs_handoverCommandMessage_contain = SEQ(name='_cont_handoverCommandMessage', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration')))
    _HandoverCommand_IEs_handoverCommandMessage._const_cont = __HandoverCommand_IEs_handoverCommandMessage_contain
    _HandoverCommand_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HandoverCommand_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _HandoverCommand_IEs_nonCriticalExtension._ext = []
    HandoverCommand_IEs._cont = ASN1Dict([
        ('handoverCommandMessage', _HandoverCommand_IEs_handoverCommandMessage),
        ('nonCriticalExtension', _HandoverCommand_IEs_nonCriticalExtension),
        ])
    HandoverCommand_IEs._ext = []
    
    #-----< HandoverPreparationInformation >-----#
    HandoverPreparationInformation = SEQ(name='HandoverPreparationInformation', mode=MODE_TYPE)
    _HandoverPreparationInformation_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __HandoverPreparationInformation_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation = SEQ(name='handoverPreparationInformation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'HandoverPreparationInformation-IEs')))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___HandoverPreparationInformation_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverPreparationInformation_criticalExtensions_c1._cont = ASN1Dict([
        ('handoverPreparationInformation', ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation),
        ('spare3', ___HandoverPreparationInformation_criticalExtensions_c1_spare3),
        ('spare2', ___HandoverPreparationInformation_criticalExtensions_c1_spare2),
        ('spare1', ___HandoverPreparationInformation_criticalExtensions_c1_spare1),
        ])
    __HandoverPreparationInformation_criticalExtensions_c1._ext = []
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture._ext = []
    _HandoverPreparationInformation_criticalExtensions._cont = ASN1Dict([
        ('c1', __HandoverPreparationInformation_criticalExtensions_c1),
        ('criticalExtensionsFuture', __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture),
        ])
    _HandoverPreparationInformation_criticalExtensions._ext = []
    HandoverPreparationInformation._cont = ASN1Dict([
        ('criticalExtensions', _HandoverPreparationInformation_criticalExtensions),
        ])
    HandoverPreparationInformation._ext = []
    
    #-----< HandoverPreparationInformation-IEs >-----#
    HandoverPreparationInformation_IEs = SEQ(name='HandoverPreparationInformation-IEs', mode=MODE_TYPE)
    _HandoverPreparationInformation_IEs_ue_CapabilityRAT_List = SEQ_OF(name='ue-CapabilityRAT-List', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-CapabilityRAT-ContainerList')))
    _HandoverPreparationInformation_IEs_sourceConfig = OCT_STR(name='sourceConfig', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __HandoverPreparationInformation_IEs_sourceConfig_contain = SEQ(name='_cont_sourceConfig', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration')))
    _HandoverPreparationInformation_IEs_sourceConfig._const_cont = __HandoverPreparationInformation_IEs_sourceConfig_contain
    _HandoverPreparationInformation_IEs_rrm_Config = SEQ(name='rrm-Config', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'RRM-Config')), opt=True)
    _HandoverPreparationInformation_IEs_as_Context = SEQ(name='as-Context', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'AS-Context')), opt=True)
    _HandoverPreparationInformation_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _HandoverPreparationInformation_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _HandoverPreparationInformation_IEs_nonCriticalExtension._ext = []
    HandoverPreparationInformation_IEs._cont = ASN1Dict([
        ('ue-CapabilityRAT-List', _HandoverPreparationInformation_IEs_ue_CapabilityRAT_List),
        ('sourceConfig', _HandoverPreparationInformation_IEs_sourceConfig),
        ('rrm-Config', _HandoverPreparationInformation_IEs_rrm_Config),
        ('as-Context', _HandoverPreparationInformation_IEs_as_Context),
        ('nonCriticalExtension', _HandoverPreparationInformation_IEs_nonCriticalExtension),
        ])
    HandoverPreparationInformation_IEs._ext = []
    
    #-----< AS-Context >-----#
    AS_Context = SEQ(name='AS-Context', mode=MODE_TYPE)
    _AS_Context_reestablishmentInfo = SEQ(name='reestablishmentInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __AS_Context_reestablishmentInfo_sourcePhysCellId = INT(name='sourcePhysCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    __AS_Context_reestablishmentInfo_targetCellShortMAC_I = BIT_STR(name='targetCellShortMAC-I', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ShortMAC-I')))
    __AS_Context_reestablishmentInfo_additionalReestabInfoList = SEQ_OF(name='additionalReestabInfoList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'ReestabNCellInfoList')), opt=True)
    _AS_Context_reestablishmentInfo._cont = ASN1Dict([
        ('sourcePhysCellId', __AS_Context_reestablishmentInfo_sourcePhysCellId),
        ('targetCellShortMAC-I', __AS_Context_reestablishmentInfo_targetCellShortMAC_I),
        ('additionalReestabInfoList', __AS_Context_reestablishmentInfo_additionalReestabInfoList),
        ])
    _AS_Context_reestablishmentInfo._ext = []
    _AS_Context_configRestrictInfo = SEQ(name='configRestrictInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'ConfigRestrictInfoSCG')), opt=True)
    AS_Context._cont = ASN1Dict([
        ('reestablishmentInfo', _AS_Context_reestablishmentInfo),
        ('configRestrictInfo', _AS_Context_configRestrictInfo),
        ])
    AS_Context._ext = []
    
    #-----< ReestabNCellInfoList >-----#
    ReestabNCellInfoList = SEQ_OF(name='ReestabNCellInfoList', mode=MODE_TYPE)
    _ReestabNCellInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'ReestabNCellInfo')))
    ReestabNCellInfoList._cont = _ReestabNCellInfoList__item_
    ReestabNCellInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< ReestabNCellInfo >-----#
    ReestabNCellInfo = SEQ(name='ReestabNCellInfo', mode=MODE_TYPE)
    _ReestabNCellInfo_cellIdentity = BIT_STR(name='cellIdentity', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CellIdentity')))
    _ReestabNCellInfo_key_gNodeB_Star = BIT_STR(name='key-gNodeB-Star', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReestabNCellInfo_key_gNodeB_Star._const_sz = ASN1Set(rv=[256], rr=[], ev=None, er=[])
    _ReestabNCellInfo_shortMAC_I = BIT_STR(name='shortMAC-I', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ShortMAC-I')))
    ReestabNCellInfo._cont = ASN1Dict([
        ('cellIdentity', _ReestabNCellInfo_cellIdentity),
        ('key-gNodeB-Star', _ReestabNCellInfo_key_gNodeB_Star),
        ('shortMAC-I', _ReestabNCellInfo_shortMAC_I),
        ])
    ReestabNCellInfo._ext = []
    
    #-----< RRM-Config >-----#
    RRM_Config = SEQ(name='RRM-Config', mode=MODE_TYPE)
    _RRM_Config_ue_InactiveTime = ENUM(name='ue-InactiveTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _RRM_Config_ue_InactiveTime._cont = ASN1Dict([('s1', 0), ('s2', 1), ('s3', 2), ('s5', 3), ('s7', 4), ('s10', 5), ('s15', 6), ('s20', 7), ('s25', 8), ('s30', 9), ('s40', 10), ('s50', 11), ('min1', 12), ('min1s20c', 13), ('min1s40', 14), ('min2', 15), ('min2s30', 16), ('min3', 17), ('min3s30', 18), ('min4', 19), ('min5', 20), ('min6', 21), ('min7', 22), ('min8', 23), ('min9', 24), ('min10', 25), ('min12', 26), ('min14', 27), ('min17', 28), ('min20', 29), ('min24', 30), ('min28', 31), ('min33', 32), ('min38', 33), ('min44', 34), ('min50', 35), ('hr1', 36), ('hr1min30', 37), ('hr2', 38), ('hr2min30', 39), ('hr3', 40), ('hr3min30', 41), ('hr4', 42), ('hr5', 43), ('hr6', 44), ('hr8', 45), ('hr10', 46), ('hr13', 47), ('hr16', 48), ('hr20', 49), ('day1', 50), ('day1hr12', 51), ('day2', 52), ('day2hr12', 53), ('day3', 54), ('day4', 55), ('day5', 56), ('day7', 57), ('day10', 58), ('day14', 59), ('day19', 60), ('day24', 61), ('day30', 62), ('dayMoreThan30', 63)])
    _RRM_Config_ue_InactiveTime._ext = []
    _RRM_Config_candidateCellInfoList = SEQ_OF(name='candidateCellInfoList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateCellInfoList')), opt=True)
    RRM_Config._cont = ASN1Dict([
        ('ue-InactiveTime', _RRM_Config_ue_InactiveTime),
        ('candidateCellInfoList', _RRM_Config_candidateCellInfoList),
        ])
    RRM_Config._ext = []
    
    #-----< CG-Config >-----#
    CG_Config = SEQ(name='CG-Config', mode=MODE_TYPE)
    _CG_Config_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CG_Config_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CG_Config_criticalExtensions_c1_cg_Config = SEQ(name='cg-Config', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CG-Config-IEs')))
    ___CG_Config_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CG_Config_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CG_Config_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_Config_criticalExtensions_c1._cont = ASN1Dict([
        ('cg-Config', ___CG_Config_criticalExtensions_c1_cg_Config),
        ('spare3', ___CG_Config_criticalExtensions_c1_spare3),
        ('spare2', ___CG_Config_criticalExtensions_c1_spare2),
        ('spare1', ___CG_Config_criticalExtensions_c1_spare1),
        ])
    __CG_Config_criticalExtensions_c1._ext = []
    __CG_Config_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_Config_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CG_Config_criticalExtensions_criticalExtensionsFuture._ext = []
    _CG_Config_criticalExtensions._cont = ASN1Dict([
        ('c1', __CG_Config_criticalExtensions_c1),
        ('criticalExtensionsFuture', __CG_Config_criticalExtensions_criticalExtensionsFuture),
        ])
    _CG_Config_criticalExtensions._ext = []
    CG_Config._cont = ASN1Dict([
        ('criticalExtensions', _CG_Config_criticalExtensions),
        ])
    CG_Config._ext = []
    
    #-----< CG-Config-IEs >-----#
    CG_Config_IEs = SEQ(name='CG-Config-IEs', mode=MODE_TYPE)
    _CG_Config_IEs_scg_CellGroupConfig = OCT_STR(name='scg-CellGroupConfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_Config_IEs_scg_CellGroupConfig_contain = SEQ(name='_cont_scg-CellGroupConfig', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration')))
    _CG_Config_IEs_scg_CellGroupConfig._const_cont = __CG_Config_IEs_scg_CellGroupConfig_contain
    _CG_Config_IEs_scg_RB_Config = OCT_STR(name='scg-RB-Config', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_Config_IEs_scg_RB_Config_contain = SEQ(name='_cont_scg-RB-Config', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')))
    _CG_Config_IEs_scg_RB_Config._const_cont = __CG_Config_IEs_scg_RB_Config_contain
    _CG_Config_IEs_configRestrictModReq = SEQ(name='configRestrictModReq', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'ConfigRestrictModReqSCG')), opt=True)
    _CG_Config_IEs_drx_InfoSCG = SEQ(name='drx-InfoSCG', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'DRX-Info')), opt=True)
    _CG_Config_IEs_candidateCellInfoListSN = OCT_STR(name='candidateCellInfoListSN', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_Config_IEs_candidateCellInfoListSN_contain = SEQ_OF(name='_cont_candidateCellInfoListSN', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateCellInfoList')))
    _CG_Config_IEs_candidateCellInfoListSN._const_cont = __CG_Config_IEs_candidateCellInfoListSN_contain
    _CG_Config_IEs_measConfigSN = SEQ(name='measConfigSN', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'MeasConfigSN')), opt=True)
    _CG_Config_IEs_selectedBandCombinationNR = INT(name='selectedBandCombinationNR', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BandCombinationIndex')), opt=True)
    _CG_Config_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CG_Config_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CG_Config_IEs_nonCriticalExtension._ext = []
    CG_Config_IEs._cont = ASN1Dict([
        ('scg-CellGroupConfig', _CG_Config_IEs_scg_CellGroupConfig),
        ('scg-RB-Config', _CG_Config_IEs_scg_RB_Config),
        ('configRestrictModReq', _CG_Config_IEs_configRestrictModReq),
        ('drx-InfoSCG', _CG_Config_IEs_drx_InfoSCG),
        ('candidateCellInfoListSN', _CG_Config_IEs_candidateCellInfoListSN),
        ('measConfigSN', _CG_Config_IEs_measConfigSN),
        ('selectedBandCombinationNR', _CG_Config_IEs_selectedBandCombinationNR),
        ('nonCriticalExtension', _CG_Config_IEs_nonCriticalExtension),
        ])
    CG_Config_IEs._ext = []
    
    #-----< MeasConfigSN >-----#
    MeasConfigSN = SEQ(name='MeasConfigSN', mode=MODE_TYPE)
    _MeasConfigSN_measuredFrequenciesFR1 = SEQ_OF(name='measuredFrequenciesFR1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasConfigSN_measuredFrequenciesFR1__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'NR-FreqInfo')))
    _MeasConfigSN_measuredFrequenciesFR1._cont = __MeasConfigSN_measuredFrequenciesFR1__item_
    _MeasConfigSN_measuredFrequenciesFR1._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    MeasConfigSN._cont = ASN1Dict([
        ('measuredFrequenciesFR1', _MeasConfigSN_measuredFrequenciesFR1),
        ])
    MeasConfigSN._ext = []
    
    #-----< NR-FreqInfo >-----#
    NR_FreqInfo = SEQ(name='NR-FreqInfo', mode=MODE_TYPE)
    _NR_FreqInfo_measuredFrequency = INT(name='measuredFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    NR_FreqInfo._cont = ASN1Dict([
        ('measuredFrequency', _NR_FreqInfo_measuredFrequency),
        ])
    NR_FreqInfo._ext = []
    
    #-----< ConfigRestrictModReqSCG >-----#
    ConfigRestrictModReqSCG = SEQ(name='ConfigRestrictModReqSCG', mode=MODE_TYPE)
    _ConfigRestrictModReqSCG_requestedBC_MRDC = INT(name='requestedBC-MRDC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BandCombinationIndex')), opt=True)
    _ConfigRestrictModReqSCG_requestedBPC_ListMRDC = SEQ_OF(name='requestedBPC-ListMRDC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BPC-IndexList')), opt=True)
    _ConfigRestrictModReqSCG_requestedP_MaxFR1 = INT(name='requestedP-MaxFR1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P-Max')), opt=True)
    ConfigRestrictModReqSCG._cont = ASN1Dict([
        ('requestedBC-MRDC', _ConfigRestrictModReqSCG_requestedBC_MRDC),
        ('requestedBPC-ListMRDC', _ConfigRestrictModReqSCG_requestedBPC_ListMRDC),
        ('requestedP-MaxFR1', _ConfigRestrictModReqSCG_requestedP_MaxFR1),
        ])
    ConfigRestrictModReqSCG._ext = []
    
    #-----< BandCombinationIndex >-----#
    BandCombinationIndex = INT(name='BandCombinationIndex', mode=MODE_TYPE)
    BandCombinationIndex._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< CG-ConfigInfo >-----#
    CG_ConfigInfo = SEQ(name='CG-ConfigInfo', mode=MODE_TYPE)
    _CG_ConfigInfo_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __CG_ConfigInfo_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___CG_ConfigInfo_criticalExtensions_c1_cg_ConfigInfo = SEQ(name='cg-ConfigInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CG-ConfigInfo-IEs')))
    ___CG_ConfigInfo_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CG_ConfigInfo_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CG_ConfigInfo_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_ConfigInfo_criticalExtensions_c1._cont = ASN1Dict([
        ('cg-ConfigInfo', ___CG_ConfigInfo_criticalExtensions_c1_cg_ConfigInfo),
        ('spare3', ___CG_ConfigInfo_criticalExtensions_c1_spare3),
        ('spare2', ___CG_ConfigInfo_criticalExtensions_c1_spare2),
        ('spare1', ___CG_ConfigInfo_criticalExtensions_c1_spare1),
        ])
    __CG_ConfigInfo_criticalExtensions_c1._ext = []
    __CG_ConfigInfo_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_ConfigInfo_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __CG_ConfigInfo_criticalExtensions_criticalExtensionsFuture._ext = []
    _CG_ConfigInfo_criticalExtensions._cont = ASN1Dict([
        ('c1', __CG_ConfigInfo_criticalExtensions_c1),
        ('criticalExtensionsFuture', __CG_ConfigInfo_criticalExtensions_criticalExtensionsFuture),
        ])
    _CG_ConfigInfo_criticalExtensions._ext = []
    CG_ConfigInfo._cont = ASN1Dict([
        ('criticalExtensions', _CG_ConfigInfo_criticalExtensions),
        ])
    CG_ConfigInfo._ext = []
    
    #-----< CG-ConfigInfo-IEs >-----#
    CG_ConfigInfo_IEs = SEQ(name='CG-ConfigInfo-IEs', mode=MODE_TYPE)
    _CG_ConfigInfo_IEs_ue_CapabilityInfo = OCT_STR(name='ue-CapabilityInfo', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_ue_CapabilityInfo_contain = SEQ_OF(name='_cont_ue-CapabilityInfo', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'UE-CapabilityRAT-ContainerList')))
    _CG_ConfigInfo_IEs_ue_CapabilityInfo._const_cont = __CG_ConfigInfo_IEs_ue_CapabilityInfo_contain
    _CG_ConfigInfo_IEs_candidateCellInfoListMN = SEQ_OF(name='candidateCellInfoListMN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateCellInfoList')), opt=True)
    _CG_ConfigInfo_IEs_candidateCellInfoListSN = OCT_STR(name='candidateCellInfoListSN', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_candidateCellInfoListSN_contain = SEQ_OF(name='_cont_candidateCellInfoListSN', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateCellInfoList')))
    _CG_ConfigInfo_IEs_candidateCellInfoListSN._const_cont = __CG_ConfigInfo_IEs_candidateCellInfoListSN_contain
    _CG_ConfigInfo_IEs_measResultCellListSFTD = SEQ_OF(name='measResultCellListSFTD', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultCellListSFTD')), opt=True)
    _CG_ConfigInfo_IEs_scgFailureInfo = SEQ(name='scgFailureInfo', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_scgFailureInfo_failureType = ENUM(name='failureType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CG_ConfigInfo_IEs_scgFailureInfo_failureType._cont = ASN1Dict([('t310-Expiry', 0), ('randomAccessProblem', 1), ('rlc-MaxNumRetx', 2), ('scg-ChangeFailure', 3), ('scg-reconfigFailure', 4), ('srb3-IntegrityFailure', 5)])
    __CG_ConfigInfo_IEs_scgFailureInfo_failureType._ext = []
    __CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG = OCT_STR(name='measResultSCG', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG_contain = SEQ(name='_cont_measResultSCG', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasResultSCG-Failure')))
    __CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG._const_cont = ___CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG_contain
    _CG_ConfigInfo_IEs_scgFailureInfo._cont = ASN1Dict([
        ('failureType', __CG_ConfigInfo_IEs_scgFailureInfo_failureType),
        ('measResultSCG', __CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG),
        ])
    _CG_ConfigInfo_IEs_scgFailureInfo._ext = []
    _CG_ConfigInfo_IEs_configRestrictInfo = SEQ(name='configRestrictInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'ConfigRestrictInfoSCG')), opt=True)
    _CG_ConfigInfo_IEs_drx_InfoMCG = SEQ(name='drx-InfoMCG', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'DRX-Info')), opt=True)
    _CG_ConfigInfo_IEs_measConfigMN = SEQ(name='measConfigMN', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'MeasConfigMN')), opt=True)
    _CG_ConfigInfo_IEs_sourceConfigSCG = OCT_STR(name='sourceConfigSCG', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_sourceConfigSCG_contain = SEQ(name='_cont_sourceConfigSCG', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RRCReconfiguration')))
    _CG_ConfigInfo_IEs_sourceConfigSCG._const_cont = __CG_ConfigInfo_IEs_sourceConfigSCG_contain
    _CG_ConfigInfo_IEs_scg_RB_Config = OCT_STR(name='scg-RB-Config', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_scg_RB_Config_contain = SEQ(name='_cont_scg-RB-Config', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')))
    _CG_ConfigInfo_IEs_scg_RB_Config._const_cont = __CG_ConfigInfo_IEs_scg_RB_Config_contain
    _CG_ConfigInfo_IEs_mcg_RB_Config = OCT_STR(name='mcg-RB-Config', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __CG_ConfigInfo_IEs_mcg_RB_Config_contain = SEQ(name='_cont_mcg-RB-Config', mode=MODE_TYPE, typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'RadioBearerConfig')))
    _CG_ConfigInfo_IEs_mcg_RB_Config._const_cont = __CG_ConfigInfo_IEs_mcg_RB_Config_contain
    _CG_ConfigInfo_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CG_ConfigInfo_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _CG_ConfigInfo_IEs_nonCriticalExtension._ext = []
    CG_ConfigInfo_IEs._cont = ASN1Dict([
        ('ue-CapabilityInfo', _CG_ConfigInfo_IEs_ue_CapabilityInfo),
        ('candidateCellInfoListMN', _CG_ConfigInfo_IEs_candidateCellInfoListMN),
        ('candidateCellInfoListSN', _CG_ConfigInfo_IEs_candidateCellInfoListSN),
        ('measResultCellListSFTD', _CG_ConfigInfo_IEs_measResultCellListSFTD),
        ('scgFailureInfo', _CG_ConfigInfo_IEs_scgFailureInfo),
        ('configRestrictInfo', _CG_ConfigInfo_IEs_configRestrictInfo),
        ('drx-InfoMCG', _CG_ConfigInfo_IEs_drx_InfoMCG),
        ('measConfigMN', _CG_ConfigInfo_IEs_measConfigMN),
        ('sourceConfigSCG', _CG_ConfigInfo_IEs_sourceConfigSCG),
        ('scg-RB-Config', _CG_ConfigInfo_IEs_scg_RB_Config),
        ('mcg-RB-Config', _CG_ConfigInfo_IEs_mcg_RB_Config),
        ('nonCriticalExtension', _CG_ConfigInfo_IEs_nonCriticalExtension),
        ])
    CG_ConfigInfo_IEs._ext = []
    
    #-----< ConfigRestrictInfoSCG >-----#
    ConfigRestrictInfoSCG = SEQ(name='ConfigRestrictInfoSCG', mode=MODE_TYPE)
    _ConfigRestrictInfoSCG_allowedBC_ListMRDC = SEQ_OF(name='allowedBC-ListMRDC', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BandCombinationIndexList')), opt=True)
    _ConfigRestrictInfoSCG_allowedBPC_ListMRDC = SEQ_OF(name='allowedBPC-ListMRDC', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BPC-IndexList')), opt=True)
    _ConfigRestrictInfoSCG_powerCoordination_FR1 = SEQ(name='powerCoordination-FR1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxNR = INT(name='p-maxNR', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P-Max')), opt=True)
    __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxEUTRA = INT(name='p-maxEUTRA', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'P-Max')), opt=True)
    _ConfigRestrictInfoSCG_powerCoordination_FR1._cont = ASN1Dict([
        ('p-maxNR', __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxNR),
        ('p-maxEUTRA', __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxEUTRA),
        ])
    _ConfigRestrictInfoSCG_powerCoordination_FR1._ext = []
    _ConfigRestrictInfoSCG_servCellIndexRangeSCG = SEQ(name='servCellIndexRangeSCG', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ConfigRestrictInfoSCG_servCellIndexRangeSCG_lowBound = INT(name='lowBound', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    __ConfigRestrictInfoSCG_servCellIndexRangeSCG_upBound = INT(name='upBound', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ServCellIndex')))
    _ConfigRestrictInfoSCG_servCellIndexRangeSCG._cont = ASN1Dict([
        ('lowBound', __ConfigRestrictInfoSCG_servCellIndexRangeSCG_lowBound),
        ('upBound', __ConfigRestrictInfoSCG_servCellIndexRangeSCG_upBound),
        ])
    _ConfigRestrictInfoSCG_servCellIndexRangeSCG._ext = []
    _ConfigRestrictInfoSCG_maxMeasFreqsSCG_NR = INT(name='maxMeasFreqsSCG-NR', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfigRestrictInfoSCG_maxMeasFreqsSCG_NR._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    ConfigRestrictInfoSCG._cont = ASN1Dict([
        ('allowedBC-ListMRDC', _ConfigRestrictInfoSCG_allowedBC_ListMRDC),
        ('allowedBPC-ListMRDC', _ConfigRestrictInfoSCG_allowedBPC_ListMRDC),
        ('powerCoordination-FR1', _ConfigRestrictInfoSCG_powerCoordination_FR1),
        ('servCellIndexRangeSCG', _ConfigRestrictInfoSCG_servCellIndexRangeSCG),
        ('maxMeasFreqsSCG-NR', _ConfigRestrictInfoSCG_maxMeasFreqsSCG_NR),
        ])
    ConfigRestrictInfoSCG._ext = []
    
    #-----< BandCombinationIndexList >-----#
    BandCombinationIndexList = SEQ_OF(name='BandCombinationIndexList', mode=MODE_TYPE)
    _BandCombinationIndexList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BandCombinationIndex')))
    BandCombinationIndexList._cont = _BandCombinationIndexList__item_
    BandCombinationIndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BPC-IndexList >-----#
    BPC_IndexList = SEQ_OF(name='BPC-IndexList', mode=MODE_TYPE)
    _BPC_IndexList__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'BPC-Index')))
    BPC_IndexList._cont = _BPC_IndexList__item_
    BPC_IndexList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< BPC-Index >-----#
    BPC_Index = INT(name='BPC-Index', mode=MODE_TYPE)
    BPC_Index._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65536)], ev=None, er=[])
    
    #-----< DRX-Info >-----#
    DRX_Info = SEQ(name='DRX-Info', mode=MODE_TYPE)
    _DRX_Info_drx_LongCycleStartOffset = CHOICE(name='drx-LongCycleStartOffset', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms10 = INT(name='ms10', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms10._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms20 = INT(name='ms20', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms20._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=19)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms32 = INT(name='ms32', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms32._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=31)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms40 = INT(name='ms40', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms40._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=39)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms60 = INT(name='ms60', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms60._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=59)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms64 = INT(name='ms64', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms64._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=63)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms70 = INT(name='ms70', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms70._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=69)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms80 = INT(name='ms80', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms80._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=79)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms128 = INT(name='ms128', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms128._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms160 = INT(name='ms160', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms160._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=159)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms256 = INT(name='ms256', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms256._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms320 = INT(name='ms320', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms320._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=319)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms512 = INT(name='ms512', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms512._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=511)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms640 = INT(name='ms640', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms640._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=639)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms1024 = INT(name='ms1024', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms1024._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1023)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms1280 = INT(name='ms1280', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms1280._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1279)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms2048 = INT(name='ms2048', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms2048._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2047)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms2560 = INT(name='ms2560', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms2560._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2559)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms5120 = INT(name='ms5120', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms5120._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=5119)], ev=None, er=[])
    __DRX_Info_drx_LongCycleStartOffset_ms10240 = INT(name='ms10240', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_drx_LongCycleStartOffset_ms10240._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=10239)], ev=None, er=[])
    _DRX_Info_drx_LongCycleStartOffset._cont = ASN1Dict([
        ('ms10', __DRX_Info_drx_LongCycleStartOffset_ms10),
        ('ms20', __DRX_Info_drx_LongCycleStartOffset_ms20),
        ('ms32', __DRX_Info_drx_LongCycleStartOffset_ms32),
        ('ms40', __DRX_Info_drx_LongCycleStartOffset_ms40),
        ('ms60', __DRX_Info_drx_LongCycleStartOffset_ms60),
        ('ms64', __DRX_Info_drx_LongCycleStartOffset_ms64),
        ('ms70', __DRX_Info_drx_LongCycleStartOffset_ms70),
        ('ms80', __DRX_Info_drx_LongCycleStartOffset_ms80),
        ('ms128', __DRX_Info_drx_LongCycleStartOffset_ms128),
        ('ms160', __DRX_Info_drx_LongCycleStartOffset_ms160),
        ('ms256', __DRX_Info_drx_LongCycleStartOffset_ms256),
        ('ms320', __DRX_Info_drx_LongCycleStartOffset_ms320),
        ('ms512', __DRX_Info_drx_LongCycleStartOffset_ms512),
        ('ms640', __DRX_Info_drx_LongCycleStartOffset_ms640),
        ('ms1024', __DRX_Info_drx_LongCycleStartOffset_ms1024),
        ('ms1280', __DRX_Info_drx_LongCycleStartOffset_ms1280),
        ('ms2048', __DRX_Info_drx_LongCycleStartOffset_ms2048),
        ('ms2560', __DRX_Info_drx_LongCycleStartOffset_ms2560),
        ('ms5120', __DRX_Info_drx_LongCycleStartOffset_ms5120),
        ('ms10240', __DRX_Info_drx_LongCycleStartOffset_ms10240),
        ])
    _DRX_Info_drx_LongCycleStartOffset._ext = []
    _DRX_Info_shortDRX = SEQ(name='shortDRX', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __DRX_Info_shortDRX_drx_ShortCycle = ENUM(name='drx-ShortCycle', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_shortDRX_drx_ShortCycle._cont = ASN1Dict([('ms2', 0), ('ms3', 1), ('ms4', 2), ('ms5', 3), ('ms6', 4), ('ms7', 5), ('ms8', 6), ('ms10', 7), ('ms14', 8), ('ms16', 9), ('ms20', 10), ('ms30', 11), ('ms32', 12), ('ms35', 13), ('ms40', 14), ('ms64', 15), ('ms80', 16), ('ms128', 17), ('ms160', 18), ('ms256', 19), ('ms320', 20), ('ms512', 21), ('ms640', 22), ('spare9', 23), ('spare8', 24), ('spare7', 25), ('spare6', 26), ('spare5', 27), ('spare4', 28), ('spare3', 29), ('spare2', 30), ('spare1', 31)])
    __DRX_Info_shortDRX_drx_ShortCycle._ext = []
    __DRX_Info_shortDRX_drx_ShortCycleTimer = INT(name='drx-ShortCycleTimer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __DRX_Info_shortDRX_drx_ShortCycleTimer._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _DRX_Info_shortDRX._cont = ASN1Dict([
        ('drx-ShortCycle', __DRX_Info_shortDRX_drx_ShortCycle),
        ('drx-ShortCycleTimer', __DRX_Info_shortDRX_drx_ShortCycleTimer),
        ])
    _DRX_Info_shortDRX._ext = []
    DRX_Info._cont = ASN1Dict([
        ('drx-LongCycleStartOffset', _DRX_Info_drx_LongCycleStartOffset),
        ('shortDRX', _DRX_Info_shortDRX),
        ])
    DRX_Info._ext = []
    
    #-----< MeasConfigMN >-----#
    MeasConfigMN = SEQ(name='MeasConfigMN', mode=MODE_TYPE)
    _MeasConfigMN_measuredFrequenciesMN = SEQ_OF(name='measuredFrequenciesMN', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __MeasConfigMN_measuredFrequenciesMN__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'NR-FreqInfo')))
    _MeasConfigMN_measuredFrequenciesMN._cont = __MeasConfigMN_measuredFrequenciesMN__item_
    _MeasConfigMN_measuredFrequenciesMN._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    _MeasConfigMN_measGapConfigFR1 = SEQ(name='measGapConfigFR1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'GapConfig')), opt=True)
    _MeasConfigMN_gapPurpose = ENUM(name='gapPurpose', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasConfigMN_gapPurpose._cont = ASN1Dict([('perUE', 0), ('perFR1', 1)])
    _MeasConfigMN_gapPurpose._ext = []
    MeasConfigMN._cont = ASN1Dict([
        ('measuredFrequenciesMN', _MeasConfigMN_measuredFrequenciesMN),
        ('measGapConfigFR1', _MeasConfigMN_measGapConfigFR1),
        ('gapPurpose', _MeasConfigMN_gapPurpose),
        ])
    MeasConfigMN._ext = []
    
    #-----< MeasurementTimingConfiguration >-----#
    MeasurementTimingConfiguration = SEQ(name='MeasurementTimingConfiguration', mode=MODE_TYPE)
    _MeasurementTimingConfiguration_criticalExtensions = CHOICE(name='criticalExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __MeasurementTimingConfiguration_criticalExtensions_c1 = CHOICE(name='c1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    ___MeasurementTimingConfiguration_criticalExtensions_c1_measTimingConf = SEQ(name='measTimingConf', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'MeasurementTimingConfiguration-IEs')))
    ___MeasurementTimingConfiguration_criticalExtensions_c1_spare3 = NULL(name='spare3', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementTimingConfiguration_criticalExtensions_c1_spare2 = NULL(name='spare2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___MeasurementTimingConfiguration_criticalExtensions_c1_spare1 = NULL(name='spare1', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasurementTimingConfiguration_criticalExtensions_c1._cont = ASN1Dict([
        ('measTimingConf', ___MeasurementTimingConfiguration_criticalExtensions_c1_measTimingConf),
        ('spare3', ___MeasurementTimingConfiguration_criticalExtensions_c1_spare3),
        ('spare2', ___MeasurementTimingConfiguration_criticalExtensions_c1_spare2),
        ('spare1', ___MeasurementTimingConfiguration_criticalExtensions_c1_spare1),
        ])
    __MeasurementTimingConfiguration_criticalExtensions_c1._ext = []
    __MeasurementTimingConfiguration_criticalExtensions_criticalExtensionsFuture = SEQ(name='criticalExtensionsFuture', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __MeasurementTimingConfiguration_criticalExtensions_criticalExtensionsFuture._cont = ASN1Dict([
        ])
    __MeasurementTimingConfiguration_criticalExtensions_criticalExtensionsFuture._ext = []
    _MeasurementTimingConfiguration_criticalExtensions._cont = ASN1Dict([
        ('c1', __MeasurementTimingConfiguration_criticalExtensions_c1),
        ('criticalExtensionsFuture', __MeasurementTimingConfiguration_criticalExtensions_criticalExtensionsFuture),
        ])
    _MeasurementTimingConfiguration_criticalExtensions._ext = []
    MeasurementTimingConfiguration._cont = ASN1Dict([
        ('criticalExtensions', _MeasurementTimingConfiguration_criticalExtensions),
        ])
    MeasurementTimingConfiguration._ext = []
    
    #-----< MeasurementTimingConfiguration-IEs >-----#
    MeasurementTimingConfiguration_IEs = SEQ(name='MeasurementTimingConfiguration-IEs', mode=MODE_TYPE)
    _MeasurementTimingConfiguration_IEs_measTiming = SEQ_OF(name='measTiming', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'MeasTimingList')), opt=True)
    _MeasurementTimingConfiguration_IEs_nonCriticalExtension = SEQ(name='nonCriticalExtension', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasurementTimingConfiguration_IEs_nonCriticalExtension._cont = ASN1Dict([
        ])
    _MeasurementTimingConfiguration_IEs_nonCriticalExtension._ext = []
    MeasurementTimingConfiguration_IEs._cont = ASN1Dict([
        ('measTiming', _MeasurementTimingConfiguration_IEs_measTiming),
        ('nonCriticalExtension', _MeasurementTimingConfiguration_IEs_nonCriticalExtension),
        ])
    MeasurementTimingConfiguration_IEs._ext = []
    
    #-----< MeasTimingList >-----#
    MeasTimingList = SEQ_OF(name='MeasTimingList', mode=MODE_TYPE)
    _MeasTimingList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'MeasTiming')))
    MeasTimingList._cont = _MeasTimingList__item_
    MeasTimingList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< MeasTiming >-----#
    MeasTiming = SEQ(name='MeasTiming', mode=MODE_TYPE)
    _MeasTiming_carrierFreq = INT(name='carrierFreq', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')), opt=True)
    _MeasTiming_ssb_MeasurementTimingConfiguration = ENUM(name='ssb-MeasurementTimingConfiguration', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _MeasTiming_ssb_MeasurementTimingConfiguration._cont = ASN1Dict([('ffsTypeAndValue', 0)])
    _MeasTiming_ssb_MeasurementTimingConfiguration._ext = []
    MeasTiming._cont = ASN1Dict([
        ('carrierFreq', _MeasTiming_carrierFreq),
        ('ssb-MeasurementTimingConfiguration', _MeasTiming_ssb_MeasurementTimingConfiguration),
        ])
    MeasTiming._ext = []
    
    #-----< CandidateCellInfoList >-----#
    CandidateCellInfoList = SEQ_OF(name='CandidateCellInfoList', mode=MODE_TYPE)
    _CandidateCellInfoList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateCellInfo')))
    CandidateCellInfoList._cont = _CandidateCellInfoList__item_
    CandidateCellInfoList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=31)], ev=None, er=[])
    
    #-----< CandidateCellInfo >-----#
    CandidateCellInfo = SEQ(name='CandidateCellInfo', mode=MODE_TYPE)
    _CandidateCellInfo_cellIdentification = SEQ(name='cellIdentification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CandidateCellInfo_cellIdentification_physCellId = INT(name='physCellId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'PhysCellId')))
    __CandidateCellInfo_cellIdentification_dl_CarrierFreq = INT(name='dl-CarrierFreq', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'ARFCN-ValueNR')))
    _CandidateCellInfo_cellIdentification._cont = ASN1Dict([
        ('physCellId', __CandidateCellInfo_cellIdentification_physCellId),
        ('dl-CarrierFreq', __CandidateCellInfo_cellIdentification_dl_CarrierFreq),
        ])
    _CandidateCellInfo_cellIdentification._ext = []
    _CandidateCellInfo_measResultCell = SEQ(name='measResultCell', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    _CandidateCellInfo_candidateRS_IndexListSSB = SEQ_OF(name='candidateRS-IndexListSSB', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateRS-IndexInfoListSSB')), opt=True)
    _CandidateCellInfo_candidateRS_IndexListCSI_RS = SEQ_OF(name='candidateRS-IndexListCSI-RS', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateRS-IndexInfoListCSI-RS')), opt=True)
    CandidateCellInfo._cont = ASN1Dict([
        ('cellIdentification', _CandidateCellInfo_cellIdentification),
        ('measResultCell', _CandidateCellInfo_measResultCell),
        ('candidateRS-IndexListSSB', _CandidateCellInfo_candidateRS_IndexListSSB),
        ('candidateRS-IndexListCSI-RS', _CandidateCellInfo_candidateRS_IndexListCSI_RS),
        ])
    CandidateCellInfo._ext = []
    
    #-----< CandidateRS-IndexInfoListSSB >-----#
    CandidateRS_IndexInfoListSSB = SEQ_OF(name='CandidateRS-IndexInfoListSSB', mode=MODE_TYPE)
    _CandidateRS_IndexInfoListSSB__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateRS-IndexInfoSSB')))
    CandidateRS_IndexInfoListSSB._cont = _CandidateRS_IndexInfoListSSB__item_
    CandidateRS_IndexInfoListSSB._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CandidateRS-IndexInfoSSB >-----#
    CandidateRS_IndexInfoSSB = SEQ(name='CandidateRS-IndexInfoSSB', mode=MODE_TYPE)
    _CandidateRS_IndexInfoSSB_ssb_Index = INT(name='ssb-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'SSB-Index')))
    _CandidateRS_IndexInfoSSB_measResultSSB = SEQ(name='measResultSSB', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    CandidateRS_IndexInfoSSB._cont = ASN1Dict([
        ('ssb-Index', _CandidateRS_IndexInfoSSB_ssb_Index),
        ('measResultSSB', _CandidateRS_IndexInfoSSB_measResultSSB),
        ])
    CandidateRS_IndexInfoSSB._ext = []
    
    #-----< CandidateRS-IndexInfoListCSI-RS >-----#
    CandidateRS_IndexInfoListCSI_RS = SEQ_OF(name='CandidateRS-IndexInfoListCSI-RS', mode=MODE_TYPE)
    _CandidateRS_IndexInfoListCSI_RS__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('NR-InterNodeDefinitions', 'CandidateRS-IndexInfoCSI-RS')))
    CandidateRS_IndexInfoListCSI_RS._cont = _CandidateRS_IndexInfoListCSI_RS__item_
    CandidateRS_IndexInfoListCSI_RS._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< CandidateRS-IndexInfoCSI-RS >-----#
    CandidateRS_IndexInfoCSI_RS = SEQ(name='CandidateRS-IndexInfoCSI-RS', mode=MODE_TYPE)
    _CandidateRS_IndexInfoCSI_RS_csi_RS_Index = INT(name='csi-RS-Index', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'CSI-RS-Index')))
    _CandidateRS_IndexInfoCSI_RS_measResultCSI_RS = SEQ(name='measResultCSI-RS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('NR-RRC-PDU-Pre3GPP-Description', 'MeasQuantityResults')), opt=True)
    CandidateRS_IndexInfoCSI_RS._cont = ASN1Dict([
        ('csi-RS-Index', _CandidateRS_IndexInfoCSI_RS_csi_RS_Index),
        ('measResultCSI-RS', _CandidateRS_IndexInfoCSI_RS_measResultCSI_RS),
        ])
    CandidateRS_IndexInfoCSI_RS._ext = []
    
    #-----< maxMeasFreqsMN >-----#
    maxMeasFreqsMN = INT(name='maxMeasFreqsMN', mode=MODE_VALUE)
    maxMeasFreqsMN._val = 32
    
    _all_ = [
        ___HandoverCommand_criticalExtensions_c1_handoverCommand,
        ___HandoverCommand_criticalExtensions_c1_spare3,
        ___HandoverCommand_criticalExtensions_c1_spare2,
        ___HandoverCommand_criticalExtensions_c1_spare1,
        __HandoverCommand_criticalExtensions_c1,
        __HandoverCommand_criticalExtensions_criticalExtensionsFuture,
        _HandoverCommand_criticalExtensions,
        HandoverCommand,
        __HandoverCommand_IEs_handoverCommandMessage_contain,
        _HandoverCommand_IEs_handoverCommandMessage,
        _HandoverCommand_IEs_nonCriticalExtension,
        HandoverCommand_IEs,
        ___HandoverPreparationInformation_criticalExtensions_c1_handoverPreparationInformation,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare3,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare2,
        ___HandoverPreparationInformation_criticalExtensions_c1_spare1,
        __HandoverPreparationInformation_criticalExtensions_c1,
        __HandoverPreparationInformation_criticalExtensions_criticalExtensionsFuture,
        _HandoverPreparationInformation_criticalExtensions,
        HandoverPreparationInformation,
        _HandoverPreparationInformation_IEs_ue_CapabilityRAT_List,
        __HandoverPreparationInformation_IEs_sourceConfig_contain,
        _HandoverPreparationInformation_IEs_sourceConfig,
        _HandoverPreparationInformation_IEs_rrm_Config,
        _HandoverPreparationInformation_IEs_as_Context,
        _HandoverPreparationInformation_IEs_nonCriticalExtension,
        HandoverPreparationInformation_IEs,
        __AS_Context_reestablishmentInfo_sourcePhysCellId,
        __AS_Context_reestablishmentInfo_targetCellShortMAC_I,
        __AS_Context_reestablishmentInfo_additionalReestabInfoList,
        _AS_Context_reestablishmentInfo,
        _AS_Context_configRestrictInfo,
        AS_Context,
        _ReestabNCellInfoList__item_,
        ReestabNCellInfoList,
        _ReestabNCellInfo_cellIdentity,
        _ReestabNCellInfo_key_gNodeB_Star,
        _ReestabNCellInfo_shortMAC_I,
        ReestabNCellInfo,
        _RRM_Config_ue_InactiveTime,
        _RRM_Config_candidateCellInfoList,
        RRM_Config,
        ___CG_Config_criticalExtensions_c1_cg_Config,
        ___CG_Config_criticalExtensions_c1_spare3,
        ___CG_Config_criticalExtensions_c1_spare2,
        ___CG_Config_criticalExtensions_c1_spare1,
        __CG_Config_criticalExtensions_c1,
        __CG_Config_criticalExtensions_criticalExtensionsFuture,
        _CG_Config_criticalExtensions,
        CG_Config,
        __CG_Config_IEs_scg_CellGroupConfig_contain,
        _CG_Config_IEs_scg_CellGroupConfig,
        __CG_Config_IEs_scg_RB_Config_contain,
        _CG_Config_IEs_scg_RB_Config,
        _CG_Config_IEs_configRestrictModReq,
        _CG_Config_IEs_drx_InfoSCG,
        __CG_Config_IEs_candidateCellInfoListSN_contain,
        _CG_Config_IEs_candidateCellInfoListSN,
        _CG_Config_IEs_measConfigSN,
        _CG_Config_IEs_selectedBandCombinationNR,
        _CG_Config_IEs_nonCriticalExtension,
        CG_Config_IEs,
        __MeasConfigSN_measuredFrequenciesFR1__item_,
        _MeasConfigSN_measuredFrequenciesFR1,
        MeasConfigSN,
        _NR_FreqInfo_measuredFrequency,
        NR_FreqInfo,
        _ConfigRestrictModReqSCG_requestedBC_MRDC,
        _ConfigRestrictModReqSCG_requestedBPC_ListMRDC,
        _ConfigRestrictModReqSCG_requestedP_MaxFR1,
        ConfigRestrictModReqSCG,
        BandCombinationIndex,
        ___CG_ConfigInfo_criticalExtensions_c1_cg_ConfigInfo,
        ___CG_ConfigInfo_criticalExtensions_c1_spare3,
        ___CG_ConfigInfo_criticalExtensions_c1_spare2,
        ___CG_ConfigInfo_criticalExtensions_c1_spare1,
        __CG_ConfigInfo_criticalExtensions_c1,
        __CG_ConfigInfo_criticalExtensions_criticalExtensionsFuture,
        _CG_ConfigInfo_criticalExtensions,
        CG_ConfigInfo,
        __CG_ConfigInfo_IEs_ue_CapabilityInfo_contain,
        _CG_ConfigInfo_IEs_ue_CapabilityInfo,
        _CG_ConfigInfo_IEs_candidateCellInfoListMN,
        __CG_ConfigInfo_IEs_candidateCellInfoListSN_contain,
        _CG_ConfigInfo_IEs_candidateCellInfoListSN,
        _CG_ConfigInfo_IEs_measResultCellListSFTD,
        __CG_ConfigInfo_IEs_scgFailureInfo_failureType,
        ___CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG_contain,
        __CG_ConfigInfo_IEs_scgFailureInfo_measResultSCG,
        _CG_ConfigInfo_IEs_scgFailureInfo,
        _CG_ConfigInfo_IEs_configRestrictInfo,
        _CG_ConfigInfo_IEs_drx_InfoMCG,
        _CG_ConfigInfo_IEs_measConfigMN,
        __CG_ConfigInfo_IEs_sourceConfigSCG_contain,
        _CG_ConfigInfo_IEs_sourceConfigSCG,
        __CG_ConfigInfo_IEs_scg_RB_Config_contain,
        _CG_ConfigInfo_IEs_scg_RB_Config,
        __CG_ConfigInfo_IEs_mcg_RB_Config_contain,
        _CG_ConfigInfo_IEs_mcg_RB_Config,
        _CG_ConfigInfo_IEs_nonCriticalExtension,
        CG_ConfigInfo_IEs,
        _ConfigRestrictInfoSCG_allowedBC_ListMRDC,
        _ConfigRestrictInfoSCG_allowedBPC_ListMRDC,
        __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxNR,
        __ConfigRestrictInfoSCG_powerCoordination_FR1_p_maxEUTRA,
        _ConfigRestrictInfoSCG_powerCoordination_FR1,
        __ConfigRestrictInfoSCG_servCellIndexRangeSCG_lowBound,
        __ConfigRestrictInfoSCG_servCellIndexRangeSCG_upBound,
        _ConfigRestrictInfoSCG_servCellIndexRangeSCG,
        _ConfigRestrictInfoSCG_maxMeasFreqsSCG_NR,
        ConfigRestrictInfoSCG,
        _BandCombinationIndexList__item_,
        BandCombinationIndexList,
        _BPC_IndexList__item_,
        BPC_IndexList,
        BPC_Index,
        __DRX_Info_drx_LongCycleStartOffset_ms10,
        __DRX_Info_drx_LongCycleStartOffset_ms20,
        __DRX_Info_drx_LongCycleStartOffset_ms32,
        __DRX_Info_drx_LongCycleStartOffset_ms40,
        __DRX_Info_drx_LongCycleStartOffset_ms60,
        __DRX_Info_drx_LongCycleStartOffset_ms64,
        __DRX_Info_drx_LongCycleStartOffset_ms70,
        __DRX_Info_drx_LongCycleStartOffset_ms80,
        __DRX_Info_drx_LongCycleStartOffset_ms128,
        __DRX_Info_drx_LongCycleStartOffset_ms160,
        __DRX_Info_drx_LongCycleStartOffset_ms256,
        __DRX_Info_drx_LongCycleStartOffset_ms320,
        __DRX_Info_drx_LongCycleStartOffset_ms512,
        __DRX_Info_drx_LongCycleStartOffset_ms640,
        __DRX_Info_drx_LongCycleStartOffset_ms1024,
        __DRX_Info_drx_LongCycleStartOffset_ms1280,
        __DRX_Info_drx_LongCycleStartOffset_ms2048,
        __DRX_Info_drx_LongCycleStartOffset_ms2560,
        __DRX_Info_drx_LongCycleStartOffset_ms5120,
        __DRX_Info_drx_LongCycleStartOffset_ms10240,
        _DRX_Info_drx_LongCycleStartOffset,
        __DRX_Info_shortDRX_drx_ShortCycle,
        __DRX_Info_shortDRX_drx_ShortCycleTimer,
        _DRX_Info_shortDRX,
        DRX_Info,
        __MeasConfigMN_measuredFrequenciesMN__item_,
        _MeasConfigMN_measuredFrequenciesMN,
        _MeasConfigMN_measGapConfigFR1,
        _MeasConfigMN_gapPurpose,
        MeasConfigMN,
        ___MeasurementTimingConfiguration_criticalExtensions_c1_measTimingConf,
        ___MeasurementTimingConfiguration_criticalExtensions_c1_spare3,
        ___MeasurementTimingConfiguration_criticalExtensions_c1_spare2,
        ___MeasurementTimingConfiguration_criticalExtensions_c1_spare1,
        __MeasurementTimingConfiguration_criticalExtensions_c1,
        __MeasurementTimingConfiguration_criticalExtensions_criticalExtensionsFuture,
        _MeasurementTimingConfiguration_criticalExtensions,
        MeasurementTimingConfiguration,
        _MeasurementTimingConfiguration_IEs_measTiming,
        _MeasurementTimingConfiguration_IEs_nonCriticalExtension,
        MeasurementTimingConfiguration_IEs,
        _MeasTimingList__item_,
        MeasTimingList,
        _MeasTiming_carrierFreq,
        _MeasTiming_ssb_MeasurementTimingConfiguration,
        MeasTiming,
        _CandidateCellInfoList__item_,
        CandidateCellInfoList,
        __CandidateCellInfo_cellIdentification_physCellId,
        __CandidateCellInfo_cellIdentification_dl_CarrierFreq,
        _CandidateCellInfo_cellIdentification,
        _CandidateCellInfo_measResultCell,
        _CandidateCellInfo_candidateRS_IndexListSSB,
        _CandidateCellInfo_candidateRS_IndexListCSI_RS,
        CandidateCellInfo,
        _CandidateRS_IndexInfoListSSB__item_,
        CandidateRS_IndexInfoListSSB,
        _CandidateRS_IndexInfoSSB_ssb_Index,
        _CandidateRS_IndexInfoSSB_measResultSSB,
        CandidateRS_IndexInfoSSB,
        _CandidateRS_IndexInfoListCSI_RS__item_,
        CandidateRS_IndexInfoListCSI_RS,
        _CandidateRS_IndexInfoCSI_RS_csi_RS_Index,
        _CandidateRS_IndexInfoCSI_RS_measResultCSI_RS,
        CandidateRS_IndexInfoCSI_RS,
        maxMeasFreqsMN,
    ]

init_modules(NR_RRC_PDU_Pre3GPP_Description, NR_UE_Variables, NR_InterNodeDefinitions)
